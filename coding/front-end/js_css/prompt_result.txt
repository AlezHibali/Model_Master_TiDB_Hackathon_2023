<script>
    document.addEventListener('DOMContentLoaded', function() {
    const urlParams = new URLSearchParams(window.location.search);
    const response = urlParams.get('response');

    if (response) {
        const responseParagraph = document.querySelector('.paragraph-large.bg-neutral-700');
        const modelListContainer = document.createElement('div');

        // Extracting Model_List and display it after 'Related Models'
        const responseParts = response.split('Model_List:');
        const responseData = responseParts[0].trim();
        const modelListData = responseParts[1] ? responseParts[1].trim() : '';

        // Displaying Response in the paragraph without the word "Response"
        responseParagraph.innerText = responseData.replace('Response: ', '');

        if (modelListData) {
        const modelNames = modelListData.split(',');

        const parentContainer = document.querySelector('.w-layout-blockcontainer.container.w-container');

        // Creating cards for each model with clickable links
        modelNames.forEach(modelName => {
            const modelCard = document.createElement('div');
            modelCard.classList.add('model-card');

            const modelTitle = document.createElement('h2');
            modelTitle.classList.add('model-title');
            modelTitle.innerText = modelName;

            // Adding event listener to make the entire card clickable
            modelCard.addEventListener('click', function() {
            // const modelLink = `https://model-master.webflow.io/model/${modelName.toLowerCase()}`;
            const modelLink = `model/${modelName.toLowerCase()}`;
            window.location.href = modelLink;
            });

            modelCard.appendChild(modelTitle);
            modelListContainer.appendChild(modelCard);
        });

        // Inserting Model_List container after 'Related Models' heading
        parentContainer.appendChild(modelListContainer);
        }
    }
    });
</script>

<style>
    .model-card {
    border: 1px solid #ccc;
    padding: 20px;
    margin-bottom: 10px;
    cursor: pointer;
    border-radius: 20px; /* Rounded corners */
    }

    .model-title {
    font-size: 20px;
    font-weight: bold;
    margin-bottom: 10px;
    }

    .paragraph-large.bg-neutral-700 {
    padding: 20px;
    border-radius: 20px; /* Rounded corners */
    margin-bottom: 20px;
    }
</style>

  <script>
    function makeAPIRequest(input_prompt, callback) {
  const encodedInput = encodeURIComponent(input_prompt);
  const apiUrl = `http://localhost:8080/api/prompt2data?prompt=${encodedInput}`;

  const xhr = new XMLHttpRequest();
  xhr.open('GET', apiUrl, true);

  xhr.onreadystatechange = function () {
    if (xhr.readyState === XMLHttpRequest.DONE) {
      if (xhr.status === 200) {
        const jsonData = JSON.parse(xhr.responseText);
        const value1 = jsonData.value1;
        const value2 = jsonData.value2;

        // Instead of returning, pass the values to the callback function
        callback(`Response: ${value1}\nModel_List: ${value2}`);
      } else {
        console.error('Error:', xhr.status, xhr.statusText);

        // Instead of returning, pass the error message to the callback function
        callback(`Error: ${xhr.status} - Possible Cause is lack of REST API at localhost:8080`);
      }
    }
  };

  xhr.send();
}

document.addEventListener('DOMContentLoaded', function() {
  const promptSearchButton = document.getElementById('promptSearchButton');

  if (promptSearchButton) {
    promptSearchButton.addEventListener('click', function(event) {
      event.preventDefault();

      const searchValue = document.getElementById('search').value;

      // Call makeAPIRequest and pass a callback function to handle the response
      makeAPIRequest(searchValue, function(response) {
        // The response from makeAPIRequest will be available here
        // Displaying the response in the alert on the `index.html` page
        // alert(response);

        // After displaying the alert, navigate to prompt-search-result.html with the API response as a query parameter
        const encodedResponse = encodeURIComponent(response);
        window.location.href = `prompt-search-result?response=${encodedResponse}`;
      });
    });
  }
});
  </script>
