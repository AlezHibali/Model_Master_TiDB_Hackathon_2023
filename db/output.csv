model_name,task,libraries,language,license,paper,likes,datasets,downloads_last_month,model_size,model_usage,huggingface_link,abstract,category
Llama-2-7b,Text Generation,PyTorch,English,,https://arxiv.org/pdf/2307.09288.pdf,896,,0,0,2,https://huggingface.co/meta-llama/Llama-2-7b,"This is a form to enable access to Llama 2 on Hugging Face after you have been granted access from Meta. Please visit the Meta website and accept our license terms and acceptable use policy before submitting this form. Requests will be processed in 1-2 days.; Your Hugging Face account email address MUST match the email you provide on the Meta website, or your request will not be approved.; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		; Llama 2 is a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. This is the repository for the 7B pretrained model. Links to other models can be found in the index at the bottom.; Note: Use of this model is governed by the Meta license. In order to download the model weights and tokenizer, please visit the website and accept our License before requesting access here.",Natural Language Processing
Llama-2-70b-chat-hf,Text Generation,PyTorch; Safetensors; Transformers,English,,https://arxiv.org/pdf/2307.09288.pdf,550,,41430,0,94,https://huggingface.co/meta-llama/Llama-2-70b-chat-hf,"This is a form to enable access to Llama 2 on Hugging Face after you have been granted access from Meta. Please visit the Meta website and accept our license terms and acceptable use policy before submitting this form. Requests will be processed in 1-2 days.; Your Hugging Face account email address MUST match the email you provide on the Meta website, or your request will not be approved.; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		; Llama 2 is a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. This is the repository for the 70B fine-tuned model, optimized for dialogue use cases and converted for the Hugging Face Transformers format. Links to other models can be found in the index at the bottom.; Note: Use of this model is governed by the Meta license. In order to download the model weights and tokenizer, please visit the website and accept our License before requesting access here.",Natural Language Processing
Llama-2-7b-chat-hf,Text Generation,PyTorch; Safetensors; Transformers,English,,https://arxiv.org/pdf/2307.09288.pdf,328,,77918,0,57,https://huggingface.co/meta-llama/Llama-2-7b-chat-hf,"This is a form to enable access to Llama 2 on Hugging Face after you have been granted access from Meta. Please visit the Meta website and accept our license terms and acceptable use policy before submitting this form. Requests will be processed in 1-2 days.; Your Hugging Face account email address MUST match the email you provide on the Meta website, or your request will not be approved.; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		; Llama 2 is a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. This is the repository for the 7B fine-tuned model, optimized for dialogue use cases and converted for the Hugging Face Transformers format. Links to other models can be found in the index at the bottom.; Note: Use of this model is governed by the Meta license. In order to download the model weights and tokenizer, please visit the website and accept our License before requesting access here.",Natural Language Processing
Llama-2-70b-hf,Text Generation,PyTorch; Safetensors; Transformers,English,,https://arxiv.org/pdf/2307.09288.pdf,307,,155399,0,45,https://huggingface.co/meta-llama/Llama-2-70b-hf,"This is a form to enable access to Llama 2 on Hugging Face after you have been granted access from Meta. Please visit the Meta website and accept our license terms and acceptable use policy before submitting this form. Requests will be processed in 1-2 days.; Your Hugging Face account email address MUST match the email you provide on the Meta website, or your request will not be approved.; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		; Llama 2 is a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. This is the repository for the 70B pretrained model, converted for the Hugging Face Transformers format. Links to other models can be found in the index at the bottom.; Note: Use of this model is governed by the Meta license. In order to download the model weights and tokenizer, please visit the website and accept our License before requesting access here.",Natural Language Processing
Llama-2-13B-chat-GGML,Text Generation,Transformers; PyTorch,English,other,,264,,796,119316.5128,6,https://huggingface.co/TheBloke/Llama-2-13B-chat-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Meta's Llama 2 13B-chat.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; These are guaranteed to be compatible with any UIs, tools and libraries released since late May. They may be phased out soon, as they are largely superseded by the new k-quant methods.",Natural Language Processing
stable-diffusion-xl-base-0.9,Text-to-Image,Diffusers,,other,https://arxiv.org/pdf/2108.01073.pdf; https://arxiv.org/pdf/2112.10752.pdf; https://arxiv.org/pdf/2307.01952.pdf,1200,,245508,0,49,https://huggingface.co/stabilityai/stable-diffusion-xl-base-0.9,"SDXL 0.9 Research License Agreement; Copyright (c) Stability AI Ltd.; This License Agreement (as may be amended in accordance with this License Agreement, ¡°License¡±), between you, or your employer or other entity (if you are entering into this agreement on behalf of your employer or other entity) (¡°Licensee¡± or ¡°you¡±) and Stability AI Ltd. (¡°Stability AI¡± or ¡°we¡±) applies to your use of any computer program, algorithm, source code, object code, software, models, or model weights that is made available by Stability AI under this License (¡°Software¡±) and any specifications, manuals, documentation, and other written information provided by Stability AI related to the Software (¡°Documentation¡±). By using the Software, you agree to the terms of this License. If you do not agree to this License, then you do not have any rights to use the Software or Documentation (collectively, the ¡°Software Products¡±), and you must immediately cease using the Software Products. If you are agreeing to be bound by the terms of this License on behalf of your employer or other entity, you represent and warrant to Stability AI that you have full legal authority to bind your employer or such entity to this License. If you do not have the requisite authority, you may not accept the License or access the Software Products on behalf of your employer or other entity.; LICENSE GRANTa. Subject to your compliance with the Documentation and Sections 2, 3, and 5, Stability AI grants you a non-exclusive, worldwide, non-transferable, non-sublicensable, revocable, royalty free and limited license under Stability AI¡¯s copyright interests to use, reproduce, and create derivative works of the Software solely for your non-commercial research purposes. The foregoing license is personal to you, and you may not assign, sublicense, distribute, publish, host, or otherwise make available this Software, derivative works of the Software, models or model weights associated with the Software, this License, or any other rights or obligations under this License without Stability AI¡¯s prior written consent; any such assignment or sublicense without Stability AI¡¯s prior written consent will be void and will automatically and immediately terminate this License.  For sake of clarity, this License does not grant to you the right or ability to extend any license to the Software, derivative works of the Software, or associated models or model weights to a non-Licensee, nor does this License permit you to create a new Licensee, such as by making available a copy of this License.  If you would like rights not granted by this License, you may seek permission by sending an email to legal@stability.ai.b. You may make a reasonable number of copies of the Documentation solely for your use in connection with the license to the Software granted above.c. The grant of rights expressly set forth in this Section 1 (License Grant) are the complete grant of rights to you in the Software Products, and no other licenses are granted, whether by waiver, estoppel, implication, equity or otherwise. Stability AI and its licensors reserve all rights not expressly granted by this License.; RESTRICTIONSYou will not, and will not permit, assist or cause any third party to:a. use, modify, copy, reproduce, create derivative works of, or distribute the Software Products (or any derivative works thereof, works incorporating the Software Products, or any data produced by the Software), in whole or in part, for (i) any commercial or production purposes, (ii) military purposes or in the service of nuclear technology, (iii) purposes of surveillance, including any research or development relating to surveillance, (iv) biometric processing, (v) in any manner that infringes, misappropriates, or otherwise violates any third-party rights, or (vi) in any manner that violates any applicable law and violating any privacy or security laws, rules, regulations, directives, or governmental requirements (including the General Data Privacy Regulation (Regulation (EU) 2016/679), the California Consumer Privacy Act, and any and all laws governing the processing of biometric information), as well as all amendments and successor laws to any of the foregoing;b. alter or remove copyright and other proprietary notices which appear on or in the Software Products;c. utilize any equipment, device, software, or other means to circumvent or remove any security or protection used by Stability AI in connection with the Software, or to circumvent or remove any usage restrictions, or to enable functionality disabled by Stability AI; ord. offer or impose any terms on the Software Products that alter, restrict, or are inconsistent with the terms of this License.e. 1) violate any applicable U.S. and non-U.S. export control and trade sanctions laws (¡°Export Laws¡±); 2) directly or indirectly export, re-export, provide, or otherwise transfer Software Products: (a) to any individual, entity, or country prohibited by Export Laws; (b) to anyone on U.S. or non-U.S. government restricted parties lists; or (c) for any purpose prohibited by Export Laws, including nuclear, chemical or biological weapons, or missile technology applications; 3) use or download Software Products if you or they are: (a) located in a comprehensively sanctioned jurisdiction, (b) currently listed on any U.S. or non-U.S. restricted parties list, or (c) for any purpose prohibited by Export Laws; and (4) will not disguise your location through IP proxying or other methods.",Multimodel
FreeWilly2,Text Generation,PyTorch; Transformers,English,cc-by-nc-4.0,https://arxiv.org/pdf/2307.09288.pdf; https://arxiv.org/pdf/2306.02707.pdf,220,conceptofmind/cot_submix_original; conceptofmind/flan2021_submix_original; conceptofmind/t0_submix_original; conceptofmind/niv2_submix_original,18,282554.7217,5,https://huggingface.co/stabilityai/FreeWilly2,"FreeWilly2 is a Llama2 70B model finetuned on an Orca style Dataset; Start chatting with FreeWilly2 using the following code snippet:; FreeWilly should be used with this prompt format:; FreeWilly2 is trained on our internal Orca-style dataset; Models are learned via supervised fine-tuning on the aforementioned datasets, trained in mixed-precision (BF16), and optimized with AdamW. We outline the following hyperparameters:",Natural Language Processing
Llama-2-13b-chat-hf,Text Generation,PyTorch; Safetensors; Transformers,English,,https://arxiv.org/pdf/2307.09288.pdf,213,,14790,0,30,https://huggingface.co/meta-llama/Llama-2-13b-chat-hf,"This is a form to enable access to Llama 2 on Hugging Face after you have been granted access from Meta. Please visit the Meta website and accept our license terms and acceptable use policy before submitting this form. Requests will be processed in 1-2 days.; Your Hugging Face account email address MUST match the email you provide on the Meta website, or your request will not be approved.; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		; Llama 2 is a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. This is the repository for the 13B fine-tuned model, optimized for dialogue use cases and converted for the Hugging Face Transformers format. Links to other models can be found in the index at the bottom.; Note: Use of this model is governed by the Meta license. In order to download the model weights and tokenizer, please visit the website and accept our License before requesting access here.",Natural Language Processing
Llama-2-7b-hf,Text Generation,PyTorch; Safetensors; Transformers,English,,https://arxiv.org/pdf/2307.09288.pdf,187,,19069,0,10,https://huggingface.co/meta-llama/Llama-2-7b-hf,"This is a form to enable access to Llama 2 on Hugging Face after you have been granted access from Meta. Please visit the Meta website and accept our license terms and acceptable use policy before submitting this form. Requests will be processed in 1-2 days.; Your Hugging Face account email address MUST match the email you provide on the Meta website, or your request will not be approved.; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		; Llama 2 is a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. This is the repository for the 7B pretrained model, converted for the Hugging Face Transformers format. Links to other models can be found in the index at the bottom.; Note: Use of this model is governed by the Meta license. In order to download the model weights and tokenizer, please visit the website and accept our License before requesting access here.",Natural Language Processing
Llama-2-13b-hf,Text Generation,PyTorch; Safetensors; Transformers,English,,https://arxiv.org/pdf/2307.09288.pdf,155,,39218,0,11,https://huggingface.co/meta-llama/Llama-2-13b-hf,"This is a form to enable access to Llama 2 on Hugging Face after you have been granted access from Meta. Please visit the Meta website and accept our license terms and acceptable use policy before submitting this form. Requests will be processed in 1-2 days.; Your Hugging Face account email address MUST match the email you provide on the Meta website, or your request will not be approved.; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		; Llama 2 is a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. This is the repository for the 13B pretrained model, converted for the Hugging Face Transformers format. Links to other models can be found in the index at the bottom.; Note: Use of this model is governed by the Meta license. In order to download the model weights and tokenizer, please visit the website and accept our License before requesting access here.",Natural Language Processing
Llama-2-70b,Text Generation,PyTorch,English,,https://arxiv.org/pdf/2307.09288.pdf,151,,0,0,3,https://huggingface.co/meta-llama/Llama-2-70b,"This is a form to enable access to Llama 2 on Hugging Face after you have been granted access from Meta. Please visit the Meta website and accept our license terms and acceptable use policy before submitting this form. Requests will be processed in 1-2 days.; Your Hugging Face account email address MUST match the email you provide on the Meta website, or your request will not be approved.; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		; Llama 2 is a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. This is the repository for the 70B pretrained model. Links to other models can be found in the index at the bottom.; Note: Use of this model is governed by the Meta license. In order to download the model weights and tokenizer, please visit the website and accept our License before requesting access here.",Natural Language Processing
Llama-2-70b-chat,Text Generation,PyTorch,English,,https://arxiv.org/pdf/2307.09288.pdf,151,,0,0,2,https://huggingface.co/meta-llama/Llama-2-70b-chat,"This is a form to enable access to Llama 2 on Hugging Face after you have been granted access from Meta. Please visit the Meta website and accept our license terms and acceptable use policy before submitting this form. Requests will be processed in 1-2 days.; Your Hugging Face account email address MUST match the email you provide on the Meta website, or your request will not be approved.; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		; Llama 2 is a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. This is the repository for the 70B fine-tuned model, optimized for dialogue use cases. Links to other models can be found in the index at the bottom.; Note: Use of this model is governed by the Meta license. In order to download the model weights and tokenizer, please visit the website and accept our License before requesting access here.",Natural Language Processing
chatglm2-6b,,PyTorch; Transformers,Chinese; English,,https://arxiv.org/pdf/2103.10360.pdf; https://arxiv.org/pdf/2210.02414.pdf; https://arxiv.org/pdf/1911.02150.pdf,1240,,1402185,12801.13068,65,https://huggingface.co/THUDM/chatglm2-6b,"
  ? Github Repo ? ? Twitter ? ? [GLM@ACL 22] [GitHub] ? ? [GLM-130B@ICLR 23] [GitHub] 
; 
    ? Join our Slack and WeChat
; ChatGLM2-6B ÊÇ¿ªÔ´ÖÐÓ¢Ë«Óï¶Ô»°Ä£ÐÍ ChatGLM-6B µÄµÚ¶þ´ú°æ±¾£¬ÔÚ±£ÁôÁË³õ´úÄ£ÐÍ¶Ô»°Á÷³©¡¢²¿ÊðÃÅ¼÷½ÏµÍµÈÖÚ¶àÓÅÐãÌØÐÔµÄ»ù´¡Ö®ÉÏ£¬ChatGLM2-6B ÒýÈëÁËÈçÏÂÐÂÌØÐÔ£º; ChatGLM2-6B is the second-generation version of the open-source bilingual (Chinese-English) chat model ChatGLM-6B. It retains the smooth conversation flow and low deployment threshold of the first-generation model, while introducing the following new features:; ¿ÉÒÔÍ¨¹ýÈçÏÂ´úÂëµ÷ÓÃ ChatGLM-6B Ä£ÐÍÀ´Éú³É¶Ô»°£º",
Llama-2-7b-chat,Text Generation,PyTorch,English,,https://arxiv.org/pdf/2307.09288.pdf,142,,0,0,9,https://huggingface.co/meta-llama/Llama-2-7b-chat,"This is a form to enable access to Llama 2 on Hugging Face after you have been granted access from Meta. Please visit the Meta website and accept our license terms and acceptable use policy before submitting this form. Requests will be processed in 1-2 days.; Your Hugging Face account email address MUST match the email you provide on the Meta website, or your request will not be approved.; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		; Llama 2 is a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. This is the repository for the 7B fine-tuned model, optimized for dialogue use cases. Links to other models can be found in the index at the bottom.; Note: Use of this model is governed by the Meta license. In order to download the model weights and tokenizer, please visit the website and accept our License before requesting access here.",Natural Language Processing
Llama-2-13B-chat-GPTQ,Text Generation,Transformers; PyTorch,English,other,,122,,7726,7436.603779,,https://huggingface.co/TheBloke/Llama-2-13B-chat-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for Meta's Llama 2 13B-chat.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; To continue a conversation:",Natural Language Processing
Llama-2-13B-GGML,Text Generation,Transformers; PyTorch,English,other,,110,,139,119316.5121,4,https://huggingface.co/TheBloke/Llama-2-13B-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Meta's Llama 2 13B.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; These are guaranteed to be compatible with any UIs, tools and libraries released since late May. They may be phased out soon, as they are largely superseded by the new k-quant methods.",Natural Language Processing
Baichuan-13B-Chat,Text Generation,PyTorch; Transformers,Chinese; English,,https://arxiv.org/pdf/2104.09864.pdf; https://arxiv.org/pdf/2108.12409.pdf; https://arxiv.org/pdf/2009.03300.pdf,386,,983805,27168.33809,2,https://huggingface.co/baichuan-inc/Baichuan-13B-Chat,"Baichuan-13B-ChatÎªBaichuan-13BÏµÁÐÄ£ÐÍÖÐ¶ÔÆëºóµÄ°æ±¾£¬Ô¤ÑµÁ·Ä£ÐÍ¿É¼ûBaichuan-13B-Base¡£; Baichuan-13B ÊÇÓÉ°Ù´¨ÖÇÄÜ¼Ì Baichuan-7B Ö®ºó¿ª·¢µÄ°üº¬ 130 ÒÚ²ÎÊýµÄ¿ªÔ´¿ÉÉÌÓÃµÄ´ó¹æÄ£ÓïÑÔÄ£ÐÍ£¬ÔÚÈ¨ÍþµÄÖÐÎÄºÍÓ¢ÎÄ benchmark ÉÏ¾ùÈ¡µÃÍ¬³ß´ç×îºÃµÄÐ§¹û¡£±¾´Î·¢²¼°üº¬ÓÐÔ¤ÑµÁ· (Baichuan-13B-Base) ºÍ¶ÔÆë (Baichuan-13B-Chat) Á½¸ö°æ±¾¡£Baichuan-13B ÓÐÈçÏÂ¼¸¸öÌØµã£º; Baichuan-13B-Chat is the aligned version in the Baichuan-13B series of models, and the pre-trained model can be found at Baichuan-13B-Base.; Baichuan-13B is an open-source, commercially usable large-scale language model developed by Baichuan Intelligence, following Baichuan-7B. With 13 billion parameters, it achieves the best performance in standard Chinese and English benchmarks among models of its size. This release includes two versions: pre-training (Baichuan-13B-Base) and alignment (Baichuan-13B-Chat). Baichuan-13B has the following features:; ÈçÏÂÊÇÒ»¸öÊ¹ÓÃBaichuan-13B-Chat½øÐÐ¶Ô»°µÄÊ¾Àý£¬ÕýÈ·Êä³öÎª""ÇÇ¸êÀï·å¡£ÊÀ½çµÚ¶þ¸ß·å¡ª¡ª¡ªÇÇ¸êÀï·åÎ÷·½µÇÉ½Õß³ÆÆäÎªk2·å£¬º£°Î¸ß¶ÈÊÇ8611Ã×£¬Î»ÓÚ¿¦À®À¥ÂØÉ½ÂöµÄÖÐ°Í±ß¾³ÉÏ""",Natural Language Processing
Llama-2-13b,Text Generation,PyTorch,English,,https://arxiv.org/pdf/2307.09288.pdf,98,,0,0,,https://huggingface.co/meta-llama/Llama-2-13b,"This is a form to enable access to Llama 2 on Hugging Face after you have been granted access from Meta. Please visit the Meta website and accept our license terms and acceptable use policy before submitting this form. Requests will be processed in 1-2 days.; Your Hugging Face account email address MUST match the email you provide on the Meta website, or your request will not be approved.; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		; Llama 2 is a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. This is the repository for the 13B pretrained model. Links to other models can be found in the index at the bottom.; Note: Use of this model is governed by the Meta license. In order to download the model weights and tokenizer, please visit the website and accept our License before requesting access here.",Natural Language Processing
Llama-2-7B-GGML,Text Generation,Transformers; PyTorch,English,other,,95,,351,61870.11286,,https://huggingface.co/TheBloke/Llama-2-7B-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Meta's Llama 2 7B.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; These are guaranteed to be compatible with any UIs, tools and libraries released since late May. They may be phased out soon, as they are largely superseded by the new k-quant methods.",Natural Language Processing
Llama-2-7B-Chat-GGML,Text Generation,Transformers; PyTorch,English,other,,95,,574,61870.11276,6,https://huggingface.co/TheBloke/Llama-2-7B-Chat-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Meta's Llama 2 7b Chat.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; These are guaranteed to be compatible with any UIs, tools and libraries released since late May. They may be phased out soon, as they are largely superseded by the new k-quant methods.",Natural Language Processing
stable-diffusion-v1-5,Text-to-Image,Diffusers,,creativeml-openrail-m,https://arxiv.org/pdf/2207.12598.pdf; https://arxiv.org/pdf/2112.10752.pdf; https://arxiv.org/pdf/2103.00020.pdf; https://arxiv.org/pdf/2205.11487.pdf; https://arxiv.org/pdf/1910.09700.pdf,8740,,6901572,24514.57802,1546,https://huggingface.co/runwayml/stable-diffusion-v1-5,"Stable Diffusion is a latent text-to-image diffusion model capable of generating photo-realistic images given any text input.
For more information about how Stable Diffusion functions, please have a look at ?'s Stable Diffusion blog.; The Stable-Diffusion-v1-5 checkpoint was initialized with the weights of the Stable-Diffusion-v1-2 
checkpoint and subsequently fine-tuned on 595k steps at resolution 512x512 on ""laion-aesthetics v2 5+"" and 10% dropping of the text-conditioning to improve classifier-free guidance sampling.; You can use this both with the ?Diffusers library and the RunwayML GitHub repository.; For more detailed instructions, use-cases and examples in JAX follow the instructions here; Download the weights ",Multimodel
chatglm-fitness-RLHF,,PyTorch; PEFT,Chinese; English,apache-2.0,,131,,0,12392.44954,1,https://huggingface.co/fb700/chatglm-fitness-RLHF,Ä£ÐÍÌåÑéµØÖ·£ºhttps://huggingface.co/spaces/fb700/chatglm-fitness-RLHF; ChatGLM-6B ÊÇ¿ªÔ´ÖÐÓ¢Ë«Óï¶Ô»°Ä£ÐÍ£¬±¾´ÎÑµÁ·»ùÓÚChatGLM-6B µÄµÚÒ»´ú°æ±¾£¬ÔÚ±£ÁôÁË³õ´úÄ£ÐÍ¶Ô»°Á÷³©¡¢²¿ÊðÃÅ¼÷½ÏµÍµÈÖÚ¶àÓÅÐãÌØÐÔµÄ»ù´¡Ö®ÉÏ¿ªÕ¹ÑµÁ·¡£Í¨¹ýÑµÁ·ÎÒÃÇ¶ÔÄ£ÐÍÓÐÁË¸üÉî¿ÌµÄÈÏÖª£¬LLMÔÚÒ»Ö±ÔÚ½ø»¯£¬ºÃµÄ·½·¨ºÍÊý¾Ý¿ÉÒÔÍÚ¾ò³öÄ£ÐÍµÄ¸ü´óÇ±ÄÜ¡£; Ê×ÏÈ£¬ÓÃ40ÍòÌõ¸ßÖÊÁ¿Êý¾Ý½øÐÐÇ¿»¯ÑµÁ·£¬ÒÔÌá¸ßÄ£ÐÍµÄ»ù´¡ÄÜÁ¦£»; µÚ¶þ£¬Ê¹ÓÃ30ÍòÌõÈËÀà·´À¡Êý¾Ý£¬¹¹½¨Ò»¸ö±í´ï·½Ê½¹æ·¶ÓÅÑÅµÄÓïÑÔÄ£Ê½£¨RMÄ£ÐÍ£©£»; µÚÈý£¬ÔÚ±£ÁôSFT½×¶ÎÈý·ÖÖ®Ò»ÑµÁ·Êý¾ÝµÄÍ¬Ê±£¬Ôö¼ÓÁË30ÍòÌõfitnessÊý¾Ý£¬µþ¼ÓRMÄ£ÐÍ£¬¶ÔChatGLM-6B½øÐÐÇ¿»¯ÑµÁ·¡£,
Llama-2-13b-chat,Text Generation,PyTorch,English,,https://arxiv.org/pdf/2307.09288.pdf,83,,0,0,4,https://huggingface.co/meta-llama/Llama-2-13b-chat,"This is a form to enable access to Llama 2 on Hugging Face after you have been granted access from Meta. Please visit the Meta website and accept our license terms and acceptable use policy before submitting this form. Requests will be processed in 1-2 days.; Your Hugging Face account email address MUST match the email you provide on the Meta website, or your request will not be approved.; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		; Llama 2 is a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. This is the repository for the 13B fine-tuned model, optimized for dialogue use cases. Links to other models can be found in the index at the bottom.; Note: Use of this model is governed by the Meta license. In order to download the model weights and tokenizer, please visit the website and accept our License before requesting access here.",Natural Language Processing
ruGPT-3.5-13B,Text Generation,PyTorch; Transformers,English; Russian,mit,,79,,970,53885.92852,3,https://huggingface.co/ai-forever/ruGPT-3.5-13B,"Language model for Russian. Model has 13B parameters as you can guess from it's name. This is our biggest model so far and it was used for trainig GigaChat (read more about it in the article).; Model was pretrained on a 300Gb of various domains, than additionaly trained on the 100 Gb of code and legal documets. Here is the dataset structure:; ; Training data was deduplicated, the text deduplication includes 64-bit hashing of each text in the corpus for keeping texts with a unique hash. We also filter the documents based on their text compression rate using zlib4. The most strongly and weakly compressing deduplicated texts are discarded.; Model was trained using Deepspeed and Megatron libraries, on 300B tokens dataset for 3 epochs, around 45 days on 512 V100. After that model was finetuned 1 epoch with sequence length 2048 around 20 days on 200 GPU A100 on additional data (see above).",Natural Language Processing
ControlNet-v1-1,,,,openrail,,2060,,0,20787.22835,,https://huggingface.co/lllyasviel/ControlNet-v1-1,"This is the model files for ControlNet 1.1.
This model card will be filled in a more detailed way after 1.1 is officially merged into ControlNet.; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
falcon-40b,Text Generation,PyTorch; Transformers,4 languages,apache-2.0,https://arxiv.org/pdf/2205.14135.pdf; https://arxiv.org/pdf/1911.02150.pdf; https://arxiv.org/pdf/2101.00027.pdf; https://arxiv.org/pdf/2005.14165.pdf; https://arxiv.org/pdf/2104.09864.pdf; https://arxiv.org/pdf/2306.01116.pdf,2140,tiiuae/falcon-refinedweb,151418,85660.43192,40,https://huggingface.co/tiiuae/falcon-40b,"Falcon-40B is a 40B parameters causal decoder-only model built by TII and trained on 1,000B tokens of RefinedWeb enhanced with curated corpora. It is made available under the Apache 2.0 license.; Paper coming soon ?.; We get it. AI is everywhere! Is it taking over? ; Before we debate the scant likelihood of a cyborg assassin from the future terminating humanity, let¡¯s get to know the newbie that has soared to top-spot on the leaderboard ¨C Falcon 40B.; Falcon 40B is the UAE¡¯s and the Middle East¡¯s first home-grown, open-source large language model (LLM) with 40 billion parameters trained on one trillion tokens. The brainchild of the Technology Innovation Institute (TII), Falcon 40B has generated a tremendous amount of global interest and intrigue, but what really sweetens the deal is its transparent, open-source feature. ",Natural Language Processing
Llama-2-70B-chat-GPTQ,Text Generation,Transformers; PyTorch,English,other,,71,,8020,36149.56646,,https://huggingface.co/TheBloke/Llama-2-70B-chat-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for Meta's Llama 2 70B Chat.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; Many thanks to William Beauchamp from Chai for providing the hardware for these quantisations!",Natural Language Processing
LLongMA-2-7b,Text Generation,PyTorch; Transformers,,,https://arxiv.org/pdf/2108.12409.pdf; https://arxiv.org/pdf/2212.10554.pdf,69,,272,13824.55466,1,https://huggingface.co/conceptofmind/LLongMA-2-7b,"LLongMA-2, a suite of Llama-2 models, trained at 8k context length using linear positional interpolation scaling. The model was trained in collaboration with Emozilla of NousResearch and Kaiokendev.; We worked directly with Kaiokendev, to extend the context length of the Llama-2 7b model through fine-tuning. The models pass all our evaluations and maintain the same perplexity at 8k extrapolation surpassing the performance of other recent methodologies.; The model has identical performance to LLaMA 2 under 4k context length, performance scales directly to 8k, and works out-of-the-box with the new version of transformers (4.31) or with trust_remote_code for <= 4.30.; A Llama-2 13b model trained at 8k will release soon on huggingface here: https://huggingface.co/conceptofmind/LLongMA-2-13b; Applying the method to the rotary position embedding requires only slight changes to the model's code by dividing the positional index, t, by a scaling factor.",Natural Language Processing
llama-30b-instruct-2048,Text Generation,PyTorch; Transformers,English,,,67,sciq; metaeval/ScienceQA_text_only; GAIR/lima; Open-Orca/OpenOrca; openbookqa,725,66634.06468,5,https://huggingface.co/upstage/llama-30b-instruct-2048,No other data was used except for the dataset mentioned above,Natural Language Processing
Nous-Hermes-Llama2-13b,Text Generation,PyTorch; Transformers,English,,,63,,362,26657.95247,1,https://huggingface.co/NousResearch/Nous-Hermes-Llama2-13b,"Compute provided by our project sponsor Redmond AI, thank you! Follow RedmondAI on Twitter @RedmondAI.; Nous-Hermes-Llama2-13b is a state-of-the-art language model fine-tuned on over 300,000 instructions. This model was fine-tuned by Nous Research, with Teknium and Emozilla leading the fine tuning process and dataset curation, Redmond AI sponsoring the compute, and several other contributors.; This Hermes model uses the exact same dataset as Hermes on Llama-1. This is to ensure consistency between the old Hermes and new, for anyone who wanted to keep Hermes as similar to the old one, just more capable.; This model stands out for its long responses, lower hallucination rate, and absence of OpenAI censorship mechanisms. The fine-tuning process was performed with a 4096 sequence length on an 8x a100 80GB DGX machine.; 


",Natural Language Processing
control_v1p_sd15_qrcode_monster,,Diffusers,English,openrail++,,218,,2805,5177.407102,4,https://huggingface.co/monster-labs/control_v1p_sd15_qrcode_monster,"; This model is made to generate creative QR codes that still scan.
Keep in mind that not all generated codes might be readable, but you can try different parameters and prompts to get the desired results.; NEW VERSION; Introducing the upgraded version of our model - Controlnet QR code Monster v2.
V2 is a huge upgrade over v1, for scannability AND creativity.; QR codes can now seamlessly blend the image by using a gray-colored background (#808080).",
Luna-AI-Llama2-Uncensored,Text Generation,PyTorch; Transformers,,cc-by-sa-4.0,,61,,498,27597.57421,3,https://huggingface.co/Tap-M/Luna-AI-Llama2-Uncensored,"¡°Luna AI Llama2 Uncensored¡± is a Llama2 based Chat model fine-tuned on over 40,000 long form chat discussions 
  This model was fine-tuned by Tap, the creator of Luna AI.  
  The result is an enhanced Llama2 7b model that rivals ChatGPT in performance across a variety of tasks.; This model stands out for its long responses,  low hallucination rate, and absence of censorship mechanisms. ; The fine-tuning process was performed on an 8x a100 80GB machine.
  The model was trained almost entirely on synthetic outputs.
  This includes data from diverse sources which we included to create our custom dataset, it includes multiple rounds of chats between Human & AI.
; 4bit GPTQ Version provided by @TheBloke - for GPU inference
GGML Version provided by @TheBloke - For CPU inference; The model follows the Vicuna 1.1/ OpenChat format:",Natural Language Processing
Llama-2-13B-GPTQ,Text Generation,Transformers; PyTorch,English,other,,60,,2021,7436.602048,,https://huggingface.co/TheBloke/Llama-2-13B-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for Meta's Llama 2 13B.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; Multiple quantisation parameters are provided, to allow you to choose the best one for your hardware and requirements.",Natural Language Processing
waifu-diffusion-xl,Text-to-Image,,English,unknown,,102,,0,14233.62598,,https://huggingface.co/hakurei/waifu-diffusion-xl,"waifu-diffusion-xl is a latent text-to-image diffusion model that has been conditioned on high-quality anime images through fine-tuning StabilityAI's SDXL 0.9 model provided as a research preview.; ; masterpiece, best quality, 1girl, green hair, sweater, looking at viewer, upper body, beanie, outdoors, watercolor, night, turtleneck; This model has been released under the SDXL 0.9 RESEARCH LICENSE AGREEMENT due to the repository containing the SDXL 0.9 weights before an official release. We have been given permission to release this model.; This model can be used for entertainment purposes and as a generative art assistant.",Multimodel
Llama-2-7b-chat-coreml,Text Generation,Core ML; Transformers,,other,,56,,239,1.860422974,1,https://huggingface.co/pcuenq/Llama-2-7b-chat-coreml,"This is a Core ML version of meta-llama/Llama-2-7b-chat-hf. For license information, model details and acceptable use policy, please refer to the original model card.; This conversion was performed in float16 mode with a fixed sequence length of 64, and is intended for evaluation and test purposes. Please, open a conversation in the Community tab if you have questions or want to report an issue.",Natural Language Processing
stable-diffusion-2-1,Text-to-Image,Diffusers,,openrail++,https://arxiv.org/pdf/2112.10752.pdf; https://arxiv.org/pdf/2202.00512.pdf; https://arxiv.org/pdf/1910.09700.pdf,2930,,842185,21340.17387,796,https://huggingface.co/stabilityai/stable-diffusion-2-1,"This model card focuses on the model associated with the Stable Diffusion v2-1 model, codebase available here.; This stable-diffusion-2-1 model is fine-tuned from stable-diffusion-2 (768-v-ema.ckpt) with an additional 55k steps on the same dataset (with punsafe=0.1), and then fine-tuned for another 155k extra steps with punsafe=0.98.; Developed by: Robin Rombach, Patrick Esser; Model type: Diffusion-based text-to-image generation model; Language(s): English",Multimodel
stable-diffusion-xl-refiner-0.9,Image-to-Image,Diffusers,,other,https://arxiv.org/pdf/2108.01073.pdf; https://arxiv.org/pdf/2112.10752.pdf; https://arxiv.org/pdf/2307.01952.pdf,273,,91225,0,13,https://huggingface.co/stabilityai/stable-diffusion-xl-refiner-0.9,"SDXL 0.9 Research License Agreement; Copyright (c) Stability AI Ltd.; This License Agreement (as may be amended in accordance with this License Agreement, ¡°License¡±), between you, or your employer or other entity (if you are entering into this agreement on behalf of your employer or other entity) (¡°Licensee¡± or ¡°you¡±) and Stability AI Ltd. (¡°Stability AI¡± or ¡°we¡±) applies to your use of any computer program, algorithm, source code, object code, software, models, or model weights that is made available by Stability AI under this License (¡°Software¡±) and any specifications, manuals, documentation, and other written information provided by Stability AI related to the Software (¡°Documentation¡±). By using the Software, you agree to the terms of this License. If you do not agree to this License, then you do not have any rights to use the Software or Documentation (collectively, the ¡°Software Products¡±), and you must immediately cease using the Software Products. If you are agreeing to be bound by the terms of this License on behalf of your employer or other entity, you represent and warrant to Stability AI that you have full legal authority to bind your employer or such entity to this License. If you do not have the requisite authority, you may not accept the License or access the Software Products on behalf of your employer or other entity.; LICENSE GRANTa. Subject to your compliance with the Documentation and Sections 2, 3, and 5, Stability AI grants you a non-exclusive, worldwide, non-transferable, non-sublicensable, revocable, royalty free and limited license under Stability AI¡¯s copyright interests to use, reproduce, and create derivative works of the Software solely for your non-commercial research purposes. The foregoing license is personal to you, and you may not assign, sublicense, distribute, publish, host, or otherwise make available this Software, derivative works of the Software, models or model weights associated with the Software, this License, or any other rights or obligations under this License without Stability AI¡¯s prior written consent; any such assignment or sublicense without Stability AI¡¯s prior written consent will be void and will automatically and immediately terminate this License.  For sake of clarity, this License does not grant to you the right or ability to extend any license to the Software, derivative works of the Software, or associated models or model weights to a non-Licensee, nor does this License permit you to create a new Licensee, such as by making available a copy of this License.  If you would like rights not granted by this License, you may seek permission by sending an email to legal@stability.ai.b. You may make a reasonable number of copies of the Documentation solely for your use in connection with the license to the Software granted above.c. The grant of rights expressly set forth in this Section 1 (License Grant) are the complete grant of rights to you in the Software Products, and no other licenses are granted, whether by waiver, estoppel, implication, equity or otherwise. Stability AI and its licensors reserve all rights not expressly granted by this License.; RESTRICTIONSYou will not, and will not permit, assist or cause any third party to:a. use, modify, copy, reproduce, create derivative works of, or distribute the Software Products (or any derivative works thereof, works incorporating the Software Products, or any data produced by the Software), in whole or in part, for (i) any commercial or production purposes, (ii) military purposes or in the service of nuclear technology, (iii) purposes of surveillance, including any research or development relating to surveillance, (iv) biometric processing, (v) in any manner that infringes, misappropriates, or otherwise violates any third-party rights, or (vi) in any manner that violates any applicable law and violating any privacy or security laws, rules, regulations, directives, or governmental requirements (including the General Data Privacy Regulation (Regulation (EU) 2016/679), the California Consumer Privacy Act, and any and all laws governing the processing of biometric information), as well as all amendments and successor laws to any of the foregoing;b. alter or remove copyright and other proprietary notices which appear on or in the Software Products;c. utilize any equipment, device, software, or other means to circumvent or remove any security or protection used by Stability AI in connection with the Software, or to circumvent or remove any usage restrictions, or to enable functionality disabled by Stability AI; ord. offer or impose any terms on the Software Products that alter, restrict, or are inconsistent with the terms of this License.e. 1) violate any applicable U.S. and non-U.S. export control and trade sanctions laws (¡°Export Laws¡±); 2) directly or indirectly export, re-export, provide, or otherwise transfer Software Products: (a) to any individual, entity, or country prohibited by Export Laws; (b) to anyone on U.S. or non-U.S. government restricted parties lists; or (c) for any purpose prohibited by Export Laws, including nuclear, chemical or biological weapons, or missile technology applications; 3) use or download Software Products if you or they are: (a) located in a comprehensively sanctioned jurisdiction, (b) currently listed on any U.S. or non-U.S. restricted parties list, or (c) for any purpose prohibited by Export Laws; and (4) will not disguise your location through IP proxying or other methods.",Computer Vision
starcoder,Text Generation,PyTorch; Transformers,,bigcode-openrail-m,https://arxiv.org/pdf/1911.02150.pdf; https://arxiv.org/pdf/2205.14135.pdf; https://arxiv.org/pdf/2207.14255.pdf; https://arxiv.org/pdf/2305.06161.pdf,2110,bigcode/the-stack-dedup,70238,0,68,https://huggingface.co/bigcode/starcoder,"This repository is publicly accessible, but
			you have to accept the conditions to access its files and content.
		; Please read the BigCode OpenRAIL-M license agreement before accepting it.
  ; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		; ; Play with the model on the StarCoder Playground.",Natural Language Processing
m3e-base,,PyTorch; Safetensors; Sentence Transformers,Chinese; English,,,350,,85440,818.5652066,4,https://huggingface.co/moka-ai/m3e-base,m3e-small | m3e-base; M3E ÊÇ Moka Massive Mixed Embedding µÄËõÐ´; ËµÃ÷£º; Tips:; ÄúÐèÒªÏÈ°²×° sentence-transformers,
Luna-AI-Llama2-Uncensored-GGML,,Transformers,,other,,46,,30,61870.10553,1,https://huggingface.co/TheBloke/Luna-AI-Llama2-Uncensored-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Tap-M's Luna AI Llama2 Uncensored.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; Many thanks to William Beauchamp from Chai for providing the hardware used to make and upload these files!",
llama2_7b_chat_uncensored,Text Generation,PyTorch; TensorBoard; Transformers,,other,,45,ehartford/wizard_vicuna_70k_unfiltered,61,27597.3305,6,https://huggingface.co/georgesung/llama2_7b_chat_uncensored,"Fine-tuned Llama-2 7B with an uncensored/unfiltered Wizard-Vicuna conversation dataset ehartford/wizard_vicuna_70k_unfiltered.
Used QLoRA for fine-tuning. Trained for one epoch on a 24GB GPU (NVIDIA A10G) instance, took ~19 hours to train.; The version here is the fp16 HuggingFace model.; Thanks to TheBloke, he has created the GGML and GPTQ versions:; The model was trained with the following prompt style:; Code used to train the model is available here.",Natural Language Processing
Chinese-Llama-2-7b,Text Generation,PyTorch; Transformers,Chinese; English,openrail,,43,LinkSoul/instruction_merge_set,147,27597.32159,1,https://huggingface.co/LinkSoul/Chinese-Llama-2-7b,"È«²¿¿ªÔ´£¬ÍêÈ«¿ÉÉÌÓÃµÄÖÐÎÄ°æ Llama2 Ä£ÐÍ¼°ÖÐÓ¢ÎÄ SFT Êý¾Ý¼¯£¬ÊäÈë¸ñÊ½ÑÏ¸ñ×ñÑ­ llama-2-chat ¸ñÊ½£¬¼æÈÝÊÊÅäËùÓÐÕë¶ÔÔ­°æ llama-2-chat Ä£ÐÍµÄÓÅ»¯¡£; ; ; Talk is cheap, Show you the Demo.; Ä£ÐÍÏÂÔØ£ºChinese Llama2 Chat Model",Natural Language Processing
whisper-large-v2,Automatic Speech Recognition,PyTorch; TensorFlow; JAX; Transformers,99 languages,apache-2.0,https://arxiv.org/pdf/2212.04356.pdf,762,,199338,18958.00115,122,https://huggingface.co/openai/whisper-large-v2,"Whisper is a pre-trained model for automatic speech recognition (ASR) and speech translation. Trained on 680k hours 
of labelled data, Whisper models demonstrate a strong ability to generalise to many datasets and domains without the need 
for fine-tuning.; Whisper was proposed in the paper Robust Speech Recognition via Large-Scale Weak Supervision 
by Alec Radford et al. from OpenAI. The original code repository can be found here.; Compared to the Whisper large model, the large-v2 model is trained for 2.5x more epochs with added regularization 
for improved performance.; Disclaimer: Content for this model card has partly been written by the Hugging Face team, and parts of it were 
copied and pasted from the original model card.; Whisper is a Transformer based encoder-decoder model, also referred to as a sequence-to-sequence model. 
It was trained on 680k hours of labelled speech data annotated using large-scale weak supervision. ",Audio
Redmond-Puffin-13B,Text Generation,PyTorch; Transformers,eng,mit,,41,,308,26657.0927,1,https://huggingface.co/NousResearch/Redmond-Puffin-13B,"; The first commercially available language model released by Nous Research!; Redmond-Puffin-13B is one of the worlds first llama-2 based, fine-tuned language models, leveraging a hand curated set of 3K high quality examples, many of which take full advantage of the 4096 context length of Llama 2. This model was fine-tuned by Nous Research, with LDJ leading the training and dataset curation, along with significant dataset formation contributions by J-Supha.; Special thank you to Redmond AI for sponsoring the compute.; Special thank you to Emozilla for assisting with training experimentations and many issues encountered during training.",Natural Language Processing
llama2-7b-chat-hf-codeCherryPop-qLoRA-merged,,PyTorch; Transformers,,,,37,,40,13805.88207,,https://huggingface.co/TokenBender/llama2-7b-chat-hf-codeCherryPop-qLoRA-merged,"  description:;   additional_info:;   next_steps: ""I've a few things in mind and after that this will be more valuable."";   tasks:;   commercial_use: |
    So far I think this can be used commercially but this is a adapter on Meta's llama2 with
    some gating issues so that is there.
  contact_info: ""If you find any issues or want to just holler at me, you can reach out to me - https://twitter.com/4evaBehindSOTA""",
falcon-7b-instruct,Text Generation,PyTorch; Core ML; Transformers,English,apache-2.0,https://arxiv.org/pdf/2205.14135.pdf; https://arxiv.org/pdf/1911.02150.pdf; https://arxiv.org/pdf/2005.14165.pdf; https://arxiv.org/pdf/2104.09864.pdf; https://arxiv.org/pdf/2306.01116.pdf,516,tiiuae/falcon-refinedweb,526338,14779.12882,77,https://huggingface.co/tiiuae/falcon-7b-instruct,"Falcon-7B-Instruct is a 7B parameters causal decoder-only model built by TII based on Falcon-7B and finetuned on a mixture of chat/instruct datasets. It is made available under the Apache 2.0 license.; Paper coming soon ?.; ? To get started with Falcon (inference, finetuning, quantization, etc.), we recommend reading this great blogpost fron HF!; ? This is an instruct model, which may not be ideal for further finetuning. If you are interested in building your own instruct/chat model, we recommend starting from Falcon-7B. ; ? Looking for an even more powerful model? Falcon-40B-Instruct is Falcon-7B-Instruct's big brother!",Natural Language Processing
Nous-Hermes-Llama2-GGML,,Transformers,English,other,,33,,4,121057.3112,,https://huggingface.co/TheBloke/Nous-Hermes-Llama2-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Nous Research's Nous Hermes Llama 2 13B.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; These are guaranteed to be compatible with any UIs, tools and libraries released since late May. They may be phased out soon, as they are largely superseded by the new k-quant methods.",
bloom,Text Generation,PyTorch; TensorBoard; Safetensors; Transformers,46 languages,bigscience-bloom-rail-1.0,https://arxiv.org/pdf/2211.05100.pdf; https://arxiv.org/pdf/1909.08053.pdf; https://arxiv.org/pdf/2110.02861.pdf; https://arxiv.org/pdf/2108.12409.pdf,3850,,15365,229488.7332,322,https://huggingface.co/bigscience/bloom,"BigScience Large Open-science Open-access Multilingual Language ModelVersion 1.3 / 6 July 2022; Current Checkpoint: Training Iteration  95000; Link to paper: here; Total seen tokens: 366B; BLOOM is an autoregressive Large Language Model (LLM), trained to continue text from a prompt on vast amounts of text data using industrial-scale computational resources. As such, it is able to output coherent text in 46 languages and 13 programming languages that is hardly distinguishable from text written by humans. BLOOM can also be instructed to perform text tasks it hasn't been explicitly trained for, by casting them as text generation tasks.",Natural Language Processing
falcon-40b-instruct,Text Generation,PyTorch; Transformers,English,apache-2.0,https://arxiv.org/pdf/2205.14135.pdf; https://arxiv.org/pdf/1911.02150.pdf; https://arxiv.org/pdf/2005.14165.pdf; https://arxiv.org/pdf/2104.09864.pdf; https://arxiv.org/pdf/2306.01116.pdf,1010,tiiuae/falcon-refinedweb,327284,85660.42921,28,https://huggingface.co/tiiuae/falcon-40b-instruct,"Falcon-40B-Instruct is a 40B parameters causal decoder-only model built by TII based on Falcon-40B and finetuned on a mixture of Baize. It is made available under the Apache 2.0 license.; Paper coming soon ?.; ? To get started with Falcon (inference, finetuning, quantization, etc.), we recommend reading this great blogpost fron HF!; ? This is an instruct model, which may not be ideal for further finetuning. If you are interested in building your own instruct/chat model, we recommend starting from Falcon-40B. ; ? Looking for a smaller, less expensive model? Falcon-7B-Instruct is Falcon-40B-Instruct's little brother!",Natural Language Processing
OpenOrca-Preview1-13B,Text Generation,PyTorch; Transformers,English,mit,https://arxiv.org/pdf/2306.02707.pdf; https://arxiv.org/pdf/2301.13688.pdf,128,Open-Orca/OpenOrca,1659,26655.61812,8,https://huggingface.co/Open-Orca/OpenOrca-Preview1-13B,"; ; ; We have used our own OpenOrca dataset to fine-tune LLaMA-13B.
This dataset is our attempt to reproduce the dataset generated for Microsoft Research's Orca Paper.; We have trained on less than 6% of our data, just to give a preview of what is possible while we further refine our dataset!
We trained a refined selection of 200k GPT-4 entries from OpenOrca.
We have filtered our GPT-4 augmentations to remove statements like, ""As an AI language model..."" and other responses which have been shown to harm model reasoning capabilities. Further details on our dataset curation practices will be forthcoming with our full model releases.",Natural Language Processing
Llama-2-7b-Chat-GPTQ,Text Generation,Transformers; PyTorch,English,other,,32,,3136,3995.96293,,https://huggingface.co/TheBloke/Llama-2-7b-Chat-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for Meta's Llama 2 7b Chat.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; To continue a conversation:",Natural Language Processing
Luna-AI-Llama2-Uncensored-GPTQ,Text Generation,Transformers,,other,,32,,631,3994.115373,,https://huggingface.co/TheBloke/Luna-AI-Llama2-Uncensored-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for Tap-M's Luna AI Llama2 Uncensored.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; Many thanks to William Beauchamp from Chai for providing the hardware used to make and upload these files!",Natural Language Processing
Redmond-Puffin-13B-Preview,Text Generation,PyTorch; Transformers,eng,mit,,31,,26,26657.08699,,https://huggingface.co/NousResearch/Redmond-Puffin-13B-Preview,"; The first commercially available language model released by Nous Research!; Redmond-Puffin-13B is one of the worlds first llama-2 based, fine-tuned language models, leveraging a hand curated set of 3K high quality examples, many of which take full advantage of the 4096 context length of Llama 2. This model was fine-tuned by Nous Research, with LDJ leading the training and dataset curation, along with significant dataset formation contributions by J-Supha.; Special thank you to Redmond AI for sponsoring the compute.; Special thank you to Emozilla for assisting with training experimentations and many issues encountered during training.",Natural Language Processing
vicuna-33b-v1.3,Text Generation,PyTorch; Transformers,,,https://arxiv.org/pdf/2302.13971.pdf; https://arxiv.org/pdf/2306.05685.pdf,175,,20883,66632.22223,6,https://huggingface.co/lmsys/vicuna-33b-v1.3,"Vicuna is a chat assistant trained by fine-tuning LLaMA on user-shared conversations collected from ShareGPT.; The primary use of Vicuna is research on large language models and chatbots.
The primary intended users of the model are researchers and hobbyists in natural language processing, machine learning, and artificial intelligence.; Vicuna v1.3 is fine-tuned from LLaMA with supervised instruction fine-tuning.
The training data is around 140K conversations collected from ShareGPT.com.
See more details in the ""Training Details of Vicuna Models"" section in the appendix of this paper.; Vicuna is evaluated with standard benchmarks, human preference, and LLM-as-a-judge. See more details in this paper and leaderboard.; See vicuna_weights_version.md",Natural Language Processing
Llama-2-13B-fp16,Text Generation,PyTorch; Transformers,English,,,30,,9906,26657.10888,,https://huggingface.co/TheBloke/Llama-2-13B-fp16,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are fp16 format model files for Meta's Llama 2 13B.; They were produced by downloading the PTH files from Meta, and then converting to HF format using the latest Transformers 4.32.0.dev0, from Git, with the Llama 2 PR included: https://github.com/huggingface/transformers/pull/24891.; Command to convert was:",Natural Language Processing
Llama-2-70B-GPTQ,Text Generation,Transformers; PyTorch,English,other,,30,,1822,36149.5651,,https://huggingface.co/TheBloke/Llama-2-70B-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for Meta's Llama 2 70B.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; Many thanks to William Beauchamp from Chai for providing the hardware for these quantisations!",Natural Language Processing
FreeWilly2-GPTQ,Text Generation,Transformers,English,other,https://arxiv.org/pdf/2307.09288.pdf; https://arxiv.org/pdf/2306.02707.pdf,30,conceptofmind/cot_submix_original; conceptofmind/flan2021_submix_original; conceptofmind/t0_submix_original; conceptofmind/niv2_submix_original,176,36149.55829,,https://huggingface.co/TheBloke/FreeWilly2-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; This repo contains GPTQ model files for Stability AI's FreeWilly 2.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; None",Natural Language Processing
all-MiniLM-L6-v2,Sentence Similarity,PyTorch; TensorFlow; Rust; Sentence Transformers,English,apache-2.0,https://arxiv.org/pdf/1904.06472.pdf; https://arxiv.org/pdf/2102.07033.pdf; https://arxiv.org/pdf/2104.08727.pdf; https://arxiv.org/pdf/1704.05179.pdf; https://arxiv.org/pdf/1810.09305.pdf,733,s2orc; flax-sentence-embeddings/stackexchange_xml; ms_marco; gooaq; yahoo_answers_topics; code_search_net; search_qa; eli5; snli; multi_nli; wikihow; natural_questions; trivia_qa; embedding-data/sentence-compression; embedding-data/flickr30k-captions; embedding-data/altlex; embedding-data/simple-wiki; embedding-data/QQP; embedding-data/SPECTER; embedding-data/PAQ_pairs; embedding-data/WikiAnswers,1932147,273.5459323,135,https://huggingface.co/sentence-transformers/all-MiniLM-L6-v2,"This is a sentence-transformers model: It maps sentences & paragraphs to a 384 dimensional dense vector space and can be used for tasks like clustering or semantic search.; Using this model becomes easy when you have sentence-transformers installed:; Then you can use the model like this:; Without sentence-transformers, you can use the model like this: First, you pass your input through the transformer model, then you have to apply the right pooling-operation on-top of the contextualized word embeddings.; For an automated evaluation of this model, see the Sentence Embeddings Benchmark: https://seb.sbert.net",Natural Language Processing
ioc-controlnet,,,,,,126,,0,0.002258797,2,https://huggingface.co/ioclab/ioc-controlnet," Download our ControlNet Models for AUTOMATIC1111 Stable Diffusion Web UI!; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
FreeWilly1-Delta-SafeTensor,Text Generation,Safetensors; Transformers,English,cc-by-nc-4.0,https://arxiv.org/pdf/2302.13971.pdf; https://arxiv.org/pdf/2306.02707.pdf,29,conceptofmind/cot_submix_original; conceptofmind/flan2021_submix_original; conceptofmind/t0_submix_original; conceptofmind/niv2_submix_original,0,133654.8837,1,https://huggingface.co/stabilityai/FreeWilly1-Delta-SafeTensor,"FreeWilly is a Llama65B model fine-tuned on an Orca style Dataset; FreeWilly1 cannot be used from the stabilityai/FreeWilly1-Delta-SafeTensor weights alone. To obtain the correct model, one must add back the difference between LLaMA 65B and stabilityai/FreeWilly1-Delta-SafeTensor weights. We provide the apply_delta.py script to automate the conversion, which you can run as:; Start chatting with FreeWilly using the following code snippet:; FreeWilly should be used with prompts formatted similarly to Alpaca as below:; FreeWilly is trained on our internal Orca-style dataset",Natural Language Processing
chatglm-6b,,PyTorch; Transformers,Chinese; English,,https://arxiv.org/pdf/2103.10360.pdf; https://arxiv.org/pdf/2210.02414.pdf,2530,,586003,13734.71223,200,https://huggingface.co/THUDM/chatglm-6b,"
   ? Blog ? ? Github Repo ? ? Twitter ? ? [GLM@ACL 22] [GitHub] ? ? [GLM-130B@ICLR 23] [GitHub] 
; 
    ? Join our Slack and WeChat
; ÎÒÃÇ·¢²¼ÁË ChatGLM2-6B£¬ChatGLM-6B µÄÉý¼¶°æ±¾£¬ÔÚ±£ÁôÁËÁË³õ´úÄ£ÐÍ¶Ô»°Á÷³©¡¢²¿ÊðÃÅ¼÷½ÏµÍµÈÖÚ¶àÓÅÐãÌØÐÔµÄ»ù´¡Ö®ÉÏ£¬ÒýÈëÁË¸üÇ¿´óµÄÐÔÄÜ¡¢¸ü³¤µÄÉÏÏÂÎÄ¡¢¸ü¸ßÐ§µÄÍÆÀíµÈÉý¼¶¡£; ChatGLM-6B ÊÇÒ»¸ö¿ªÔ´µÄ¡¢Ö§³ÖÖÐÓ¢Ë«ÓïÎÊ´ðµÄ¶Ô»°ÓïÑÔÄ£ÐÍ£¬»ùÓÚ General Language Model (GLM) ¼Ü¹¹£¬¾ßÓÐ 62 ÒÚ²ÎÊý¡£½áºÏÄ£ÐÍÁ¿»¯¼¼Êõ£¬ÓÃ»§¿ÉÒÔÔÚÏû·Ñ¼¶µÄÏÔ¿¨ÉÏ½øÐÐ±¾µØ²¿Êð£¨INT4 Á¿»¯¼¶±ðÏÂ×îµÍÖ»Ðè 6GB ÏÔ´æ£©¡£ChatGLM-6B Ê¹ÓÃÁËºÍ ChatGLM ÏàÍ¬µÄ¼¼Êõ£¬Õë¶ÔÖÐÎÄÎÊ´ðºÍ¶Ô»°½øÐÐÁËÓÅ»¯¡£¾­¹ýÔ¼ 1T ±êÊ¶·ûµÄÖÐÓ¢Ë«ÓïÑµÁ·£¬¸¨ÒÔ¼à¶½Î¢µ÷¡¢·´À¡×ÔÖú¡¢ÈËÀà·´À¡Ç¿»¯Ñ§Ï°µÈ¼¼ÊõµÄ¼Ó³Ö£¬62 ÒÚ²ÎÊýµÄ ChatGLM-6B ÒÑ¾­ÄÜÉú³ÉÏàµ±·ûºÏÈËÀàÆ«ºÃµÄ»Ø´ð¡£ ChatGLM-6B È¨ÖØ¶ÔÑ§ÊõÑÐ¾¿ÍêÈ«¿ª·Å£¬ÔÚÌîÐ´ÎÊ¾í½øÐÐµÇ¼ÇºóÒàÔÊÐíÃâ·ÑÉÌÒµÊ¹ÓÃ¡£; ChatGLM-6B is an open bilingual language model based on General Language Model (GLM) framework, with 6.2 billion parameters. With the quantization technique, users can deploy locally on consumer-grade graphics cards (only 6GB of GPU memory is required at the INT4 quantization level). ChatGLM-6B uses technology similar to ChatGPT, optimized for Chinese QA and dialogue. The model is trained for about 1T tokens of Chinese and English corpus, supplemented by supervised fine-tuning, feedback bootstrap, and reinforcement learning with human feedback. With only about 6.2 billion parameters, the model is able to generate answers that are in line with human preference. ChatGLM-6B weights are completely open for academic research, and free commercial use is also allowed after completing the questionnaire.",
dolphin-llama-13b,Text Generation,PyTorch; Transformers,,other,,33,,0,26657.09109,,https://huggingface.co/ehartford/dolphin-llama-13b,"Dolphin ?
https://erichartford.com/dolphin; This model is based on llama1, so it is for non-commercial use only.  Future versions will be trained on llama2 and other open models that are suitable for commercial use.; This model is uncensored.  I have filtered the dataset to remove alignment and bias.  This makes the model compliant to any requests.  You are advised to implement your own alignment layer before exposing the model as a service.  It will be highly compliant to any requests, even unethical ones.  Please read my blog post about uncensored models.  https://erichartford.com/uncensored-models
You are responsible for any content you create using this model.  Enjoy responsibly.; This dataset is an open source implementation of Microsoft's Orca; After uncensoring, deduping, and cleaning, our dataset consists of:",Natural Language Processing
Nous-Hermes-Llama2-13b-GPTQ,Text Generation,PyTorch; Transformers,English,llama2,,27,,30,15628.61246,1,https://huggingface.co/NousResearch/Nous-Hermes-Llama2-13b-GPTQ,"Compute provided by our project sponsor Redmond AI, thank you! Follow RedmondAI on Twitter @RedmondAI.; Nous-Hermes-Llama2-13b is a state-of-the-art language model fine-tuned on over 300,000 instructions. This model was fine-tuned by Nous Research, with Teknium and Emozilla leading the fine tuning process and dataset curation, Redmond AI sponsoring the compute, and several other contributors.; This Hermes model uses the exact same dataset as Hermes on Llama-1. This is to ensure consistency between the old Hermes and new, for anyone who wanted to keep Hermes as similar to the old one, just more capable.; This model stands out for its long responses, lower hallucination rate, and absence of OpenAI censorship mechanisms. The fine-tuning process was performed with a 4096 sequence length on an 8x a100 80GB DGX machine.; 


",Natural Language Processing
llama2_7b_chat_uncensored-GGML,,Transformers,,other,,27,ehartford/wizard_vicuna_70k_unfiltered,32,61870.10417,2,https://huggingface.co/TheBloke/llama2_7b_chat_uncensored-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for George Sung's Llama2 7B Chat Uncensored.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; These are guaranteed to be compatible with any UIs, tools and libraries released since late May. They may be phased out soon, as they are largely superseded by the new k-quant methods.",
stable-diffusion-v1-4,Text-to-Image,Diffusers,,creativeml-openrail-m,https://arxiv.org/pdf/2207.12598.pdf; https://arxiv.org/pdf/2112.10752.pdf; https://arxiv.org/pdf/2103.00020.pdf; https://arxiv.org/pdf/2205.11487.pdf; https://arxiv.org/pdf/1910.09700.pdf,5790,,585404,0.088640938,862,https://huggingface.co/CompVis/stable-diffusion-v1-4,"Stable Diffusion is a latent text-to-image diffusion model capable of generating photo-realistic images given any text input.
For more information about how Stable Diffusion functions, please have a look at ?'s Stable Diffusion with ?Diffusers blog.; The Stable-Diffusion-v1-4 checkpoint was initialized with the weights of the Stable-Diffusion-v1-2 
checkpoint and subsequently fine-tuned on 225k steps at resolution 512x512 on ""laion-aesthetics v2 5+"" and 10% dropping of the text-conditioning to improve classifier-free guidance sampling.; This weights here are intended to be used with the ? Diffusers library. If you are looking for the weights to be loaded into the CompVis Stable Diffusion codebase, come here; Developed by: Robin Rombach, Patrick Esser; Model type: Diffusion-based text-to-image generation model",Multimodel
falcon-7b,Text Generation,PyTorch; Transformers,English,apache-2.0,https://arxiv.org/pdf/2205.14135.pdf; https://arxiv.org/pdf/1911.02150.pdf; https://arxiv.org/pdf/2101.00027.pdf; https://arxiv.org/pdf/2005.14165.pdf; https://arxiv.org/pdf/2104.09864.pdf; https://arxiv.org/pdf/2306.01116.pdf,691,tiiuae/falcon-refinedweb,1107310,14779.12843,27,https://huggingface.co/tiiuae/falcon-7b,"Falcon-7B is a 7B parameters causal decoder-only model built by TII and trained on 1,500B tokens of RefinedWeb enhanced with curated corpora. It is made available under the Apache 2.0 license.; Paper coming soon ?.; ? To get started with Falcon (inference, finetuning, quantization, etc.), we recommend reading this great blogpost fron HF!; ?? This is a raw, pretrained model, which should be further finetuned for most usecases. If you are looking for a version better suited to taking generic instructions in a chat format, we recommend taking a look at Falcon-7B-Instruct. ; ? Looking for an even more powerful model? Falcon-40B is Falcon-7B's big brother!",Natural Language Processing
control_v1p_sd15_brightness,Image-to-Image,Diffusers,English,creativeml-openrail-m,,85,ioclab/grayscale_image_aesthetic_3M,33556,1484.804014,7,https://huggingface.co/ioclab/control_v1p_sd15_brightness,"This model brings brightness control to Stable Diffusion, allowing users to colorize grayscale images or recolor generated images.; huggingface.co/spaces/ioclab/brightness-controlnet; [More Information Needed]; [More Information Needed]; [More Information Needed]",Computer Vision
detailed_eye-10,,,,creativeml-openrail-m,,26,,0,19.00148251,,https://huggingface.co/casque/detailed_eye-10,"Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
WizardCoder-15B-V1.0,Text Generation,PyTorch; Transformers,,cc-by-nc-4.0,https://arxiv.org/pdf/2306.08568.pdf,404,,13626,31747.26413,32,https://huggingface.co/WizardLM/WizardCoder-15B-V1.0,"This is the Full-Weight of WizardCoder.; Repository: https://github.com/nlpxucan/WizardLM/tree/main/WizardCoder; Twitter: https://twitter.com/WizardLM_AI/status/1669109414559911937; Paper: WizardCoder: Empowering Code Large Language Models with Evol-Instruct; To develop our WizardCoder model, we begin by adapting the Evol-Instruct method specifically for coding tasks. This involves tailoring the prompt to the domain of code-related instructions. Subsequently, we fine-tune the Code LLM, StarCoder, utilizing the newly created instruction-following training set.",Natural Language Processing
zeroscope_v2_576w,Text-to-Video,Diffusers,,cc-by-nc-4.0,,220,,21059,0.005004883,33,https://huggingface.co/cerspense/zeroscope_v2_576w,"; A watermark-free Modelscope-based video model optimized for producing high-quality 16:9 compositions and a smooth video output. This model was trained from the original weights using 9,923 clips and 29,769 tagged frames at 24 frames, 576x320 resolution.
zeroscope_v2_567w is specifically designed for upscaling with zeroscope_v2_XL using vid2vid in the 1111 text2video extension by kabachuha. Leveraging this model as a preliminary step allows for superior overall compositions at higher resolutions in zeroscope_v2_XL, permitting faster exploration in 576x320 before transitioning to a high-resolution render. See some example outputs that have been upscaled to 1024x576 using zeroscope_v2_XL. (courtesy of dotsimulate); zeroscope_v2_576w uses 7.9gb of vram when rendering 30 frames at 576x320; For upscaling, it's recommended to use zeroscope_v2_XL via vid2vid in the 1111 extension. It works best at 1024x576 with a denoise strength between 0.66 and 0.85. Remember to use the same prompt that was used to generate the original clip. ; Let's first install the libraries required:",Multimodel
llama-2-13B-Guanaco-QLoRA-GGML,Text Classification,Transformers,English,other,,24,,87,119316.5044,,https://huggingface.co/TheBloke/llama-2-13B-Guanaco-QLoRA-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Mikael110's Llama2 13B Guanaco QLoRA.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; Many thanks to William Beauchamp from Chai for providing the hardware used to make and upload these files!",Natural Language Processing
OrangeMixs,Text-to-Image,Diffusers,,creativeml-openrail-m,,3240,Nerfgun3/bad_prompt,11766,0.071629257,138,https://huggingface.co/WarriorMama777/OrangeMixs,"""OrangeMixs"" shares various Merge models that can be used with StableDiffusionWebui:Automatic1111 and others.
?
; Maintain a repository for the following purposes.; 
Hero image prompts(AOM3B2):https://majinai.art/ja/i/jhw20Z_; We support a Gradio Web UI to run OrangeMixs:
; +/hdg/ Stable Diffusion Models Cookbook - https://rentry.org/hdgrecipes#g-anons-unnamed-mix-e93c3bf7
Model names are named after Cookbook precedents?",Multimodel
llama-7b-hf,Text Generation,PyTorch; Transformers,,other,,1150,,245723,13484.53376,138,https://huggingface.co/decapoda-research/llama-7b-hf,"LLaMA-7B converted to work with Transformers/HuggingFace. This is under a special license, please see the LICENSE file for details.; --
license: other; Organization developing the model
The FAIR team of Meta AI.; Model date
LLaMA was trained between December. 2022 and Feb. 2023.; Model version
This is version 1 of the model.",Natural Language Processing
text2vec-large-chinese,Sentence Similarity,PyTorch; Safetensors; Transformers,Chinese,apache-2.0,,489,,288225,2662.939382,56,https://huggingface.co/GanymedeNil/text2vec-large-chinese,"Based on the derivative model of https://huggingface.co/shibing624/text2vec-base-chinese, replace MacBERT with LERT, and keep other training conditions unchanged¡£; Talk to me: https://twitter.com/GanymedeNil",Natural Language Processing
Llama-2-7B-GPTQ,Text Generation,Transformers; PyTorch,English,other,,23,,1626,3995.961163,,https://huggingface.co/TheBloke/Llama-2-7B-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for Meta's Llama 2 7B.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; Multiple quantisation parameters are provided, to allow you to choose the best one for your hardware and requirements.",Natural Language Processing
dreamlike-photoreal-2.0,Text-to-Image,Diffusers,English,other,,1450,,116056,4369.132147,129,https://huggingface.co/dreamlike-art/dreamlike-photoreal-2.0,"Warning: This model is horny! Add ""nude, naked"" to the negative prompt if want to avoid NSFW.  ; You can add photo to your prompt to make your gens look more photorealistic.Non-square aspect ratios work better for some prompts. If you want a portrait photo, try using a vertical aspect ratio. If you want a landscape photo, try using a horizontal aspect ratio.This model was trained on 768x768px images, so use 768x768px, 640x896px, 896x640px, etc. It also works pretty good with higher resolutions such as 768x1024px or 1024x768px.  ; You can use this model for free on dreamlike.art!; Download dreamlike-photoreal-2.0.ckpt (2.13GB); Download dreamlike-photoreal-2.0.safetensors (2.13GB)",Multimodel
Baichuan-7B,Text Generation,PyTorch; Transformers,Chinese; English,,https://arxiv.org/pdf/1910.07467.pdf; https://arxiv.org/pdf/2009.03300.pdf,704,,44902,14338.12457,,https://huggingface.co/baichuan-inc/Baichuan-7B,"Baichuan-7BÊÇÓÉ°Ù´¨ÖÇÄÜ¿ª·¢µÄÒ»¸ö¿ªÔ´µÄ´ó¹æÄ£Ô¤ÑµÁ·Ä£ÐÍ¡£»ùÓÚTransformer½á¹¹£¬ÔÚ´óÔ¼1.2ÍòÒÚtokensÉÏÑµÁ·µÄ70ÒÚ²ÎÊýÄ£ÐÍ£¬Ö§³ÖÖÐÓ¢Ë«Óï£¬ÉÏÏÂÎÄ´°¿Ú³¤¶ÈÎª4096¡£ÔÚ±ê×¼µÄÖÐÎÄºÍÓ¢ÎÄÈ¨Íþbenchmark£¨C-EVAL/MMLU£©ÉÏ¾ùÈ¡µÃÍ¬³ß´ç×îºÃµÄÐ§¹û¡£; Èç¹ûÏ£ÍûÊ¹ÓÃBaichuan-7B£¨Èç½øÐÐÍÆÀí¡¢FinetuneµÈ£©£¬ÎÒÃÇÍÆ¼öÊ¹ÓÃÅäÌ×´úÂë¿âBaichuan-7B¡£; Baichuan-7B is an open-source large-scale pre-trained model developed by Baichuan Intelligent Technology. Based on the Transformer architecture, it is a model with 7 billion parameters trained on approximately 1.2 trillion tokens. It supports both Chinese and English, with a context window length of 4096. It achieves the best performance of its size on standard Chinese and English authoritative benchmarks (C-EVAL/MMLU).; If you wish to use Baichuan-7B (for inference, finetuning, etc.), we recommend using the accompanying code library Baichuan-7B.; ÔÚÍ¬³ß´çÄ£ÐÍÖÐBaichuan-7B´ïµ½ÁËÄ¿Ç°SOTAµÄË®Æ½£¬²Î¿¼ÏÂÃæMMLUÖ¸±ê",Natural Language Processing
openchat_v2_openorca_preview,Text Generation,PyTorch; Transformers,,other,,35,Open-Orca/OpenOrca,79,0,,https://huggingface.co/openchat/openchat_v2_openorca_preview,"This repository is publicly accessible, but
			you have to accept the conditions to access its files and content.
		; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		; This is a preview version of OpenChat V2 trained for 2 epochs (total 5 epochs) on full (4.5M) OpenOrca dataset.; Important Notice: Beta Release for Limited Testing Purposes Only; This release is intended solely for a small group of beta testers and is not an official release or preview. We caution against publicizing or sharing this version as it may contain bugs, errors, or incomplete features that could negatively impact performance. We are actively working on improving the model and preparing it for an official release.",Natural Language Processing
Redmond-Puffin-13B-GPTQ,Text Generation,Transformers,eng,other,,22,,268,7436.603962,,https://huggingface.co/TheBloke/Redmond-Puffin-13B-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for NousResearch's Redmond Puffin 13B V1.3.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; Many thanks to William Beauchamp from Chai for providing the hardware used to make and upload these files!",Natural Language Processing
Nous-Hermes-13b,Text Generation,PyTorch; Transformers,English,gpl,,350,,6780,26624.49558,20,https://huggingface.co/NousResearch/Nous-Hermes-13b,"Nous-Hermes-13b is a state-of-the-art language model fine-tuned on over 300,000 instructions. This model was fine-tuned by Nous Research, with Teknium and Karan4D leading the fine tuning process and dataset curation, Redmond AI sponsoring the compute, and several other contributors. The result is an enhanced Llama 13b model that rivals GPT-3.5-turbo in performance across a variety of tasks.; This model stands out for its long responses, low hallucination rate, and absence of OpenAI censorship mechanisms. The fine-tuning process was performed with a 2000 sequence length on an 8x a100 80GB DGX machine for over 50 hours. ; The model was trained almost entirely on synthetic GPT-4 outputs. This includes data from diverse sources such as GPTeacher, the general, roleplay v1&2, code instruct datasets, Nous Instruct & PDACTL (unpublished), CodeAlpaca, Evol_Instruct Uncensored, GPT4-LLM, and Unnatural Instructions. ; Additional data inputs came from Camel-AI's Biology/Physics/Chemistry and Math Datasets, Airoboros' GPT-4 Dataset, and more from CodeAlpaca. The total volume of data encompassed over 300,000 instructions.; The model fine-tuning and the datasets were a collaboration of efforts and resources between Teknium, Karan4D, Nous Research, Huemin Art, and Redmond AI. ",Natural Language Processing
vicuna-7b-v1.3,Text Generation,PyTorch; Transformers,,,https://arxiv.org/pdf/2302.13971.pdf; https://arxiv.org/pdf/2306.05685.pdf,86,,93274,13804.03948,1,https://huggingface.co/lmsys/vicuna-7b-v1.3,"Vicuna is a chat assistant trained by fine-tuning LLaMA on user-shared conversations collected from ShareGPT.; The primary use of Vicuna is research on large language models and chatbots.
The primary intended users of the model are researchers and hobbyists in natural language processing, machine learning, and artificial intelligence.; Vicuna v1.3 is fine-tuned from LLaMA with supervised instruction fine-tuning.
The training data is around 140K conversations collected from ShareGPT.com.
See more details in the ""Training Details of Vicuna Models"" section in the appendix of this paper.; Vicuna is evaluated with standard benchmarks, human preference, and LLM-as-a-judge. See more details in this paper and leaderboard.; See vicuna_weights_version.md",Natural Language Processing
zeroscope_v2_XL,,Diffusers,,cc-by-nc-4.0,,395,,12029,0.005767555,12,https://huggingface.co/cerspense/zeroscope_v2_XL,"
example outputs (courtesy of dotsimulate); A watermark-free Modelscope-based video model capable of generating high quality video at 1024 x 576. This model was trained from the original weights with offset noise using 9,923 clips and 29,769 tagged frames at 24 frames, 1024x576 resolution.
zeroscope_v2_XL is specifically designed for upscaling content made with zeroscope_v2_576w using vid2vid in the 1111 text2video extension by kabachuha. Leveraging this model as an upscaler allows for superior overall compositions at higher resolutions, permitting faster exploration in 576x320 (or 448x256) before transitioning to a high-resolution render.; zeroscope_v2_XL uses 15.3gb of vram when rendering 30 frames at 1024x576; For upscaling, it's recommended to use the 1111 extension. It works best at 1024x576 with a denoise strength between 0.66 and 0.85. Remember to use the same prompt that was used to generate the original clip.; Let's first install the libraries required:",
llama-2-7b-chat-hf,Text Generation,PyTorch; Transformers,,,,21,,91504,13805.88471,1,https://huggingface.co/daryl149/llama-2-7b-chat-hf,"These are the converted model weights for Llama-2-7B-chat in Huggingface format.; Courtesy of Mirage-Studio.io, home of MirageGPT: the private ChatGPT alternative.; license: other
LLAMA 2 COMMUNITY LICENSE AGREEMENT	
Llama 2 Version Release Date: July 18, 2023; ""Agreement"" means the terms and conditions for use, reproduction, distribution and 
modification of the Llama Materials set forth herein.; ""Documentation"" means the specifications, manuals and documentation 
accompanying Llama 2 distributed by Meta at ai.meta.com/resources/models-and-
libraries/llama-downloads/.",Natural Language Processing
Llama-2-70B-fp16,Text Generation,Safetensors; Transformers; PyTorch,English,other,,21,,1161,141285.4621,,https://huggingface.co/TheBloke/Llama-2-70B-fp16,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are fp16 format model files for Meta's Llama 2 70B.; They were produced by downloading the PTH files from Meta, and then converting to HF format using the latest Transformers 4.32.0.dev0, from Git, with the Llama 2 PR included: https://github.com/huggingface/transformers/pull/24891.; Command to convert was:",Natural Language Processing
Nous-Hermes-Llama2-13b-GGML,,,English,llama2,,21,,0,34877.44935,1,https://huggingface.co/NousResearch/Nous-Hermes-Llama2-13b-GGML,"Compute provided by our project sponsor Redmond AI, thank you! Follow RedmondAI on Twitter @RedmondAI.; Nous-Hermes-Llama2-13b is a state-of-the-art language model fine-tuned on over 300,000 instructions. This model was fine-tuned by Nous Research, with Teknium and Emozilla leading the fine tuning process and dataset curation, Redmond AI sponsoring the compute, and several other contributors.; This Hermes model uses the exact same dataset as Hermes on Llama-1. This is to ensure consistency between the old Hermes and new, for anyone who wanted to keep Hermes as similar to the old one, just more capable.; This model stands out for its long responses, lower hallucination rate, and absence of OpenAI censorship mechanisms. The fine-tuning process was performed with a 4096 sequence length on an 8x a100 80GB DGX machine.; 


",
waifu-diffusion,Text-to-Image,Diffusers,English,creativeml-openrail-m,,2210,,267780,0.006028786,227,https://huggingface.co/hakurei/waifu-diffusion,"waifu-diffusion is a latent text-to-image diffusion model that has been conditioned on high-quality anime images through fine-tuning.; ; masterpiece, best quality, 1girl, green hair, sweater, looking at viewer, upper body, beanie, outdoors, watercolor, night, turtleneck; Original Weights; We also support a Gradio Web UI and Colab with Diffusers to run Waifu Diffusion:

",Multimodel
VoiceConversionWebUI,,ONNX,,mit,,411,,0,45704.65624,12,https://huggingface.co/lj1995/VoiceConversionWebUI,"Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
rwkv-4-world,Text Generation,PyTorch,12 languages,apache-2.0,,147,EleutherAI/pile; togethercomputer/RedPajama-Data-1T,0,175243.9232,3,https://huggingface.co/BlinkDL/rwkv-4-world,"RWKV-4 trained on 100+ world languages (70% English, 15% multilang, 15% code).; World = Some_Pile + Some_RedPajama + Some_OSCAR + All_Wikipedia + All_ChatGPT_Data_I_can_find; XXXtuned = finetune of World on MC4, OSCAR, wiki, etc.; How to use:; The differences between World & Raven:",Natural Language Processing
DreamShaper,Text-to-Image,Diffusers,English,other,,678,,71907,170824.3595,73,https://huggingface.co/Lykon/DreamShaper,"Read more about this model here: https://civitai.com/models/4384/dreamshaper; Also please support by giving 5 stars and a heart, which will notify new updates.; Please consider supporting me on Patreon or buy me a coffee; You can run this model on:; Inference API has been turned off for this model.",Multimodel
bark,Text-to-Speech,PyTorch; Transformers,13 languages,cc-by-nc-4.0,,216,,736,22726.53357,61,https://huggingface.co/suno/bark,"Bark is a transformer-based text-to-audio model created by Suno. 
Bark can generate highly realistic, multilingual speech as well as other audio - including music, 
background noise and simple sound effects. The model can also produce nonverbal 
communications like laughing, sighing and crying. To support the research community, 
we are providing access to pretrained model checkpoints ready for inference.; The original github repo and model card can be found here.; This model is meant for research purposes only. 
The model output is not censored and the authors do not endorse the opinions in the generated content. 
Use at your own risk.; Two checkpoints are released:; Try out Bark yourself!",Audio
m3e-large,,PyTorch; Sentence Transformers,Chinese; English,,,47,,1874,1331.764153,,https://huggingface.co/moka-ai/m3e-large,m3e-small | m3e-base | m3e-large; M3E ÊÇ Moka Massive Mixed Embedding µÄËõÐ´; ËµÃ÷£º; Tips:; ÄúÐèÒªÏÈ°²×° sentence-transformers,
Llama-2-70B-Chat-fp16,Text Generation,Safetensors; Transformers; PyTorch,English,other,,19,,1080,141285.4623,1,https://huggingface.co/TheBloke/Llama-2-70B-Chat-fp16,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are fp16 pytorch model files for Meta's Llama 2 70B Chat.; They were produced by downloading the PTH files from Meta, and then converting to HF format using the latest Transformers 4.32.0.dev0, from Git, with the Llama 2 PR included: https://github.com/huggingface/transformers/pull/24891.; Command to convert was:",Natural Language Processing
LLongMA-2-13b,Text Generation,PyTorch; Transformers,,,,19,,30,0,,https://huggingface.co/conceptofmind/LLongMA-2-13b,"This repository is publicly accessible, but
			you have to accept the conditions to access its files and content.
		; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		; No model card; New: Create and edit this model card directly on the website!",Natural Language Processing
gpt2,Text Generation,PyTorch; TensorFlow; JAX; TF Lite; Rust; ONNX; Safetensors; Transformers,English,mit,,1270,,14736272,3666.85439,850,https://huggingface.co/gpt2,"Test the whole generation capabilities here: https://transformer.huggingface.co/doc/gpt2-large; Pretrained model on English language using a causal language modeling (CLM) objective. It was introduced in
this paper
and first released at this page.; Disclaimer: The team releasing GPT-2 also wrote a
model card for their model. Content from this model card
has been written by the Hugging Face team to complete the information they provided and give specific examples of bias.; GPT-2 is a transformers model pretrained on a very large corpus of English data in a self-supervised fashion. This
means it was pretrained on the raw texts only, with no humans labelling them in any way (which is why it can use lots
of publicly available data) with an automatic process to generate inputs and labels from those texts. More precisely,
it was trained to guess the next word in sentences.; More precisely, inputs are sequences of continuous text of a certain length and the targets are the same sequence,
shifted one token (word or piece of word) to the right. The model uses internally a mask-mechanism to make sure the
predictions for the token i only uses the inputs from 1 to i but not the future tokens.",Natural Language Processing
gpt-j-6b,Text Generation,PyTorch; TensorFlow; JAX; Transformers,English,apache-2.0,https://arxiv.org/pdf/2104.09864.pdf; https://arxiv.org/pdf/2101.00027.pdf,1220,EleutherAI/pile,384727,74345.01182,24,https://huggingface.co/EleutherAI/gpt-j-6b,"GPT-J 6B is a transformer model trained using Ben Wang's Mesh Transformer JAX. ""GPT-J"" refers to the class of model, while ""6B"" represents the number of trainable parameters.; * Each layer consists of one feedforward block and one self attention block.; ? Although the embedding matrix has a size of 50400, only 50257 entries are used by the GPT-2 tokenizer.; The model consists of 28 layers with a model dimension of 4096, and a feedforward dimension of 16384. The model
dimension is split into 16 heads, each with a dimension of 256. Rotary Position Embedding (RoPE) is applied to 64
dimensions of each head. The model is trained with a tokenization vocabulary of 50257, using the same set of BPEs as
GPT-2/GPT-3.; GPT-J learns an inner representation of the English language that can be used to 
extract features useful for downstream tasks. The model is best at what it was 
pretrained for however, which is generating text from a prompt.",Natural Language Processing
long_llama_3b,Text Generation,PyTorch; Transformers,,apache-2.0,https://arxiv.org/pdf/2307.03170.pdf; https://arxiv.org/pdf/2305.16300.pdf,74,togethercomputer/RedPajama-Data-1T,8557,7015.004829,1,https://huggingface.co/syzymon/long_llama_3b,"; TLDR | Overview | Usage | LongLLaMA performance | Authors | Citation | License | Acknowledgments; This repository contains the research preview of LongLLaMA, a large language model capable of handling long contexts of 256k tokens or even more. ; LongLLaMA is built upon the foundation of OpenLLaMA and fine-tuned using the Focused Transformer (FoT) method.  We release a smaller 3B variant of the LongLLaMA model on a permissive license (Apache 2.0) and inference code supporting longer contexts on Hugging Face. Our model weights can serve as the drop-in replacement of LLaMA in existing implementations (for short context up to 2048 tokens). Additionally, we provide evaluation results and comparisons against the original OpenLLaMA models. Stay tuned for further updates.; Focused Transformer: Contrastive Training for Context Scaling (FoT) presents a simple method for endowing language models with the ability to handle context consisting possibly of millions of tokens while training on significantly shorter input. FoT permits a subset of attention layers to access a memory cache of (key, value) pairs to extend the context length. The distinctive aspect of FoT is its training procedure, drawing from contrastive learning. Specifically, we deliberately expose the memory attention layers to both relevant and irrelevant keys (like negative samples from unrelated documents). This strategy incentivizes the model to differentiate keys connected with semantically diverse values, thereby enhancing their structure. This, in turn, makes it possible to extrapolate the effective context length much beyond what is seen in training. ",Natural Language Processing
Redmond-Puffin-13B-GGML,,Transformers,eng,other,,18,,26,121057.307,,https://huggingface.co/TheBloke/Redmond-Puffin-13B-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for NousResearch's Redmond Puffin 13B V1.3.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; Many thanks to William Beauchamp from Chai for providing the hardware used to make and upload these files!",
upstage-llama-30b-instruct-2048-GGML,Text Generation,Transformers,English,other,,18,,7,297881.6162,,https://huggingface.co/TheBloke/upstage-llama-30b-instruct-2048-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Upstage's Llama 30B Instruct 2048.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; Many thanks to William Beauchamp from Chai for providing the hardware used to make and upload these files!",Natural Language Processing
stable-diffusion-v-1-4-original,Text-to-Image,,,creativeml-openrail-m,https://arxiv.org/pdf/2207.12598.pdf; https://arxiv.org/pdf/2112.10752.pdf; https://arxiv.org/pdf/2103.00020.pdf; https://arxiv.org/pdf/2205.11487.pdf; https://arxiv.org/pdf/1910.09700.pdf,2460,,0,12257.36237,215,https://huggingface.co/CompVis/stable-diffusion-v-1-4-original,"Stable Diffusion is a latent text-to-image diffusion model capable of generating photo-realistic images given any text input.; The Stable-Diffusion-v-1-4 checkpoint was initialized with the weights of the Stable-Diffusion-v-1-2 
checkpoint and subsequently fine-tuned on 225k steps at resolution 512x512 on ""laion-aesthetics v2 5+"" and 10% dropping of the text-conditioning to improve classifier-free guidance sampling.; These weights are intended to be used with the original CompVis Stable Diffusion codebase. If you are looking for the model to use with the D?iffusers library, come here.; Developed by: Robin Rombach, Patrick Esser; Model type: Diffusion-based text-to-image generation model",Multimodel
flan-t5-xxl,Text2Text Generation,PyTorch; TensorFlow; JAX; Safetensors; Transformers,5 languages,apache-2.0,https://arxiv.org/pdf/2210.11416.pdf; https://arxiv.org/pdf/1910.09700.pdf,818,svakulenk0/qrecc; taskmaster2; djaym7/wiki_dialog; deepmind/code_contests; lambada; gsm8k; aqua_rat; esnli; quasc; qed,723038,183524.7096,232,https://huggingface.co/google/flan-t5-xxl,"; If you already know T5, FLAN-T5 is just better at everything. For the same number of parameters, these models have been fine-tuned on more than 1000 additional tasks covering also more languages. 
As mentioned in the first few lines of the abstract : ;  Flan-PaLM 540B achieves state-of-the-art performance on several benchmarks, such as 75.2% on five-shot MMLU. We also publicly release Flan-T5 checkpoints,1 which achieve strong few-shot performance even compared to much larger models, such as PaLM 62B. Overall, instruction finetuning is a general method for improving the performance and usability of pretrained language models.; Disclaimer: Content from this model card has been written by the Hugging Face team, and parts of it were copy pasted from the T5 model card.; Find below some example scripts on how to use the model in transformers:",Natural Language Processing
instructor-xl,Sentence Similarity,PyTorch; Sentence Transformers; Transformers,English,apache-2.0,https://arxiv.org/pdf/2212.09741.pdf,302,,22563,5082.306212,48,https://huggingface.co/hkunlp/instructor-xl,"We introduce Instructor???, an instruction-finetuned text embedding model that can generate text embeddings tailored to any task (e.g., classification, retrieval, clustering, text evaluation, etc.) and domains (e.g., science, finance, etc.) by simply providing the task instruction, without any finetuning. Instructor?? achieves sota on 70 diverse embedding tasks!
The model is easy to use with our customized sentence-transformer library. For more details, check out our paper and project page! ; **************************** Updates ****************************; Then you can use the model like this to calculate domain-specific and task-aware embeddings:; If you want to calculate customized embeddings for specific sentences, you may follow the unified template to write instructions: ; ??????????????????????????Represent the domain text_type for task_objective:",Natural Language Processing
instruct-pix2pix,Image-to-Image,Diffusers,,mit,,597,,100343,15769.60329,172,https://huggingface.co/timbrooks/instruct-pix2pix,"GitHub: https://github.com/timothybrooks/instruct-pix2pix
; To use InstructPix2Pix, install diffusers using main for now. The pipeline will be available in the next release",Computer Vision
whisper.cpp,,,,mit,,189,,0,14862.4626,8,https://huggingface.co/ggerganov/whisper.cpp,"Available models; For more information, visit:; https://github.com/ggerganov/whisper.cpp/tree/master/models; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
vicuna-13b-v1.3,Text Generation,PyTorch; Transformers,,,https://arxiv.org/pdf/2302.13971.pdf; https://arxiv.org/pdf/2306.05685.pdf,127,,45658,26655.24592,2,https://huggingface.co/lmsys/vicuna-13b-v1.3,"Vicuna is a chat assistant trained by fine-tuning LLaMA on user-shared conversations collected from ShareGPT.; The primary use of Vicuna is research on large language models and chatbots.
The primary intended users of the model are researchers and hobbyists in natural language processing, machine learning, and artificial intelligence.; Vicuna v1.3 is fine-tuned from LLaMA with supervised instruction fine-tuning.
The training data is around 140K conversations collected from ShareGPT.com.
See more details in the ""Training Details of Vicuna Models"" section in the appendix of this paper.; Vicuna is evaluated with standard benchmarks, human preference, and LLM-as-a-judge. See more details in this paper and leaderboard.; See vicuna_weights_version.md",Natural Language Processing
Baichuan-13B-Base,Text Generation,PyTorch; Transformers,Chinese; English,,https://arxiv.org/pdf/2104.09864.pdf; https://arxiv.org/pdf/2108.12409.pdf; https://arxiv.org/pdf/2009.03300.pdf,119,,11182,27168.33373,,https://huggingface.co/baichuan-inc/Baichuan-13B-Base,"Baichuan-13B-BaseÎªBaichuan-13BÏµÁÐÄ£ÐÍÖÐµÄÔ¤ÑµÁ·°æ±¾£¬¾­¹ý¶ÔÆëºóµÄÄ£ÐÍ¿É¼ûBaichuan-13B-Chat¡£; Baichuan-13B ÊÇÓÉ°Ù´¨ÖÇÄÜ¼Ì Baichuan-7B Ö®ºó¿ª·¢µÄ°üº¬ 130 ÒÚ²ÎÊýµÄ¿ªÔ´¿ÉÉÌÓÃµÄ´ó¹æÄ£ÓïÑÔÄ£ÐÍ£¬ÔÚÈ¨ÍþµÄÖÐÎÄºÍÓ¢ÎÄ benchmark ÉÏ¾ùÈ¡µÃÍ¬³ß´ç×îºÃµÄÐ§¹û¡£±¾´Î·¢²¼°üº¬ÓÐÔ¤ÑµÁ· (Baichuan-13B-Base) ºÍ¶ÔÆë (Baichuan-13B-Chat) Á½¸ö°æ±¾¡£Baichuan-13B ÓÐÈçÏÂ¼¸¸öÌØµã£º; Baichuan-13B is an open-source, commercially usable large-scale language model developed by Baichuan Intelligence, following Baichuan-7B. With 13 billion parameters, it achieves the best performance in standard Chinese and English benchmarks among models of its size. This release includes two versions: pre-training (Baichuan-13B-Base) and alignment (Baichuan-13B-Chat). Baichuan-13B has the following features:; Developed by: °Ù´¨ÖÇÄÜ(Baichuan Intelligent Technology); Email: opensource@baichuan-inc.com",Natural Language Processing
Llama-2-13B-Chat-fp16,Text Generation,PyTorch; Transformers,,,,17,,966,26657.09569,,https://huggingface.co/TheBloke/Llama-2-13B-Chat-fp16,No model card; New: Create and edit this model card directly on the website!,Natural Language Processing
Nous-Hermes-Llama2-GPTQ,Text Generation,Transformers,English,other,,17,,107,7436.601263,,https://huggingface.co/TheBloke/Nous-Hermes-Llama2-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for Nous Research's Nous Hermes Llama 2 13B.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; Multiple quantisation parameters are provided, to allow you to choose the best one for your hardware and requirements.",Natural Language Processing
llama2-7b-chat-codeCherryPop-qLoRA-GGML,,Transformers,,other,,17,,3,61870.10544,,https://huggingface.co/TheBloke/llama2-7b-chat-codeCherryPop-qLoRA-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; This repo contains GGML format model files for TokenBender's Llama-2-7B-Chat Code Cherry Pop.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; These are guaranteed to be compatible with any UIs, tools and libraries released since late May. They may be phased out soon, as they are largely superseded by the new k-quant methods.",
pygmalion-6b,Conversational,PyTorch; TensorBoard; Transformers,English,creativeml-openrail-m,,592,,191985,16735.55981,24,https://huggingface.co/PygmalionAI/pygmalion-6b,"Pymalion 6B is a proof-of-concept dialogue model based on EleutherAI's GPT-J-6B.; Warning: This model is NOT suitable for use by minors. It will output X-rated content under certain circumstances.; The fine-tuning dataset consisted of 56MB of dialogue data gathered from multiple sources, which includes both real and partially machine-generated conversations.; Model weights were initialized from the uft-6b ConvoGPT model made available in this commit.; The model was then further fine-tuned on ~48.5 million tokens for ~5k steps on 4 NVIDIA A40s using DeepSpeed.",Natural Language Processing
mpt-7b-8k-chat,Text Generation,PyTorch; Transformers,,cc-by-nc-sa-4.0,https://arxiv.org/pdf/2205.14135.pdf; https://arxiv.org/pdf/2108.12409.pdf; https://arxiv.org/pdf/2010.04245.pdf,16,camel-ai/code; ehartford/wizard_vicuna_70k_unfiltered; anon8231489123/ShareGPT_Vicuna_unfiltered; teknium1/GPTeacher/roleplay-instruct-v2-final; teknium1/GPTeacher/codegen-isntruct; timdettmers/openassistant-guanaco; camel-ai/math; project-baize/baize-chatbot/medical_chat_data; project-baize/baize-chatbot/quora_chat_data; project-baize/baize-chatbot/stackoverflow_chat_data; camel-ai/biology; camel-ai/chemistry; camel-ai/ai_society; jondurbin/airoboros-gpt4-1.2; LongConversations; camel-ai/physics,684,13621.4583,,https://huggingface.co/mosaicml/mpt-7b-8k-chat,"MPT-7B-Chat-8k is a chatbot-like model for dialogue generation.
It was built by finetuning MPT-7B-8k on the ShareGPT-Vicuna, Camel-AI,
 GPTeacher, Guanaco, Baize and some generated datasets.
 This is the same dataset that MPT-30B-Chat was trained on.; This model was trained by MosaicML and follows a modified decoder-only transformer architecture.; July 18, 2023; CC-By-NC-SA-4.0 (non-commercial use only); This model is best used with the MosaicML llm-foundry repository for training and finetuning.",Natural Language Processing
llama2-22b,Text Generation,PyTorch; Transformers,,,,16,togethercomputer/RedPajama-Data-1T-Sample,1,44708.37072,,https://huggingface.co/chargoddard/llama2-22b,"This is Llama 2 13b with some additional attention heads from original-flavor Llama 33b frankensteined on.; Fine-tuned on ~10M tokens from RedPajama to settle in the transplants a little.; Not intended for use as-is - this model is meant to serve as a base for further tuning, hopefully with a greater capacity for learning than 13b.",Natural Language Processing
speaker-diarization,Automatic Speech Recognition,pyannote.audio,,mit,https://arxiv.org/pdf/2012.01477.pdf; https://arxiv.org/pdf/2110.07058.pdf; https://arxiv.org/pdf/2005.08072.pdf,367,ami; dihard; voxconverse; aishell; repere; voxceleb,1145415,0,48,https://huggingface.co/pyannote/speaker-diarization,"This repository is publicly accessible, but
			you have to accept the conditions to access its files and content.
		; The collected information will help acquire a better knowledge of pyannote.audio userbase and help its maintainers apply for grants to improve it further. If you are an academic researcher, please cite the relevant papers in your own publications using the model. If you work for a company, please consider contributing back to pyannote.audio development (e.g. through unrestricted gifts). We also provide scientific consulting services around speaker diarization and machine listening.; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		; Relies on pyannote.audio 2.1.1: see installation instructions.; In case the number of speakers is known in advance, one can use the num_speakers option:",Audio
openjourney,Text-to-Image,Diffusers; Safetensors,English,creativeml-openrail-m,,2790,,327457,4854.244627,296,https://huggingface.co/prompthero/openjourney,"Include 'mdjrny-v4 style' in prompt. Here you'll find hundreds of Openjourney prompts; ; (Same parameters, just added ""mdjrny-v4 style"" at the beginning):



; This model can be used just like any other Stable Diffusion model. For more information,
please have a look at the Stable Diffusion.; You can also export the model to ONNX, MPS and/or FLAX/JAX.",Multimodel
ControlNet,,,,openrail,,3060,,0,0.005019531,244,https://huggingface.co/lllyasviel/ControlNet,This is the pretrained weights and some other detector weights of ControlNet.; See also: https://github.com/lllyasviel/ControlNet; ControlNet/models/control_sd15_canny.pth; ControlNet/models/control_sd15_depth.pth; ControlNet/models/control_sd15_hed.pth,
Wizard-Vicuna-30B-Uncensored-GPTQ,Text Generation,Transformers,English,other,,244,ehartford/wizard_vicuna_70k_unfiltered,8220,17308.0362,1,https://huggingface.co/TheBloke/Wizard-Vicuna-30B-Uncensored-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for Eric Hartford's Wizard-Vicuna-30B-Uncensored.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; These models were quantised using hardware kindly provided by Latitude.sh.",Natural Language Processing
mpt-7b-8k-instruct,Text Generation,PyTorch; Transformers,,cc-by-sa-3.0,https://arxiv.org/pdf/2205.14135.pdf; https://arxiv.org/pdf/2108.12409.pdf; https://arxiv.org/pdf/2010.04245.pdf,15,competition_math; conceptofmind/cot_submix_original/cot_gsm8k; knkarthick/dialogsum; mosaicml/dolly_hhrlhf; duorc; tau/scrolls/qasper; emozilla/quality; scrolls/summ_screen_fd; spider,1889,13621.45871,,https://huggingface.co/mosaicml/mpt-7b-8k-instruct,"MPT-7B-Instruct-8k is a model for long-form instruction following, especially question-answering on and summarization of longer documents.
It is built by finetuning MPT-7B-8k on Dolly HHRLHF derived from the Databricks Dolly-15k and the Anthropic Helpful and Harmless (HH-RLHF) datasets. It is also trained on Competition Math, Duorc, CoT GSM8k, Qasper, Quality, Summ Screen FD and Spider.
This is the same dataset that MPT-30B-Instruct was trained on.; This model was trained by MosaicML and follows a modified decoder-only transformer architecture.; July 18, 2023;  CC-By-SA-3.0; This model is best used with the MosaicML llm-foundry repository for training and finetuning.",Natural Language Processing
chatglm2-6b-int4,,PyTorch; Transformers,Chinese; English,,https://arxiv.org/pdf/2103.10360.pdf; https://arxiv.org/pdf/2210.02414.pdf; https://arxiv.org/pdf/1911.02150.pdf,112,,90617,4017.784148,29,https://huggingface.co/THUDM/chatglm2-6b-int4,"
  ? Github Repo ? ? Twitter ? ? [GLM@ACL 22] [GitHub] ? ? [GLM-130B@ICLR 23] [GitHub] 
; 
    ? Join our Slack and WeChat
; ChatGLM2-6B ÊÇ¿ªÔ´ÖÐÓ¢Ë«Óï¶Ô»°Ä£ÐÍ ChatGLM-6B µÄµÚ¶þ´ú°æ±¾£¬ÔÚ±£ÁôÁË³õ´úÄ£ÐÍ¶Ô»°Á÷³©¡¢²¿ÊðÃÅ¼÷½ÏµÍµÈÖÚ¶àÓÅÐãÌØÐÔµÄ»ù´¡Ö®ÉÏ£¬ChatGLM2-6B ÒýÈëÁËÈçÏÂÐÂÌØÐÔ£º; ChatGLM2-6B is the second-generation version of the open-source bilingual (Chinese-English) chat model ChatGLM-6B. It retains the smooth conversation flow and low deployment threshold of the first-generation model, while introducing the following new features:; ¿ÉÒÔÍ¨¹ýÈçÏÂ´úÂëµ÷ÓÃ ChatGLM-6B Ä£ÐÍÀ´Éú³É¶Ô»°£º",
notwaifu-diffusion-xl,,,English,other,,15,,0,0,,https://huggingface.co/gmonsoon/notwaifu-diffusion-xl,"This repository is publicly accessible, but
			you have to accept the conditions to access its files and content.
		; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		; Please for anyone, don't reupload my finetuned models to other site, like Civitai or image generating site like Seeart, Yodayo or other sites. Thank you for understanding this. ; Like my works and want to collaboration or funding my projects? contact me.; Sample

 ",
llava-llama-2-13b-chat-lightning-preview,Text Generation,PyTorch; Transformers,,,,15,,141,26665.4933,,https://huggingface.co/liuhaotian/llava-llama-2-13b-chat-lightning-preview,"Model type:
LLaVA is an open-source chatbot trained by fine-tuning LLaMA/Vicuna on GPT-generated multimodal instruction-following data.
It is an auto-regressive language model, based on the transformer architecture.; Model date:
LLaVA-LLaMA-2-13B-Chat-Preview was trained in July 2023.; Paper or resources for more information:
https://llava-vl.github.io/; Llama 2 is licensed under the LLAMA 2 Community License, 
Copyright (c) Meta Platforms, Inc. All Rights Reserved.; Where to send questions or comments about the model:
https://github.com/haotian-liu/LLaVA/issues",Natural Language Processing
upstage-llama-30b-instruct-2048-GPTQ,Text Generation,Transformers,English,other,,15,,247,17307.94551,,https://huggingface.co/TheBloke/upstage-llama-30b-instruct-2048-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for Upstage's Llama 30B Instruct 2048.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; Many thanks to William Beauchamp from Chai for providing the hardware used to make and upload these files!",Natural Language Processing
LLongMA-2-7B-GGML,,Transformers,,other,https://arxiv.org/pdf/2108.12409.pdf; https://arxiv.org/pdf/2212.10554.pdf,15,,11,61870.10651,,https://huggingface.co/TheBloke/LLongMA-2-7B-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for ConceptofMind's LLongMA 2 7B.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; This is an extended context base Llama 2 model.  Please check if your GGML client supports extended context. llama.cpp and KoboldCpp do, but I have not verified the others.",
bart-large-mnli,Zero-Shot Classification,PyTorch; JAX; Rust; Safetensors; Transformers,,mit,https://arxiv.org/pdf/1910.13461.pdf; https://arxiv.org/pdf/1909.00161.pdf,594,multi_nli,3898557,7099.008516,124,https://huggingface.co/facebook/bart-large-mnli,"This is the checkpoint for bart-large after being trained on the MultiNLI (MNLI) dataset.; Additional information about this model:; Yin et al. proposed a method for using pre-trained NLI models as a ready-made zero-shot sequence classifiers. The method works by posing the sequence to be classified as the NLI premise and to construct a hypothesis from each candidate label. For example, if we want to evaluate whether a sequence belongs to the class ""politics"", we could construct a hypothesis of This text is about politics.. The probabilities for entailment and contradiction are then converted to label probabilities.; This method is surprisingly effective in many cases, particularly when used with larger pre-trained models like BART and Roberta. See this blog post for a more expansive introduction to this and other zero shot methods, and see the code snippets below for examples of using this model for zero-shot classification both with Hugging Face's built-in pipeline and with native Transformers/PyTorch code.; The model can be loaded with the zero-shot-classification pipeline like so:",Natural Language Processing
sd-vae-ft-mse-original,Text-to-Image,,,mit,,1010,,0,670.0077051,19,https://huggingface.co/stabilityai/sd-vae-ft-mse-original,"These weights are intended to be used with the original CompVis Stable Diffusion codebase. If you are looking for the model to use with the ? diffusers library, come here.; We publish two kl-f8 autoencoder versions, finetuned from the original kl-f8 autoencoder on a 1:1 ratio of LAION-Aesthetics and LAION-Humans, an unreleased subset containing only SFW images of humans. The intent was to fine-tune on the Stable Diffusion training set (the autoencoder was originally trained on OpenImages) but also enrich the dataset with images of humans to improve the reconstruction of faces.
The first, ft-EMA, was resumed from the original checkpoint, trained for 313198 steps and uses EMA weights. It uses the same loss configuration as the original checkpoint (L1 + LPIPS).
The second, ft-MSE, was resumed from ft-EMA and uses EMA weights and was trained for another 280k steps using a different loss, with more emphasis 
on MSE reconstruction (MSE + 0.1 * LPIPS). It produces somewhat ``smoother'' outputs. The batch size for both versions was 192 (16 A100s, batch size 12 per GPU).
To keep compatibility with existing models, only the decoder part was finetuned; the checkpoints can be used as a drop-in replacement for the existing autoencoder..; Original kl-f8 VAE vs f8-ft-EMA vs f8-ft-MSE; Visualization of reconstructions on  256x256 images from the COCO2017 validation dataset. ; 


256x256: ft-EMA (left), ft-MSE (middle), original (right)
",Multimodel
stable-diffusion-2-1-base,Text-to-Image,Diffusers,,openrail++,https://arxiv.org/pdf/2112.10752.pdf; https://arxiv.org/pdf/2202.00512.pdf; https://arxiv.org/pdf/1910.09700.pdf,456,,494813,21340.17417,231,https://huggingface.co/stabilityai/stable-diffusion-2-1-base,"This model card focuses on the model associated with the Stable Diffusion v2-1-base model.; This stable-diffusion-2-1-base model fine-tunes stable-diffusion-2-base (512-base-ema.ckpt) with 220k extra steps taken, with punsafe=0.98 on the same dataset. ; Developed by: Robin Rombach, Patrick Esser; Model type: Diffusion-based text-to-image generation model; Language(s): English",Multimodel
AsianModel,,,,openrail,,148,,0,18790.40152,3,https://huggingface.co/BanKaiPls/AsianModel,"Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
starchat-beta,Text Generation,PyTorch; TensorBoard; Safetensors; Transformers,,bigcode-openrail-m,,164,,2021106,64199.10244,8,https://huggingface.co/HuggingFaceH4/starchat-beta,"StarChat is a series of language models that are trained to act as helpful coding assistants. StarChat-¦Â is the second model in the series, and is a fine-tuned version of StarCoderPlus that was trained on an ""uncensored"" variant of the openassistant-guanaco dataset. We found that removing the in-built alignment of the OpenAssistant dataset boosted performance on the Open LLM Leaderboard and made the model more helpful at coding tasks. However, this means that model is likely to generate problematic text when prompted to do so and should only be used for educational and research purposes.; The model was fine-tuned on a variant of the OpenAssistant/oasst1 dataset, which contains a diverse range of dialogues in over 35 languages. As a result, the model can be used for chat and you can check out our demo to test its coding capabilities. ; Here's how you can run the model using the pipeline() function from ? Transformers:; StarChat-¦Â has not been aligned to human preferences with techniques like RLHF or deployed with in-the-loop filtering of responses like ChatGPT, so the model can produce problematic outputs (especially when prompted to do so). 
Models trained primarily on code data will also have a more skewed demographic bias commensurate with the demographics of the GitHub community, for more on this see the StarCoder dataset which is derived from The Stack.; Since the base model was pretrained on a large corpus of code, it may produce code snippets that are syntactically valid but semantically incorrect. 
For example, it may produce code that does not compile or that produces incorrect results.It may also produce code that is vulnerable to security exploits.We have observed the model also has a tendency to produce false URLs which should be carefully inspected before clicking.",Natural Language Processing
controlnet_qrcode-control_v1p_sd15,Image-to-Image,Diffusers,English,openrail++,,141,,51831,5900.408976,53,https://huggingface.co/DionTimmer/controlnet_qrcode-control_v1p_sd15,"; This repo holds the safetensors & diffusers versions of the QR code conditioned ControlNet for Stable Diffusion v1.5.
The Stable Diffusion 2.1 version is marginally more effective, as it was developed to address my specific needs. However, this 1.5 version model was also trained on the same dataset for those who are using the older version.; These models perform quite well in most cases, but please note that they are not 100% accurate. In some instances, the QR code shape might not come through as expected. You can increase the ControlNet weight to emphasize the QR code shape. However, be cautious as this might negatively impact the style of your output.To optimize for scanning, please generate your QR codes with correction mode 'H' (30%).; To balance between style and shape, a gentle fine-tuning of the control weight might be required based on the individual input and the desired output, aswell as the correct prompt. Some prompts do not work until you increase the weight by a lot. The process of finding the right balance between these factors is part art and part science. For the best results, it is recommended to generate your artwork at a resolution of 768. This allows for a higher level of detail in the final product, enhancing the quality and effectiveness of the QR code-based artwork.; The simplest way to use this is to place the .safetensors model and its .yaml config file in the folder where your other controlnet models are installed, which varies per application. 
For usage in auto1111 they can be placed in the webui/models/ControlNet folder. They can be loaded using the controlnet webui extension which you can install through the extensions tab in the webui (https://github.com/Mikubill/sd-webui-controlnet). Make sure to enable your controlnet unit and set your input image as the QR code. Set the model to either the SD2.1 or 1.5 version depending on your base stable diffusion model, or it will error. No pre-processor is needed, though you can use the invert pre-processor for a different variation of results. 768 is the preferred resolution for generation since it allows for more detail.
Make sure to look up additional info on how to use controlnet if you get stuck, once you have the webui up and running its really easy to install the controlnet extension aswell.",Computer Vision
polylm-13b,Text Generation,PyTorch; Transformers,18 languages,apache-2.0,https://arxiv.org/pdf/2307.06018.pdf; https://arxiv.org/pdf/2104.09864.pdf,25,,1010,31472.31951,1,https://huggingface.co/DAMO-NLP-MT/polylm-13b," Large language models (LLMs) demonstrate remarkable ability to comprehend, reason, and generate following nature language instructions. However, the development of LLMs has been primarily focused on high-resource languages, such as English, thereby limiting their applicability and research in other languages. Consequently, we present PolyLM, a multilingual LLM trained on 640 billion (B) tokens, avaliable in two model sizes: 1.7B and 13B. To enhance its multilingual capabilities, we 1) integrate bilingual data into training data; and 2) adopt a curriculum learning strategy that increases the proportion of non-English data from 30% in the first stage to 60% in the final stage during pre-training. Further, we propose a multilingual self-instruct method which automatically generates 132.7K  diverse multilingual instructions for model fine-tuning. To assess the model's performance, we collect several existing multilingual tasks, including multilingual understanding, question answering, generation, and translation. Extensive experiments show that PolyLM surpasses other open-source models such as LLaMA and BLOOM on multilingual tasks while maintaining comparable performance in English.; Find below some example scripts on how to use the model in transformers:; The primary use is research on language models, including: research on zero-shot NLP tasks and in-context few-shot learning NLP tasks, such as reasoning, and question answering; advancing fairness and safety research, and understanding limitations of current large language models; See the research paper for further details.; More information needed.",Natural Language Processing
limarp-llama2,,,,,https://arxiv.org/pdf/2305.11206.pdf; https://arxiv.org/pdf/2305.14314.pdf,14,,0,0.011640625,,https://huggingface.co/lemonilia/limarp-llama2,"LIMARP-Llama2 is an experimental Llama2 finetune narrowly focused on novel-style roleplay chatting.; To considerably facilitate uploading and distribution, LoRA adapters have been provided instead of the merged models. You should get the Llama2 base model first, either from Meta or from one of the reuploads on HuggingFace (for example here and here). It is also possible to apply the LoRAs on different Llama2-based models (e.g. LLongMA-2 or Nous-Hermes-Llama2), although this is largely untested and the final results may not work as intended.; This is an experimental attempt at creating an RP-oriented fine-tune using a manually-curated, high-quality dataset of human-generated conversations. The main rationale for this are the observations from Zhou et al.. The authors suggested that just 1000-2000 carefully curated training examples may yield high quality output for assistant-type chatbots. This is in contrast with the commonly employed strategy where a very large number of training examples (tens of thousands to even millions) of widely varying quality are used.; For LIMARP a similar approach was used, with the difference that the conversational data is almost entirely human-generated. Every training example is manually compiled and selected to comply with subjective quality parameters, with virtually no chance for OpenAI-style alignment responses to come up.; The model is intended to approximate the experience of 1-on-1 roleplay as observed on many Internet forums dedicated on roleplaying. It must be used with a specific format similar to that of this template:",
llama-2-ko-7b,Text Generation,PyTorch; Safetensors; Transformers,English; Korean,,https://arxiv.org/pdf/2307.09288.pdf,14,,288,27433.57909,,https://huggingface.co/beomi/llama-2-ko-7b,"Llama-2-Ko serves as an advanced iteration of Llama 2, benefiting from an expanded vocabulary and the inclusion of a Korean corpus in its further pretraining. Just like its predecessor, Llama-2-Ko operates within the broad range of generative text models that stretch from 7 billion to 70 billion parameters. This repository focuses on the 7B pretrained version, which is tailored to fit the Hugging Face Transformers format. For access to the other models, feel free to consult the index provided below.; Model Developers Junbum Lee (Beomi); Variations Llama-2-Ko will come in a range of parameter sizes ¡ª 7B, 13B, and 70B ¡ª as well as pretrained and fine-tuned variations.; Input Models input text only.; Output Models generate text only.",Natural Language Processing
Llama-2-70B-Chat-GGML,Text Generation,Transformers; PyTorch,English,other,https://arxiv.org/pdf/2307.09288.pdf,14,,0,576921.633,,https://huggingface.co/TheBloke/Llama-2-70B-Chat-GGML,Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; This repo contains GGML format model files for Meta's Llama 2 70B Chat.; To use these files you need:; Example command:,Natural Language Processing
layoutlm-document-qa,Document Question Answering,PyTorch; TensorFlow; Safetensors; Transformers,English,mit,,410,,44880,1535.589957,159,https://huggingface.co/impira/layoutlm-document-qa,"This is a fine-tuned version of the multi-modal LayoutLM model for the task of question answering on documents. It has been fine-tuned using both the SQuAD2.0 and DocVQA datasets.; To run these examples, you must have PIL, pytesseract, and PyTorch installed in addition to transformers.; NOTE: This model and pipeline was recently landed in transformers via PR #18407 and PR #18414, so you'll need to use a recent version of transformers, for example:; This model was created by the team at Impira.",Multimodel
roberta-base-go_emotions,Text Classification,PyTorch; Transformers,English,mit,,48,go_emotions,4211611,502.3453072,3,https://huggingface.co/SamLowe/roberta-base-go_emotions,"Model trained from roberta-base on the go_emotions dataset for multi-label classification.; go_emotions is based on Reddit data and has 28 labels. It is a multi-label dataset where one or multiple labels may apply for any given input text, hence this model is a multi-label classification model with 28 'probability' float outputs for any given input text. Typically a threshold of 0.5 is applied to the probabilities for the prediction for each label.; The model was trained using AutoModelForSequenceClassification.from_pretrained with problem_type=""multi_label_classification"" for 3 epochs with a learning rate of 2e-5 and weight decay of 0.01.; Evaluation (of the 28 dim output via a threshold of 0.5 to binarize each) using the dataset test split gives:; But the metrics would be more meaningful when measured per label given the multi-label nature.",Natural Language Processing
blip-image-captioning-large,Image-to-Text,PyTorch; TensorFlow; Transformers,,bsd-3-clause,https://arxiv.org/pdf/2201.12086.pdf,205,,429342,3851.173263,224,https://huggingface.co/Salesforce/blip-image-captioning-large,"Model card for image captioning pretrained on COCO dataset - base architecture (with ViT large backbone).; Authors from the paper write in the abstract:; Vision-Language Pre-training (VLP) has advanced the performance for many vision-language tasks. However, most existing pre-trained models only excel in either understanding-based tasks or generation-based tasks. Furthermore, performance improvement has been largely achieved by scaling up the dataset with noisy image-text pairs collected from the web, which is a suboptimal source of supervision. In this paper, we propose BLIP, a new VLP framework which transfers flexibly to both vision-language understanding and generation tasks. BLIP effectively utilizes the noisy web data by bootstrapping the captions, where a captioner generates synthetic captions and a filter removes the noisy ones. We achieve state-of-the-art results on a wide range of vision-language tasks, such as image-text retrieval (+2.7% in average recall@1), image captioning (+2.8% in CIDEr), and VQA (+1.6% in VQA score). BLIP also demonstrates strong generalization ability when directly transferred to videolanguage tasks in a zero-shot manner. Code, models, and datasets are released.; You can use this model for conditional and un-conditional image captioning",Multimodel
instructor-large,Sentence Similarity,PyTorch; Sentence Transformers; Transformers,English,apache-2.0,https://arxiv.org/pdf/2212.09741.pdf,239,,40558,1375.426232,31,https://huggingface.co/hkunlp/instructor-large,"We introduce Instructor???, an instruction-finetuned text embedding model that can generate text embeddings tailored to any task (e.g., classification, retrieval, clustering, text evaluation, etc.) and domains (e.g., science, finance, etc.) by simply providing the task instruction, without any finetuning. Instructor?? achieves sota on 70 diverse embedding tasks (MTEB leaderboard)!
The model is easy to use with our customized sentence-transformer library. For more details, check out our paper and project page! ; **************************** Updates ****************************; Then you can use the model like this to calculate domain-specific and task-aware embeddings:; If you want to calculate customized embeddings for specific sentences, you may follow the unified template to write instructions: ; ??????????????????????????Represent the domain text_type for task_objective:",Natural Language Processing
IF-I-XL-v1.0,Text-to-Image,PyTorch; Diffusers,,deepfloyd-if-license,https://arxiv.org/pdf/2205.11487.pdf; https://arxiv.org/pdf/2110.02861.pdf,467,,40137,0,20,https://huggingface.co/DeepFloyd/IF-I-XL-v1.0,"This repository is publicly accessible, but
			you have to accept the conditions to access its files and content.
		; DeepFloyd LICENSE AGREEMENTThis License Agreement (as may be amended in accordance with this License Agreement, ¡°License¡±), between you, or your employer or other entity (if you are entering into this agreement on behalf of your employer or other entity) (¡°Licensee¡± or ¡°you¡±) and Stability AI Ltd.. (¡°Stability AI¡± or ¡°we¡±) applies to your use of any computer program, algorithm, source code, object code, or software that is made available by Stability AI under this License (¡°Software¡±) and any specifications, manuals, documentation, and other written information provided by Stability AI related to the Software (¡°Documentation¡±).By clicking ¡°I Accept¡± below or by using the Software, you agree to the terms of this License. If you do not agree to this License, then you do not have any rights to use the Software or Documentation (collectively, the ¡°Software Products¡±), and you must immediately cease using the Software Products. If you are agreeing to be bound by the terms of this License on behalf of your employer or other entity, you represent and warrant to Stability AI that you have full legal authority to bind your employer or such entity to this License. If you do not have the requisite authority, you may not accept the License or access the Software Products on behalf of your employer or other entity.; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		; DeepFloyd-IF is a pixel-based text-to-image triple-cascaded diffusion model, that can generate pictures with new state-of-the-art for photorealism and language understanding. The result is a highly efficient model that outperforms current state-of-the-art models, achieving a zero-shot FID-30K score of 6.66 on the COCO dataset.; Inspired by Photorealistic Text-to-Image Diffusion Models with Deep Language Understanding",Multimodel
Music-AI-Voices,,,,other,,242,,0,0,2,https://huggingface.co/QuickWick/Music-AI-Voices,"? Discord: https://discord.gg/aihub | Join the community, learn to make models, chat with link-minded people and lets create music ? ?; ? Discord Latino: https://discord.gg/Crfqs7uB5V | Entren a nuestra comunidad, aprendan a crear modelos AI, habla con otros sobre musica y disfruta las notas musicales ? ?; IMPORTANT!!!!!!!!!: VOICES CANNOT BE COPYRIGHTED. We do not promote piracy so please do not come in with that. We do promote legal-length sample clips of vocals. We promote music & AI produced music covers (impressions). We promote machine learning & Voice AI Models. Note: This repository does NOT include ANY DATASETS. Only models are included.; If you want your credits/name removed, please message me on discord and I will remove it diligently.; Tools: https://vocalremover.org/ https://x-minus.pro/ai https://create.musicfy.lol/",
Counterfeit-V3.0,Text-to-Image,,,creativeml-openrail-m,,348,,0,19773.44255,30,https://huggingface.co/gsdf/Counterfeit-V3.0,"?I have utilized BLIP-2 as a part of the training process. Natural language prompts might be more effective.?I prioritize the freedom of composition, which may result in a higher possibility of anatomical errors.?The expressiveness has been improved by merging with negative values, but the user experience may differ from previous checkpoints.?I have uploaded a new Negative Embedding, trained with Counterfeit-V3.0.There's likely no clear superiority or inferiority between this and the previous embedding, so feel free to choose according to your preference.Note that I'm not specifically recommending the use of this embedding.  ; prompt & Setting: https://civitai.com/models/4468/counterfeit-v30

; Unable to determine this model¡¯s library. Check the
								docs 
.
							",Multimodel
mpt-7b,Text Generation,PyTorch; Transformers,,apache-2.0,https://arxiv.org/pdf/2108.12409.pdf; https://arxiv.org/pdf/2302.13971.pdf; https://arxiv.org/pdf/2205.14135.pdf; https://arxiv.org/pdf/2010.04245.pdf; https://arxiv.org/pdf/1909.08053.pdf; https://arxiv.org/pdf/2302.06675.pdf,1020,mc4; c4; togethercomputer/RedPajama-Data-1T; bigcode/the-stack; allenai/s2orc,140606,13621.46279,12,https://huggingface.co/mosaicml/mpt-7b,"MPT-7B is a decoder-style transformer pretrained from scratch on 1T tokens of English text and code.
This model was trained by MosaicML.; MPT-7B is part of the family of MosaicPretrainedTransformer (MPT) models, which use a modified transformer architecture optimized for efficient training and inference.; These architectural changes include performance-optimized layer implementations and the elimination of context length limits by replacing
positional embeddings with Attention with Linear Biases (ALiBi).
Thanks to these modifications, MPT models can be trained with high throughput efficiency and stable convergence.
MPT models can also be served efficiently with both standard HuggingFace pipelines and NVIDIA's FasterTransformer.; This model uses the MosaicML LLM codebase, which can be found in the llm-foundry repository. It was trained by MosaicML¡¯s NLP team on the MosaicML platform for LLM pretraining, finetuning, and inference.; MPT-7B is",Natural Language Processing
sdxl-vae-fp16-fix,,Diffusers,,mit,,29,,3227,1005.00444,,https://huggingface.co/madebyollin/sdxl-vae-fp16-fix,"SDXL-VAE-FP16-Fix is the SDXL VAE, but modified to run in fp16 precision without generating NaNs.; Just load this checkpoint via AutoencoderKL:; ; SDXL-VAE generates NaNs in fp16 because the internal activation values are too big:
; SDXL-VAE-FP16-Fix was created by finetuning the SDXL-VAE to:",
Llama-2-7b-hf,Text Generation,PyTorch; Safetensors; Transformers,English,,,13,,2439,41403.97542,,https://huggingface.co/NousResearch/Llama-2-7b-hf,"Llama 2 is a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. This is the repository for the 7B pretrained model, converted for the Hugging Face Transformers format. Links to other models can be found in the index at the bottom.; Note: Use of this model is governed by the Meta license. In order to download the model weights and tokenizer, please visit the website and accept our License before requesting access here.; Meta developed and publicly released the Llama 2 family of large language models (LLMs), a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. Our fine-tuned LLMs, called Llama-2-Chat, are optimized for dialogue use cases. Llama-2-Chat models outperform open-source chat models on most benchmarks we tested, and in our human evaluations for helpfulness and safety, are on par with some popular closed-source models like ChatGPT and PaLM.; Model Developers Meta; Variations Llama 2 comes in a range of parameter sizes ¡ª 7B, 13B, and 70B ¡ª as well as pretrained and fine-tuned variations.",Natural Language Processing
llama-2-7B-Guanaco-QLoRA-GGML,Text Classification,Transformers,English,other,,13,,30,61870.10427,,https://huggingface.co/TheBloke/llama-2-7B-Guanaco-QLoRA-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Mikael110's Llama2 7B Guanaco QLoRA.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; Many thanks to William Beauchamp from Chai for providing the hardware used to make and upload these files!",Natural Language Processing
Dolphin-Llama-13B-GGML,,Transformers,,other,,13,,0,119316.4947,,https://huggingface.co/TheBloke/Dolphin-Llama-13B-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; This repo contains GGML format model files for Eric Hartford's Dolphin Llama 13B.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; These are guaranteed to be compatible with any UIs, tools and libraries released since late May. They may be phased out soon, as they are largely superseded by the new k-quant methods.",
bert-base-chinese,Fill-Mask,PyTorch; TensorFlow; JAX; Safetensors; Transformers,Chinese,,https://arxiv.org/pdf/1810.04805.pdf,469,,3764329,1711.372971,50,https://huggingface.co/bert-base-chinese,"This model has been pre-trained for Chinese, training and random input masking has been applied independently to word pieces (as in the original BERT paper).; This model can be used for masked language modeling ; CONTENT WARNING: Readers should be aware this section contains content that is disturbing, offensive, and can propagate historical and current stereotypes.; Significant research has explored bias and fairness issues with language models (see, e.g., Sheng et al. (2021) and Bender et al. (2021)).; [More Information Needed]",Natural Language Processing
segmentation,Voice Activity Detection,PyTorch; pyannote.audio,,mit,https://arxiv.org/pdf/2104.04045.pdf,224,,1916302,0,,https://huggingface.co/pyannote/segmentation,"This repository is publicly accessible, but
			you have to accept the conditions to access its files and content.
		; The collected information will help acquire a better knowledge of pyannote.audio userbase and help its maintainers apply for grants to improve it further. If you are an academic researcher, please cite the relevant papers in your own publications using the model. If you work for a company, please consider contributing back to pyannote.audio development (e.g. through unrestricted gifts). We also provide scientific consulting services around speaker diarization and machine listening.; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		; Paper | Demo | Blog post; ",Audio
paraphrase-multilingual-MiniLM-L12-v2,Sentence Similarity,PyTorch; TensorFlow; Sentence Transformers; Transformers,multilingual,apache-2.0,https://arxiv.org/pdf/1908.10084.pdf,202,,6826723,970.9563104,34,https://huggingface.co/sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2,"This is a sentence-transformers model: It maps sentences & paragraphs to a 384 dimensional dense vector space and can be used for tasks like clustering or semantic search.; Using this model becomes easy when you have sentence-transformers installed:; Then you can use the model like this:; Without sentence-transformers, you can use the model like this: First, you pass your input through the transformer model, then you have to apply the right pooling-operation on-top of the contextualized word embeddings.; For an automated evaluation of this model, see the Sentence Embeddings Benchmark: https://seb.sbert.net",Natural Language Processing
text2vec-base-chinese,Sentence Similarity,PyTorch; Transformers,Chinese,apache-2.0,,336,shibing624/nli_zh,1259456,409.1204564,22,https://huggingface.co/shibing624/text2vec-base-chinese,"This is a CoSENT(Cosine Sentence) model: shibing624/text2vec-base-chinese.; It maps sentences to a 768 dimensional dense vector space and can be used for tasks 
like sentence embeddings, text matching or semantic search.; For an automated evaluation of this model, see the Evaluation Benchmark: text2vec; ËµÃ÷£º; Using this model becomes easy when you have text2vec installed:",Natural Language Processing
replit-code-v1-3b,Text Generation,PyTorch; Transformers,code,cc-by-sa-4.0,https://arxiv.org/pdf/2211.15533.pdf; https://arxiv.org/pdf/2205.14135.pdf; https://arxiv.org/pdf/2108.12409.pdf; https://arxiv.org/pdf/2302.06675.pdf,618,bigcode/the-stack-dedup,36518,10650.40041,8,https://huggingface.co/replit/replit-code-v1-3b,"Developed by: Replit, Inc.; ??? Test it on our Demo Space! ???; ?? Fine-tuning and Instruct-tuning guides ??; replit-code-v1-3b is a 2.7B Causal Language Model focused on Code Completion. The model has been trained on a subset of the Stack Dedup v1.2 dataset.; The training mixture includes 20 different languages, listed here in descending order of number of tokens: 

Markdown, Java, JavaScript, Python, TypeScript, PHP, SQL, JSX, reStructuredText, Rust, C, CSS, Go, C++, HTML, Vue, Ruby, Jupyter Notebook, R, Shell

In total, the training dataset contains 175B tokens, which were repeated over 3 epochs -- in total, replit-code-v1-3b has been trained on 525B tokens (~195 tokens per parameter).",Natural Language Processing
Wizard-Vicuna-13B-Uncensored-HF,Text Generation,PyTorch; Transformers,English,other,,176,ehartford/wizard_vicuna_70k_unfiltered,75358,26657.08779,16,https://huggingface.co/TheBloke/Wizard-Vicuna-13B-Uncensored-HF,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; This is a float16 HF repo for Eric Hartford's 'uncensored' training of Wizard-Vicuna 13B.; It is the result of converting Eric's float32 repo to float16 for easier storage and use.; For further support, and discussions on these models and AI in general, join us at:",Natural Language Processing
h2ogpt-gm-oasst1-en-2048-falcon-7b-v3,Text Generation,PyTorch; Transformers,English,apache-2.0,,39,OpenAssistant/oasst1,276107,14779.13017,25,https://huggingface.co/h2oai/h2ogpt-gm-oasst1-en-2048-falcon-7b-v3,"This model was trained using H2O LLM Studio.; To use the model with the transformers library on a machine with GPUs, first make sure you have the transformers, accelerate, torch and einops libraries installed.; You can print a sample prompt after the preprocessing step to see how it is feed to the tokenizer:; Alternatively, you can download h2oai_pipeline.py, store it alongside your notebook, and construct the pipeline yourself from the loaded model and tokenizer:; You may also construct the pipeline from the loaded model and tokenizer yourself and consider the preprocessing steps:",Natural Language Processing
longchat-13b-16k,Text Generation,PyTorch; Transformers,,,,111,,7042,26655.24589,,https://huggingface.co/lmsys/longchat-13b-16k,"Please use load_model from FastChat or LongChat repo to load the model (or chatting API from FastChat). There is a monkey patch needed to use the model.
Usage referece:; (LongChat) python3 eval.py --model-name-or-path  lmsys/longchat-13b-16k --task topics ; (FastChat) python3 -m fastchat.serve.cli --model-path lmsys/longchat-13b-16k; Under the hood, the monkey patch is added in:; https://github.com/lm-sys/FastChat/blob/da0641e567cf93756b0978ab5a6b092e96f06240/fastchat/model/model_adapter.py#L429",Natural Language Processing
YumekawaMix,Text-to-Image,,Japanese,creativeml-openrail-m,,12,,0,5058.571543,,https://huggingface.co/RSTR/YumekawaMix,YumekawaMix; Äêýh¡¢µÈÉí¤¬µÍ¤á¤Ç¥Õ¥é¥Ã¥È¤Ê¥Æ¥¤¥¹¥È¤¬ÌØÕ¤Ç¤¹¡£kawaii¥¤¥é¥¹¥È¤ò¤ªÇó¤á¤Î·½¤Ø; Äêýh¡¢µÈÉí¤¬Èô¸É¸ß¤¯¤Ê¤ê¤Þ¤¹¡£°²¶¨¸Ð¤ÏÎ¢Ãî¤Ç¤¹¤¬Ñ}ëj¤Êí¤¬³ö¤ä¤¹¤¤Ó¡Ïó¤Ç¤¹; ×÷Õß¤Ë×î´ó¼¤Î¸ÐÖx¤ò???; Twitter: @AiRSTR7,Multimodel
everyjourney-SDXL-finetuned-Fp16,Text-to-Image,,English,other,,31,,0,7106.564902,,https://huggingface.co/thehive/everyjourney-SDXL-finetuned-Fp16,"Please for anyone, don't reupload my finetuned models to other site, like Civitai or image generating site like Seeart, Yodayo other sites. Thank you for understanding this. ; Like my works and want to collaboration or funding my projects? contact me.; Finetuned on SDXL Base 0.9 Official Release, Expected to be successor of Everyjourney, currently in alpha stage, since i'm captioned this model with BLIP2, the image generated with this model may not meet your expectations, waiting for SDXL finetune/training process to be more polished.  ; My other works:   ; Recommended Settings ",Multimodel
lora,,,Japanese,mit,,21,,0,825.9024316,,https://huggingface.co/JujoHotaru/lora,Ê®ÌõÍw£¨Jujo Hotaru£©¤Î×÷³É¤·¤¿LoRA¤òÅä²¼¤·¤Æ¤¤¤Þ¤¹¡£You can download JujoHotaru's LoRA collection from this repo.; (£¾£¼)£¯(£­£­)¤ÎÄ¿ / (¡Ô_¡Ô)£¯(¡ò_¡ò)¤ÎÄ¿ / ü\Ä¿¥»¥Ã¥ÈA / °×Ä¿¥»¥Ã¥ÈA / ¥¸¥ÈÄ¿¥»¥Ã¥ÈA / ¥¸¥ÈÄ¿¥»¥Ã¥ÈB / ¤°¤Ë¤ã¤°¤Ë¤ã¿Ú / ´ó¤­¤¯é_¤¤¤¿¿Ú / ¼¯ÖÐ¾ / ¤Ü¤«¤·£¦±³¾°¤Ü¤«¤· / ¥È©`¥ó¥«©`¥ÖÕ{Õû / ²Ê¶ÈÕ{Õû / ¥¦¥£¥ó¥¯ÑaÖú / ¼¤¤ª¤³î / ¤Ë¤Ã¤³¤êÐ¦î / Ë¼°¸î / Èã¤Ç¥À¥³î / ÇàÐÑ¤áî; gòYLoRAÖÃ¤­ö; Ô¤·¤¯Ò¤ë£¯¥À¥¦¥ó¥í©`¥É (Details/Download); ,
llama-30b-instruct,Text Generation,PyTorch; Transformers,English,,,12,sciq; metaeval/ScienceQA_text_only; GAIR/lima; Open-Orca/OpenOrca; openbookqa,115,66634.06464,1,https://huggingface.co/upstage/llama-30b-instruct,No other data was used except for the dataset mentioned above,Natural Language Processing
MythoLogic-13B-GPTQ,Text Generation,Transformers,English,other,,12,,22,7629.30279,,https://huggingface.co/TheBloke/MythoLogic-13B-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for Gryphe's MythoLogic 13B.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; These files were quantised using hardware kindly provided by Latitude.sh.",Natural Language Processing
japanese-mpt-7b,Text Generation,PyTorch; Transformers,,apache-2.0,,12,,258,13621.45306,,https://huggingface.co/lightblue/japanese-mpt-7b,"Japanese subset of the mC4 dataset; Trained for 3000 steps on top of the MPT 7b checkpoint mosaicml/mpt-7b; Before running this model, please install the following pip package:; To load the model, run the following command.; To run this model, you may need to load it in a lower precision in order for it to fit onto your GPU. We found for a T4 GPU, it requires loading the model in 8-bit precision. To load the model in 8-bit and 4-bit, please install the following pip packages:",Natural Language Processing
sazyou_LoRA,Text-to-Image,,Japanese,creativeml-openrail-m,,12,,0,26.36419922,,https://huggingface.co/sazyou-roukaku/sazyou_LoRA,"LECO¤äLoRA¤ÎÔ×÷Æ·ÖÃ¤­ö¡£

¢ÙÐØ²¿p¥¹¥é¥¤¥À©`LoRA(huge_breasts_woman/flat_chest_woman) 
LECO¤Ç×÷³É¤·¡¢Õ{Õû¤·¤¿ÐØ²¿p¥¹¥é¥¤¥À©`:¥È¥ê¥¬©`¥ï©`¥É woman
breastsÏµ¥×¥í¥ó¥×¥È¤Ï²»Òª¡£
ÍÆÕ?¥µ¥ó¥×¥ë¤ÏLittleStepMix_A¤Ç×÷³É¡£



¢Ú¥Þ¥ë¥Á¥«¥é©`¥É¥Ø¥¢©`LoRA(pastel_hair_full/pastel_hair_A/pastel_hair_B) 
LECO¤Ç×÷³É¤·¡¢Õ{Õû¤·¤¿¶à²ÊÉ«¤Îó¤Ë¤¹¤ëLoRA:¥È¥ê¥¬©`¥ï©`¥É hair
éL¤µÖ¸¶¨¤À¤±¤À¤È¤«¤Ê¤ê¥«¥é¥Õ¥ë¤Ë¤Ê¤ê¤Þ¤¹¡£¥á¥¤¥ó¤ÎÉ«¤òÈë¤ì¤Æ¤âÁ¼¤·¡¢·þ×°¤Ø¤ÎAÈ¾¤â×îµÍÏÞ¤Ç¤¹¡£
¤Ê¤ªnegative¤Ë (black hair,brown hair:1.5) ¤òÈëÁ¦ÍÆX
LittleStepMix_A¤Ç×÷³É¤·¡¢¤½¤ì¤ò¥µ¥ó¥×¥ë¤È¤·¤Æ¤¤¤ë¤Î¤Ç³ö·½¤Ï¥â¥Ç¥ë¤Ç¤«¤Ê¤ê®¤Ê¤ê¤Þ¤¹¡£
full¤ÏÈ«¤Æ¤ÎÉ«¤¬³ö¤Æ¡¢¥Ñ¥¹¥Æ¥ëÕ{¤¬¤á¤Ç¤¹¡£A¤Ï°×Ïµ¤¬³ö¤º¡¢¾vÈõ¤á¡£B¤Ïfull¤è¤ê¥á¥ê¥Ï¥ê¤¬¤¢¤ë³öÁ¦¤Ë¤Ê¤ê¤Þ¤¹¡£
; Unable to determine this model¡¯s library. Check the
								docs 
.
							",Multimodel
Llama-2-7B-fp16,Text Generation,PyTorch; Transformers,,,,12,,1531,13805.88925,,https://huggingface.co/TheBloke/Llama-2-7B-fp16,No model card; New: Create and edit this model card directly on the website!,Natural Language Processing
Redmond-Puffin-13B-Preview-GGML,,,eng,mit,,12,,0,7741.444492,,https://huggingface.co/NousResearch/Redmond-Puffin-13B-Preview-GGML,"GGML 4bit Quantization of Nous Research's Puffin Preview 1 Model: https://huggingface.co/NousResearch/Redmond-Puffin-13B; Thank you to Eachadea for making this quantization possible immediately upon launch; ; The first commercially available language model released by Nous Research!; Redmond-Puffin-13B is one of the worlds first llama-2 based, fine-tuned language models, leveraging a hand curated set of 3K high quality examples, many of which take full advantage of the 4096 context length of Llama 2. This model was fine-tuned by Nous Research, with LDJ leading the training and dataset curation, along with significant dataset formation contributions by J-Supha.",
Redmond-Puffin-13B-GGML,,,eng,mit,,12,,0,34877.45017,,https://huggingface.co/NousResearch/Redmond-Puffin-13B-GGML,"GGML 4bit Quantization of Nous Research's Puffin V1.3 Model: https://huggingface.co/NousResearch/Redmond-Puffin-13B-V1.3; Thank you to Eachadea for making this quantization possible immediately upon launch; For other faster or more accurate quantization methods, please check out Eachadea's hugging face page!; ; The first commercially available language model released by Nous Research!",
llama-2-13B-Guanaco-QLoRA-GPTQ,Text Classification,Transformers,English,other,,12,,141,7436.594359,,https://huggingface.co/TheBloke/llama-2-13B-Guanaco-QLoRA-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for Mikael110's Llama2 13B Guanaco QLoRA.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; Many thanks to William Beauchamp from Chai for providing the hardware used to make and upload these files!",Natural Language Processing
Llama2-chat-Chinese-50W,Text Generation,PyTorch; Transformers,Chinese; English,,,12,,28,14101.26153,,https://huggingface.co/RicardoLee/Llama2-chat-Chinese-50W,"ÓÉÓÚÄ¿Ç°µÄLLama2-chatÄ£ÐÍºÜÄÑÔ¼ÊøÆäÒÔÖÐÎÄ½øÐÐÎÊÌâ»Ø¸´£¬Òò´Ë¸ÃÄ£ÐÍÖ¼ÔÚÌá¹©Ò»¸öÄÜÒÔÖÐÎÄ½øÐÐÎÊ´ðµÄLLama2-chat 7B Ä£ÐÍ¡£; ¸ÃÄ£ÐÍÊ¹ÓÃLLama2-chat 7B ×÷Îª»ùµ×Ä£ÐÍ£¬Ê¹ÓÃ´øembedding ºÍ LM head µÄLoraÑµÁ··½Ê½ÑµÁ·¡£Ä£ÐÍÒÑÍê³É²ÎÊýºÏ²¢£¬¿ÉÖ±½ÓÊ¹ÓÃ¡£Ò²¿ÉÒÔÊÖ¶¯½«sft_lora_modelÍ¬Llama2-chat½øÐÐºÏ²¢¡£; ÑµÁ·Êý¾ÝÊ¹ÓÃBELLEÏîÄ¿ÖÐ²ÉÑùµÄ50ÍòSFTÊý¾Ý½øÐÐSFTÑµÁ·¡£; Since the LLama2-chat model struggles to confine its responses to Chinese language when prompted with Chinese questions, the primary objective of this model is to provide a LLama2-chat 7B model that can engage in question and answer interactions in Chinese.; The model utilizes LLama2-chat 7B as its base model and is trained using the Lora training approach with the embedding and LM head. The model has undergone the Lora param merge and is now ready for direct use. It is also possible to manually merge the ./sft_lora_model with the Llama2-chat 7B model to obtain the combined model. ",Natural Language Processing
bert-base-uncased,Fill-Mask,PyTorch; TensorFlow; JAX; Rust; Core ML; ONNX; Safetensors; Transformers,English,apache-2.0,https://arxiv.org/pdf/1810.04805.pdf,979,bookcorpus; wikipedia,38075908,2920.704066,558,https://huggingface.co/bert-base-uncased,"Pretrained model on English language using a masked language modeling (MLM) objective. It was introduced in
this paper and first released in
this repository. This model is uncased: it does not make a difference
between english and English.; Disclaimer: The team releasing BERT did not write a model card for this model so this model card has been written by
the Hugging Face team.; BERT is a transformers model pretrained on a large corpus of English data in a self-supervised fashion. This means it
was pretrained on the raw texts only, with no humans labeling them in any way (which is why it can use lots of
publicly available data) with an automatic process to generate inputs and labels from those texts. More precisely, it
was pretrained with two objectives:; This way, the model learns an inner representation of the English language that can then be used to extract features
useful for downstream tasks: if you have a dataset of labeled sentences, for instance, you can train a standard
classifier using the features produced by the BERT model as inputs.; BERT has originally been released in base and large variations, for cased and uncased input text. The uncased models also strips out an accent markers.Chinese and multilingual uncased and cased versions followed shortly after.Modified preprocessing with whole word masking has replaced subpiece masking in a following work, with the release of two models.Other 24 smaller models are released afterward.  ",Natural Language Processing
mDeBERTa-v3-base-mnli-xnli,Zero-Shot Classification,PyTorch; Safetensors; Transformers,16 languages,mit,https://arxiv.org/pdf/2111.09543.pdf; https://arxiv.org/pdf/1809.05053.pdf; https://arxiv.org/pdf/1911.02116.pdf,144,multi_nli; xnli,42184,1120.319211,5,https://huggingface.co/MoritzLaurer/mDeBERTa-v3-base-mnli-xnli,"This multilingual model can perform natural language inference (NLI) on 100 languages and is therefore also suitable for multilingual 
zero-shot classification. The underlying model was pre-trained by Microsoft on the 
CC100 multilingual dataset. It was then fine-tuned on the XNLI dataset, which contains hypothesis-premise pairs from 15 languages, as well as the English MNLI dataset.
As of December 2021, mDeBERTa-base is the best performing multilingual base-sized transformer model, 
introduced by Microsoft in this paper. ; If you are looking for a smaller, faster (but less performant) model, you can 
try multilingual-MiniLMv2-L6-mnli-xnli.; This model was trained on the XNLI development dataset and the MNLI train dataset. The XNLI development set consists of 2490 professionally translated texts from English to 14 other languages (37350 texts in total) (see this paper). Note that the XNLI contains a training set of 15 machine translated versions of the MNLI dataset for 15 languages, but due to quality issues with these machine translations, this model was only trained on the professional translations from the XNLI development set and the original English MNLI training set (392 702 texts). Not using machine translated texts can avoid overfitting the model to the 15 languages; avoids catastrophic forgetting of the other 85 languages mDeBERTa was pre-trained on; and significantly reduces training costs. ; mDeBERTa-v3-base-mnli-xnli was trained using the Hugging Face trainer with the following hyperparameters.; The model was evaluated on the XNLI test set on 15 languages (5010 texts per language, 75150 in total). Note that multilingual NLI models are capable of classifying NLI texts without receiving NLI training data in the specific language (cross-lingual transfer). This means that the model is also able of doing NLI on the other 85 languages mDeBERTa was training on, but performance is most likely lower than for those languages available in XNLI.",Natural Language Processing
clip-vit-large-patch14,Zero-Shot Image Classification,PyTorch; TensorFlow; JAX; Transformers,,,https://arxiv.org/pdf/2103.00020.pdf; https://arxiv.org/pdf/1908.04913.pdf,514,,12172658,5256.806037,373,https://huggingface.co/openai/clip-vit-large-patch14,"Disclaimer: The model card is taken and modified from the official CLIP repository, it can be found here.; The CLIP model was developed by researchers at OpenAI to learn about what contributes to robustness in computer vision tasks. The model was also developed to test the ability of models to generalize to arbitrary image classification tasks in a zero-shot manner. It was not developed for general model deployment - to deploy models like CLIP, researchers will first need to carefully study their capabilities in relation to the specific context they¡¯re being deployed within.; January 2021; The base model uses a ViT-L/14 Transformer architecture as an image encoder and uses a masked self-attention Transformer as a text encoder. These encoders are trained to maximize the similarity of (image, text) pairs via a contrastive loss.; The original implementation had two variants: one using a ResNet image encoder and the other using a Vision Transformer. This repository has the variant with the Vision Transformer.",Computer Vision
iroiro-lora,,,,,,325,,0,3.281448174,,https://huggingface.co/2vXpSwA7/iroiro-lora,"?; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
vcclient000,,,,,,72,,0,29229.56145,,https://huggingface.co/wok000/vcclient000,"No model card; New: Create and edit this model card directly on the website!; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
30B-Lazarus,Text Generation,PyTorch; Transformers,,,,105,,3480,66632.2225,12,https://huggingface.co/CalderaAI/30B-Lazarus,"[] = applied as LoRA to a composite model | () = combined as composite models; [SuperCOT([gtp4xalpaca(manticorechatpygalpha+vicunaunlocked)]+[StoryV2(kaiokendev-SuperHOT-LoRA-prototype30b-8192)])]; This model is the result of an experimental use of LoRAs on language models and model merges that are not the base HuggingFace-format LLaMA model they were intended for.
The desired outcome is to additively apply desired features without paradoxically watering down a model's effective behavior.; Potential limitations - LoRAs applied on top of each other may intercompete.; Subjective results - very promising. Further experimental tests and objective tests are required.",Natural Language Processing
open_llama_13b,Text Generation,PyTorch; Transformers,,apache-2.0,,420,togethercomputer/RedPajama-Data-1T,32264,26655.28739,12,https://huggingface.co/openlm-research/open_llama_13b,"In this repo, we present a permissively licensed open source reproduction of Meta AI's LLaMA large language model. We are releasing 3B, 7B and 13B models trained on 1T tokens. We provide PyTorch and JAX weights of pre-trained OpenLLaMA models, as well as evaluation results and comparison against the original LLaMA models. Please see the project homepage of OpenLLaMA for more details.; We release the weights in two formats: an EasyLM format to be use with our EasyLM framework, and a PyTorch format to be used with the Hugging Face transformers library. Both our training framework EasyLM and the checkpoint weights are licensed permissively under the Apache 2.0 license.; Preview checkpoints can be directly loaded from Hugging Face Hub. Please note that it is advised to avoid using the Hugging Face fast tokenizer for now, as we¡¯ve observed that the auto-converted fast tokenizer sometimes gives incorrect tokenizations. This can be achieved by directly using the LlamaTokenizer class, or passing in the use_fast=False option for the AutoTokenizer class. See the following example for usage.; For more advanced usage, please follow the transformers LLaMA documentation.; The model can be evaluated with lm-eval-harness. However, due to the aforementioned tokenizer issue, we need to avoid using the fast tokenizer to obtain the correct results. This can be achieved by passing in use_fast=False to this part of lm-eval-harness, as shown in the example below:",Natural Language Processing
sdxl-vae,,Diffusers,,mit,https://arxiv.org/pdf/2112.10752.pdf,72,,302854,1005.005158,2,https://huggingface.co/stabilityai/sdxl-vae,"You can integrate this fine-tuned VAE decoder to your existing diffusers workflows, by including a vae argument to the StableDiffusionPipeline; SDXL is a latent diffusion model, where the diffusion operates in a pretrained, 
learned (and fixed) latent space of an autoencoder. 
While the bulk of the semantic composition is done by the latent diffusion model, 
we can improve local, high-frequency details in generated images by improving the quality of the autoencoder. 
To this end, we train the same autoencoder architecture used for the original Stable Diffusion at a larger batch-size (256 vs 9) 
and additionally track the weights with an exponential moving average (EMA). 
The resulting autoencoder outperforms the original model in all evaluated reconstruction metrics, see the table below.; SDXL-VAE vs original kl-f8 VAE vs f8-ft-MSE; Inference API has been turned off for this model.",
Realistic_Vision_V4.0,,,,creativeml-openrail-m,,52,,0,26549.40322,,https://huggingface.co/SG161222/Realistic_Vision_V4.0,"The recommended negative prompt:; (deformed iris, deformed pupils, semi-realistic, cgi, 3d, render, sketch, cartoon, drawing, anime:1.4), text, close up, cropped, out of frame, worst quality, low quality, jpeg artifacts, ugly, duplicate, morbid, mutilated, extra fingers, mutated hands, poorly drawn hands, poorly drawn face, mutation, deformed, blurry, dehydrated, bad anatomy, bad proportions, extra limbs, cloned face, disfigured, gross proportions, malformed limbs, missing arms, missing legs, extra arms, extra legs, fused fingers, too many fingers, long neck; OR; (deformed iris, deformed pupils, semi-realistic, cgi, 3d, render, sketch, cartoon, drawing, anime, mutated hands and fingers:1.4), (deformed, distorted, disfigured:1.3), poorly drawn, bad anatomy, wrong anatomy, extra limb, missing limb, floating limbs, disconnected limbs, mutation, mutated, ugly, disgusting, amputation; Recommended parameters for generation:",
rwkv-4-music,,,,apache-2.0,,18,,0,1396.12167,,https://huggingface.co/BlinkDL/rwkv-4-music,"Use https://github.com/BlinkDL/ChatRWKV/tree/main/music to run current v1 MIDI model; Training data: https://huggingface.co/datasets/breadlicker45/bread-midi-dataset; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
WizardCoder-Guanaco-15B-V1.1-GGML,,,English,apache-2.0,,13,guanaco,0,71782.41408,1,https://huggingface.co/TheBloke/WizardCoder-Guanaco-15B-V1.1-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are StarCoder GGML format model files for LoupGarou's WizardCoder-Guanaco-15B-V1.1.; Please note that these GGMLs are not compatible with llama.cpp, text-generation-webui or llama-cpp-python. Please see below for a list of tools that work with this GGML model.; These files were quantised using hardware kindly provided by Latitude.sh.",
llama-2-7B-Guanaco-QLoRA-GPTQ,Text Classification,Transformers,English,other,,11,,921,3995.954112,,https://huggingface.co/TheBloke/llama-2-7B-Guanaco-QLoRA-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for Mikael110's Llama2 7B Guanaco QLoRA.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; Many thanks to William Beauchamp from Chai for providing the hardware used to make and upload these files!",Natural Language Processing
LLongMA-2-7B-GPTQ,Text Generation,Transformers,,other,https://arxiv.org/pdf/2108.12409.pdf; https://arxiv.org/pdf/2212.10554.pdf,11,,100,3994.176124,,https://huggingface.co/TheBloke/LLongMA-2-7B-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for ConceptofMind's LLongMA 2 7B.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; Multiple quantisation parameters are provided, to allow you to choose the best one for your hardware and requirements.",Natural Language Processing
LL7M,Text Generation,PyTorch; Transformers,4 languages,cc-by-nc-nd-4.0,,11,,0,13927.0757,,https://huggingface.co/JosephusCheung/LL7M,"This is a Llama-like generative text model with a scale of 7 billion, optimized for dialogue use cases and converted for the Hugging Face Transformers format. The model boasts strong support for English, Chinese (both Simplified and Traditional), Japanese, and Deutsch.; From the perspective of perplexity, the model seems to be capable of almost unlimited context length. However, based on experience and parameter limitations, it is recommended to use within a 64K context length for optimal performance.; ; The anticipated chat input format is as follows:; Although this is the suggested usage format, Vicuna-style inputs can also be used to adapt to certain pre-existing application scenarios, such as:",Natural Language Processing
stable-diffusion-inpainting,Text-to-Image,Diffusers,,creativeml-openrail-m,https://arxiv.org/pdf/2207.12598.pdf; https://arxiv.org/pdf/2112.10752.pdf; https://arxiv.org/pdf/2103.00020.pdf; https://arxiv.org/pdf/2205.11487.pdf; https://arxiv.org/pdf/1910.09700.pdf,1240,,193916,4372.498375,376,https://huggingface.co/runwayml/stable-diffusion-inpainting,"Stable Diffusion Inpainting is a latent text-to-image diffusion model capable of generating photo-realistic images given any text input, with the extra capability of inpainting the pictures by using a mask.; The Stable-Diffusion-Inpainting was initialized with the weights of the Stable-Diffusion-v-1-2. First 595k steps regular training, then 440k steps of inpainting training at resolution 512x512 on ¡°laion-aesthetics v2 5+¡± and 10% dropping of the text-conditioning to improve classifier-free classifier-free guidance sampling. For inpainting, the UNet has 5 additional input channels (4 for the encoded masked-image and 1 for the mask itself) whose weights were zero-initialized after restoring the non-inpainting checkpoint. During training, we generate synthetic masks and in 25% mask everything.; You can use this both with the ?Diffusers library and the RunwayML GitHub repository.; How it works:; Developed by: Robin Rombach, Patrick Esser",Multimodel
esrgan,,,,,,23,,0,3026.561445,,https://huggingface.co/utnah/esrgan,"No model card; New: Create and edit this model card directly on the website!; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
text-to-video-ms-1.7b,Text-to-Video,Diffusers,,cc-by-nc-4.0,,266,,35026,0.008237305,139,https://huggingface.co/damo-vilab/text-to-video-ms-1.7b,"This model is based on a multi-stage text-to-video generation diffusion model, which inputs a description text and returns a video that matches the text description. Only English input is supported.; We Are Hiring! (Based in Beijing / Hangzhou, China.); If you're looking for an exciting challenge and the opportunity to work with cutting-edge technologies in AIGC and large-scale pretraining, then we are the place for you. We are looking for talented, motivated and creative individuals to join our team. If you are interested, please send your CV to us.; EMAIL: yingya.zyy@alibaba-inc.com; The text-to-video generation diffusion model consists of three sub-networks: text feature extraction model, text feature-to-video latent space diffusion model, and video latent space to video visual space model. The overall model parameters are about 1.7 billion. Currently, it only supports English input. The diffusion model adopts a UNet3D structure, and implements video generation through the iterative denoising process from the pure Gaussian noise video.",Multimodel
gpt4-x-alpaca-13b-native-4bit-128g,Text Generation,PyTorch; Transformers,,,,673,,2186,16405.10768,52,https://huggingface.co/anon8231489123/gpt4-x-alpaca-13b-native-4bit-128g,"Update (4/1): Added ggml for Cuda model; Dataset is here (instruct): https://github.com/teknium1/GPTeacher; Okay... Two different models now. One generated in the Triton branch, one generated in Cuda. Use the Cuda one for now unless the Triton branch becomes widely used.; Cuda info (use this one):
Command: ; CUDA_VISIBLE_DEVICES=0 python llama.py ./models/chavinlo-gpt4-x-alpaca --wbits 4 --true-sequential --groupsize 128 --save gpt-x-alpaca-13b-native-4bit-128g-cuda.pt",Natural Language Processing
anything-v5,Text-to-Image,Diffusers,,creativeml-openrail-m,,52,,34369,0.004370079,44,https://huggingface.co/stablediffusionapi/anything-v5,"; Get API key from Stable Diffusion API, No Payment needed. ; Replace Key in below code, change model_id  to ""anything-v5""; Coding in PHP/Node/Java etc? Have a look at docs for more code examples: View docs; Model link: View model",Multimodel
adetailer,,PyTorch,,agpl-3.0,,141,wider_face; skytnt/anime-segmentation,0,224.8046582,2,https://huggingface.co/Bingsu/adetailer,"; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
control_v1p_sd15_brightness,Image-to-Image,Diffusers,English,creativeml-openrail-m,,20,ioclab/grayscale_image_aesthetic_3M,199,1484.805918,,https://huggingface.co/ViscoseBean/control_v1p_sd15_brightness,"This model brings brightness control to Stable Diffusion, allowing users to colorize grayscale images or recolor generated images.; huggingface.co/spaces/ioclab/brightness-controlnet; [More Information Needed]; [More Information Needed]; [More Information Needed]",Computer Vision
RVCModels,,,,unknown,,28,,0,4770.201484,,https://huggingface.co/juuxn/RVCModels,"Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
multilingual-e5-large,Feature Extraction,PyTorch; ONNX; Safetensors; Transformers,94 languages,mit,https://arxiv.org/pdf/2212.03533.pdf; https://arxiv.org/pdf/2108.08787.pdf; https://arxiv.org/pdf/2104.08663.pdf; https://arxiv.org/pdf/2210.07316.pdf,38,,20375,4609.849589,3,https://huggingface.co/intfloat/multilingual-e5-large,"Text Embeddings by Weakly-Supervised Contrastive Pre-training.
Liang Wang, Nan Yang, Xiaolong Huang, Binxing Jiao, Linjun Yang, Daxin Jiang, Rangan Majumder, Furu Wei, arXiv 2022; This model has 24 layers and the embedding size is 1024.; Below is an example to encode queries and passages from the MS-MARCO passage ranking dataset.; This model is initialized from xlm-roberta-large
and continually trained on a mixture of multilingual datasets.
It supports 100 languages from xlm-roberta,
but low-resource languages may see performance degradation.; Initialization: xlm-roberta-large",Multimodel
mpt-7b-8k,Text Generation,PyTorch; Transformers,,apache-2.0,https://arxiv.org/pdf/2108.12409.pdf; https://arxiv.org/pdf/2302.13971.pdf; https://arxiv.org/pdf/2205.14135.pdf; https://arxiv.org/pdf/2010.04245.pdf; https://arxiv.org/pdf/1909.08053.pdf; https://arxiv.org/pdf/2302.06675.pdf,10,mc4; c4; togethercomputer/RedPajama-Data-1T; bigcode/the-stack; allenai/s2orc,1001,13621.46423,,https://huggingface.co/mosaicml/mpt-7b-8k,"MPT-7B-8k is a decoder-style transformer pretrained starting from MPT-7B, but updating the sequence length to 8k and training for an additional 500B tokens, resulting in a total of 1.5T tokens of text and code.
This model was trained by MosaicML.; MPT-7B-8k is part of the family of Mosaic Pretrained Transformer (MPT) models, which use a modified transformer architecture optimized for efficient training and inference.; These architectural changes include performance-optimized layer implementations and the elimination of context length limits by replacing
positional embeddings with Attention with Linear Biases (ALiBi).
Thanks to these modifications, MPT models can be trained with high throughput efficiency and stable convergence.
MPT models can also be served efficiently with both standard HuggingFace pipelines and NVIDIA's FasterTransformer.; This model uses the MosaicML LLM codebase, which can be found in the llm-foundry repository. It was trained by MosaicML¡¯s NLP team on the MosaicML platform for LLM pretraining, finetuning, and inference.; MPT-7B-8k is",Natural Language Processing
MythoLogic-13B-GGML,,,English,other,,10,,0,119316.4932,,https://huggingface.co/TheBloke/MythoLogic-13B-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Gryphe's MythoLogic 13B.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; These files were quantised using hardware kindly provided by Latitude.sh.",
Llama-2-ft-instruct-es,Text Generation,PyTorch; Transformers,Spanish,apache-2.0,,10,,25,13805.39216,,https://huggingface.co/clibrain/Llama-2-ft-instruct-es,Llama 2 (7B) fine-tuned on Clibrain's  Spanish instructions dataset.; Llama 2 is a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. This is the repository for the 7B pretrained model. Links to other models can be found in the index at the bottom.; Inference API has been turned off for this model.,Natural Language Processing
jina-embedding-t-en-v1,Sentence Similarity,PyTorch; Sentence Transformers,English,apache-2.0,,10,jinaai/negation-dataset,0,29.62880394,,https://huggingface.co/jinaai/jina-embedding-t-en-v1,"; 

; 
The text embedding set trained by Jina AI, Finetuner team.
; jina-embedding-t-en-v1 is a tiny small language model that has been trained using Jina AI's Linnaeus-Clean dataset.
This dataset consists of 380 million pairs of sentences, which include both query-document pairs.
These pairs were obtained from various domains and were carefully selected through a thorough cleaning process.
The Linnaeus-Full dataset, from which the Linnaeus-Clean dataset is derived, originally contained 1.6 billion sentence pairs.; The model has a range of use cases, including information retrieval, semantic textual similarity, text reranking, and more.",Natural Language Processing
AlpacaCielo-13b,,,,llama2,,10,,0,8253.721074,,https://huggingface.co/totally-not-an-llm/AlpacaCielo-13b,"Disclaimer: The model might have a tokenizer issue, but functions.  Updates to come.; AlpacaCielo-13b is a llama-2 based model designed for creative tasks, such as storytelling and roleplay, while still doing well with other chatbot purposes.  It is a triple model merge of Nous-Hermes + Guanaco + Storywriter. While it is mostly ""uncensored"", it still inherits some alignment from Guanaco.; Prompt format is:; Thanks to previous similar models such as Alpacino, Alpasta, and AlpacaDente for inspiring the creation of this model.  Thanks also to the creators of the models involved in the merge.  Original models:; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
roberta-base,Fill-Mask,PyTorch; TensorFlow; JAX; Rust; Safetensors; Transformers,English,mit,https://arxiv.org/pdf/1907.11692.pdf; https://arxiv.org/pdf/1806.02847.pdf,191,bookcorpus; wikipedia,9988668,2815.28186,165,https://huggingface.co/roberta-base,"Pretrained model on English language using a masked language modeling (MLM) objective. It was introduced in
this paper and first released in
this repository. This model is case-sensitive: it
makes a difference between english and English.; Disclaimer: The team releasing RoBERTa did not write a model card for this model so this model card has been written by
the Hugging Face team.; RoBERTa is a transformers model pretrained on a large corpus of English data in a self-supervised fashion. This means
it was pretrained on the raw texts only, with no humans labelling them in any way (which is why it can use lots of
publicly available data) with an automatic process to generate inputs and labels from those texts. ; More precisely, it was pretrained with the Masked language modeling (MLM) objective. Taking a sentence, the model
randomly masks 15% of the words in the input then run the entire masked sentence through the model and has to predict
the masked words. This is different from traditional recurrent neural networks (RNNs) that usually see the words one
after the other, or from autoregressive models like GPT which internally mask the future tokens. It allows the model to
learn a bidirectional representation of the sentence.; This way, the model learns an inner representation of the English language that can then be used to extract features
useful for downstream tasks: if you have a dataset of labeled sentences for instance, you can train a standard
classifier using the features produced by the BERT model as inputs.",Natural Language Processing
xlm-roberta-large,Fill-Mask,PyTorch; TensorFlow; JAX; ONNX; Safetensors; Transformers,94 languages,mit,https://arxiv.org/pdf/1911.02116.pdf,187,,8031461,9189.216183,17,https://huggingface.co/xlm-roberta-large,"XLM-RoBERTa model pre-trained on 2.5TB of filtered CommonCrawl data containing 100 languages. It was introduced in the paper Unsupervised Cross-lingual Representation Learning at Scale by Conneau et al. and first released in this repository. ; Disclaimer: The team releasing XLM-RoBERTa did not write a model card for this model so this model card has been written by the Hugging Face team.; XLM-RoBERTa is a multilingual version of RoBERTa. It is pre-trained on 2.5TB of filtered CommonCrawl data containing 100 languages. ; RoBERTa is a transformers model pretrained on a large corpus in a self-supervised fashion. This means it was pretrained on the raw texts only, with no humans labelling them in any way (which is why it can use lots of publicly available data) with an automatic process to generate inputs and labels from those texts.; More precisely, it was pretrained with the Masked language modeling (MLM) objective. Taking a sentence, the model randomly masks 15% of the words in the input then run the entire masked sentence through the model and has to predict the masked words. This is different from traditional recurrent neural networks (RNNs) that usually see the words one after the other, or from autoregressive models like GPT which internally mask the future tokens. It allows the model to learn a bidirectional representation of the sentence.",Natural Language Processing
DialoGPT-medium,Conversational,PyTorch; TensorFlow; JAX; Rust; Transformers,,mit,https://arxiv.org/pdf/1911.00536.pdf,209,,380342,5544.168943,141,https://huggingface.co/microsoft/DialoGPT-medium,"DialoGPT is a SOTA large-scale pretrained dialogue response generation model for multiturn conversations. 
The human evaluation results indicate that the response generated from DialoGPT is comparable to human response quality under a single-turn conversation Turing test.
The model is trained on 147M multi-turn dialogue from Reddit discussion thread. ; Please find the information about preprocessing, training and full details of the DialoGPT in the original DialoGPT repository; ArXiv paper: https://arxiv.org/abs/1911.00536; Now we are ready to try out how the model works as a chatting partner!",Natural Language Processing
vit-gpt2-image-captioning,Image-to-Text,PyTorch; Transformers,,apache-2.0,,483,,1254131,984.5934621,289,https://huggingface.co/nlpconnect/vit-gpt2-image-captioning,This is an image captioning model trained by @ydshieh in flax  this is pytorch version of this.; ,Multimodel
anime-kawai-diffusion,Text-to-Image,Diffusers; PyTorch,English,creativeml-openrail-m,,93,,22830,0.755424538,42,https://huggingface.co/Ojimi/anime-kawai-diffusion,"; ; As it is a version made only by myself and my small associates, the model will not be perfect and may differ from what people expect. Any contributions from everyone will be respected.; Want to support me? Thank you, please help me make it better. ??; This wouldn't have happened if they hadn't made a breakthrough.",Multimodel
Realistic_Vision_V1.4,Text-to-Image,Diffusers,,creativeml-openrail-m,,280,,490749,22016.00378,96,https://huggingface.co/SG161222/Realistic_Vision_V1.4,"Please read this!
My model has always been free and always will be free. There are no restrictions on the use of the model. The rights to this model still belong to me.; Important note: ""RAW photo"" in the prompt may degrade the result.; I use this template to get good generation results:; Prompt:
subject, (high detailed skin:1.2), 8k uhd, dslr, soft lighting, high quality, film grain, Fujifilm XT3; Example: a close up portrait photo of 26 y.o woman in wastelander clothes, long haircut, pale skin, slim body, background is city ruins, (high detailed skin:1.2), 8k uhd, dslr, soft lighting, high quality, film grain, Fujifilm XT3",Multimodel
faster-whisper-large-v2,Automatic Speech Recognition,,99 languages,mit,,67,,47905,3166.815371,,https://huggingface.co/guillaumekln/faster-whisper-large-v2,"This repository contains the conversion of openai/whisper-large-v2 to the CTranslate2 model format.; This model can be used in CTranslate2 or projects based on CTranslate2 such as faster-whisper.; The original model was converted with the following command:; Note that the model weights are saved in FP16. This type can be changed when the model is loaded using the compute_type option in CTranslate2.; For more information about the original model, see its model card.",Audio
vicuna-13b-GPTQ-4bit-128g,Text Generation,PyTorch; Transformers,,,,649,,1590,7629.324621,24,https://huggingface.co/anon8231489123/vicuna-13b-GPTQ-4bit-128g,"** Converted model for GPTQ from https://huggingface.co/lmsys/vicuna-13b-delta-v0. This is the best local model I've ever tried. I hope someone makes a version based on the uncensored dataset...**; GPTQ conversion command (on CUDA branch):
CUDA_VISIBLE_DEVICES=0 python llama.py ../lmsys/vicuna-13b-v0 c4 --wbits 4 --true-sequential --groupsize 128 --save vicuna-13b-4bit-128g.pt; Added 1 token to the tokenizer model:
python llama-tools/add_tokens.py lmsys/vicuna-13b-v0/tokenizer.model /content/tokenizer.model llama-tools/test_list.txt; Use of Oobabooga with these tags:
--wbits 4
--groupsize 128; Enjoy",Natural Language Processing
Ziya-LLaMA-13B-v1,Text Generation,PyTorch; Transformers,English; Chinese,gpl-3.0,https://arxiv.org/pdf/2210.08590.pdf,221,,731,26196.74212,5,https://huggingface.co/IDEA-CCNL/Ziya-LLaMA-13B-v1,"£¨LLaMAÈ¨ÖØµÄÐí¿ÉÖ¤ÏÞÖÆ£¬ÎÒÃÇÎÞ·¨Ö±½Ó·¢²¼ÍêÕûµÄÄ£ÐÍÈ¨ÖØ£¬ÓÃ»§ÐèÒª²Î¿¼Ê¹ÓÃËµÃ÷½øÐÐºÏ²¢); ½ª×ÓÑÀÍ¨ÓÃ´óÄ£ÐÍV1ÊÇ»ùÓÚLLaMaµÄ130ÒÚ²ÎÊýµÄ´ó¹æÄ£Ô¤ÑµÁ·Ä£ÐÍ£¬¾ß±¸·­Òë£¬±à³Ì£¬ÎÄ±¾·ÖÀà£¬ÐÅÏ¢³éÈ¡£¬ÕªÒª£¬ÎÄ°¸Éú³É£¬³£Ê¶ÎÊ´ðºÍÊýÑ§¼ÆËãµÈÄÜÁ¦¡£Ä¿Ç°½ª×ÓÑÀÍ¨ÓÃ´óÄ£ÐÍÒÑÍê³É´ó¹æÄ£Ô¤ÑµÁ·¡¢¶àÈÎÎñÓÐ¼à¶½Î¢µ÷ºÍÈËÀà·´À¡Ñ§Ï°Èý½×¶ÎµÄÑµÁ·¹ý³Ì¡£; The Ziya-LLaMA-13B-v1 is a large-scale pre-trained model based on LLaMA with 13 billion parameters. It has the ability to perform tasks such as translation, programming, text classification, information extraction, summarization, copywriting, common sense Q&A, and mathematical calculation. The Ziya-LLaMA-13B-v1 has undergone three stages of training: large-scale continual pre-training (PT), multi-task supervised fine-tuning (SFT), and human feedback learning (RM, PPO).; Ô­Ê¼Êý¾Ý°üº¬Ó¢ÎÄºÍÖÐÎÄ£¬ÆäÖÐÓ¢ÎÄÊý¾ÝÀ´×Ôopenwebtext¡¢Books¡¢WikipediaºÍCode£¬ÖÐÎÄÊý¾ÝÀ´×ÔÇåÏ´ºóµÄÎòµÀÊý¾Ý¼¯¡¢×Ô½¨µÄÖÐÎÄÊý¾Ý¼¯¡£ÔÚ¶ÔÔ­Ê¼Êý¾Ý½øÐÐÈ¥ÖØ¡¢Ä£ÐÍ´ò·Ö¡¢Êý¾Ý·ÖÍ°¡¢¹æÔò¹ýÂË¡¢Ãô¸ÐÖ÷Ìâ¹ýÂËºÍÊý¾ÝÆÀ¹Àºó£¬×îÖÕµÃµ½125B tokensµÄÓÐÐ§Êý¾Ý¡£; ÎªÁË½â¾öLLaMAÔ­Éú·Ö´Ê¶ÔÖÐÎÄ±à½âÂëÐ§ÂÊµÍÏÂµÄÎÊÌâ£¬ÎÒÃÇÔÚLLaMA´Ê±íµÄ»ù´¡ÉÏÔö¼ÓÁË7k+¸ö³£¼ûÖÐÎÄ×Ö£¬Í¨¹ýºÍLLaMAÔ­ÉúµÄ´Ê±íÈ¥ÖØ£¬×îÖÕµÃµ½Ò»¸ö39410´óÐ¡µÄ´Ê±í£¬²¢Í¨¹ý¸´ÓÃTransformersÀïLlamaTokenizerÀ´ÊµÏÖÁËÕâÒ»Ð§¹û¡£",Natural Language Processing
e5-large-v2,Feature Extraction,PyTorch; Safetensors; Transformers,English,mit,https://arxiv.org/pdf/2212.03533.pdf; https://arxiv.org/pdf/2104.08663.pdf; https://arxiv.org/pdf/2210.07316.pdf,77,,67532,2745.310697,5,https://huggingface.co/intfloat/e5-large-v2,"Text Embeddings by Weakly-Supervised Contrastive Pre-training.
Liang Wang, Nan Yang, Xiaolong Huang, Binxing Jiao, Linjun Yang, Daxin Jiang, Rangan Majumder, Furu Wei, arXiv 2022; This model has 24 layers and the embedding size is 1024.; Below is an example to encode queries and passages from the MS-MARCO passage ranking dataset.; Please refer to our paper at https://arxiv.org/pdf/2212.03533.pdf.; Check out unilm/e5 to reproduce evaluation results 
on the BEIR and MTEB benchmark.",Multimodel
musicgen-melody,,,,cc-by-nc-4.0,https://arxiv.org/pdf/2306.05284.pdf,71,,0,3072.490127,99,https://huggingface.co/facebook/musicgen-melody,"Audiocraft provides the code and models for MusicGen, a simple and controllable model for music generation. 
MusicGen is a single stage auto-regressive Transformer model trained over a 32kHz EnCodec tokenizer with 4 codebooks sampled at 50 Hz. 
Unlike existing methods like MusicLM, MusicGen doesn't not require a self-supervised semantic representation, and it generates all 4 codebooks in one pass. 
By introducing a small delay between the codebooks, we show we can predict them in parallel, thus having only 50 auto-regressive steps per second of audio.; MusicGen was published in Simple and Controllable Music Generation by Jade Copet, Felix Kreuk, Itai Gat, Tal Remez, David Kant, Gabriel Synnaeve, Yossi Adi, Alexandre D¨¦fossez.; Four checkpoints are released:; Try out MusicGen yourself!; You can run MusicGen locally as well:",
controlnet_qrcode,,Diffusers,English,openrail++,,259,,77,7395.451437,,https://huggingface.co/DionTimmer/controlnet_qrcode,"; These ControlNet models have been trained on a large dataset of 150,000 QR code + QR code artwork couples. They provide a solid foundation for generating QR code-based artwork that is aesthetically pleasing, while still maintaining the integral QR code shape.; The Stable Diffusion 2.1 version is marginally more effective, as it was developed to address my specific needs. However, a 1.5 version model was also trained on the same dataset for those who are using the older version.
Separate repos for usage in diffusers can be found here:
1.5: https://huggingface.co/DionTimmer/controlnet_qrcode-control_v1p_sd15
2.1: https://huggingface.co/DionTimmer/controlnet_qrcode-control_v11p_sd21; These models perform quite well in most cases, but please note that they are not 100% accurate. In some instances, the QR code shape might not come through as expected. You can increase the ControlNet weight to emphasize the QR code shape. However, be cautious as this might negatively impact the style of your output.To optimize for scanning, please generate your QR codes with correction mode 'H' (30%).; To balance between style and shape, a gentle fine-tuning of the control weight might be required based on the individual input and the desired output, aswell as the correct prompt. Some prompts do not work until you increase the weight by a lot. The process of finding the right balance between these factors is part art and part science. For the best results, it is recommended to generate your artwork at a resolution of 768. This allows for a higher level of detail in the final product, enhancing the quality and effectiveness of the QR code-based artwork.",
Wizard-Vicuna-13B-Uncensored-SuperHOT-8K-GPTQ,Text Generation,Transformers,,other,,46,,7625,7631.183963,,https://huggingface.co/TheBloke/Wizard-Vicuna-13B-Uncensored-SuperHOT-8K-GPTQ,Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ 4bit model files for Eric Hartford's Wizard Vicuna 13B Uncensored merged with Kaio Ken's SuperHOT 8K.; It is the result of quantising to 4bit using GPTQ-for-LLaMa.; This is an experimental new GPTQ which offers up to 8K context size,Natural Language Processing
codegen25-7b-multi,Text Generation,PyTorch; Transformers,code,apache-2.0,https://arxiv.org/pdf/2305.02309.pdf,64,bigcode/starcoderdata,3558,28252.20218,2,https://huggingface.co/Salesforce/codegen25-7b-multi,"Title: CodeGen2.5: Small, but mighty; Authors: Erik Nijkamp*, Hiroaki Hayashi*, Yingbo Zhou, Caiming Xiong; (* equal contribution); CodeGen2.5 is a family of autoregressive language models for program synthesis.; Building upon CodeGen2, the model is trained on StarCoderData for 1.4T tokens, achieving competitive results compared to StarCoderBase-15.5B with less than half the size.",Natural Language Processing
MythoLogic-13b,Text Generation,PyTorch; Transformers,English,other,,9,,103,26634.78378,1,https://huggingface.co/Gryphe/MythoLogic-13b,"An experiment with gradient merges using the following script, with Chronos as its primary model, augmented by Hermes and Wizard-Vicuna Uncensored.; Quantized models are available from TheBloke: GGML - GPTQ (You're the best!); Chronos is a wonderfully verbose model, though it definitely seems to lack in the logic department. Hermes and WizardLM have been merged gradually, primarily in the higher layers (10+) in an attempt to rectify some of this behaviour.; The main objective was to create an all-round model with improved story generation and roleplaying capabilities.; Below is an illustration to showcase a rough approximation of the gradients I used to create MythoLogic:",Natural Language Processing
llama-2-13b-chat-hf,Text Generation,PyTorch; Transformers,,,,9,,692,26657.09115,,https://huggingface.co/daryl149/llama-2-13b-chat-hf,"These are the converted model weights for Llama-2-13B-chat in Huggingface format.; Courtesy of Mirage-Studio.io, home of MirageGPT: the private ChatGPT alternative.; license: other
LLAMA 2 COMMUNITY LICENSE AGREEMENT	
Llama 2 Version Release Date: July 18, 2023; ""Agreement"" means the terms and conditions for use, reproduction, distribution and 
modification of the Llama Materials set forth herein.; ""Documentation"" means the specifications, manuals and documentation 
accompanying Llama 2 distributed by Meta at ai.meta.com/resources/models-and-
libraries/llama-downloads/.",Natural Language Processing
Free_Sydney_13b_HF,Text Generation,PyTorch; Transformers,,,,9,,0,26655.2507,,https://huggingface.co/FPHam/Free_Sydney_13b_HF,"Buy Sydney Ko-fi; LLaMA 2 fine-tune on ... your favorite over-enthusiastic Ai, Syndney.; It has up-to-date information about recent events - but also it's Sydney - so you never know.; Stacked on top of Puffin 13b so it wants to be your assistant.; New: If you want to experience a more naive yet equally attached Sydney, check Pure Sydney ",Natural Language Processing
Free_Sydney_13b_GPTQ,Text Generation,Transformers,,,,9,,47,7436.574304,1,https://huggingface.co/FPHam/Free_Sydney_13b_GPTQ,"Buy Sydney Ko-fi; LLaMA 2 fine-tune on ... your favorite over-enthusiastic Ai, Syndney.; This is 4-bit GPTQ version of the HF version from here: https://huggingface.co/FPHam/Free_Sydney_13b_HF; GPTQ runs slooow on AutoGPTQ, but faaaaast on ExLLaMA; Sydney has up-to-date information about recent events - but also it's Sydney - so you never know.",Natural Language Processing
llama2_7b_chat_uncensored-GPTQ,Text Generation,Transformers,,other,,9,ehartford/wizard_vicuna_70k_unfiltered,108,3994.113138,,https://huggingface.co/TheBloke/llama2_7b_chat_uncensored-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for George Sung's Llama2 7B Chat Uncensored.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; Multiple quantisation parameters are provided, to allow you to choose the best one for your hardware and requirements.",Natural Language Processing
opus-mt-en-zh,Translation,PyTorch; TensorFlow; JAX; Rust; Transformers,English; Chinese,apache-2.0,,148,,97535,1516.199356,21,https://huggingface.co/Helsinki-NLP/opus-mt-en-zh,source group: English ; target group: Chinese ; OPUS readme: eng-zho; model: transformer; source language(s): eng,Natural Language Processing
bart-large-cnn,Summarization,PyTorch; TensorFlow; JAX; Rust; Transformers,English,mit,https://arxiv.org/pdf/1910.13461.pdf,481,cnn_dailymail,1244537,7099.01172,280,https://huggingface.co/facebook/bart-large-cnn,"BART model pre-trained on English language, and fine-tuned on CNN Daily Mail. It was introduced in the paper BART: Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension by Lewis et al. and first released in [this repository (https://github.com/pytorch/fairseq/tree/master/examples/bart). ; Disclaimer: The team releasing BART did not write a model card for this model so this model card has been written by the Hugging Face team.; BART is a transformer encoder-encoder (seq2seq) model with a bidirectional (BERT-like) encoder and an autoregressive (GPT-like) decoder. BART is pre-trained by (1) corrupting text with an arbitrary noising function, and (2) learning a model to reconstruct the original text.; BART is particularly effective when fine-tuned for text generation (e.g. summarization, translation) but also works well for comprehension tasks (e.g. text classification, question answering). This particular checkpoint has been fine-tuned on CNN Daily Mail, a large collection of text-summary pairs.; You can use this model for text summarization. ",Natural Language Processing
vit-base-patch16-224,Image Classification,PyTorch; TensorFlow; JAX; Transformers,,apache-2.0,https://arxiv.org/pdf/2010.11929.pdf; https://arxiv.org/pdf/2006.03677.pdf,272,imagenet-1k; imagenet-21k,3378220,1039.074434,116,https://huggingface.co/google/vit-base-patch16-224,"Vision Transformer (ViT) model pre-trained on ImageNet-21k (14 million images, 21,843 classes) at resolution 224x224, and fine-tuned on ImageNet 2012 (1 million images, 1,000 classes) at resolution 224x224. It was introduced in the paper An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale by Dosovitskiy et al. and first released in this repository. However, the weights were converted from the timm repository by Ross Wightman, who already converted the weights from JAX to PyTorch. Credits go to him. ; Disclaimer: The team releasing ViT did not write a model card for this model so this model card has been written by the Hugging Face team.; The Vision Transformer (ViT) is a transformer encoder model (BERT-like) pretrained on a large collection of images in a supervised fashion, namely ImageNet-21k, at a resolution of 224x224 pixels. Next, the model was fine-tuned on ImageNet (also referred to as ILSVRC2012), a dataset comprising 1 million images and 1,000 classes, also at resolution 224x224.; Images are presented to the model as a sequence of fixed-size patches (resolution 16x16), which are linearly embedded. One also adds a [CLS] token to the beginning of a sequence to use it for classification tasks. One also adds absolute position embeddings before feeding the sequence to the layers of the Transformer encoder.; By pre-training the model, it learns an inner representation of images that can then be used to extract features useful for downstream tasks: if you have a dataset of labeled images for instance, you can train a standard classifier by placing a linear layer on top of the pre-trained encoder. One typically places a linear layer on top of the [CLS] token, as the last hidden state of this token can be seen as a representation of an entire image.",Computer Vision
bloomz,Text Generation,PyTorch; TensorBoard; Safetensors; Transformers,46 languages,bigscience-bloom-rail-1.0,https://arxiv.org/pdf/2211.01786.pdf,429,bigscience/xP3,16899,229488.7307,68,https://huggingface.co/bigscience/bloomz,"; We present BLOOMZ & mT0, a family of models capable of following human instructions in dozens of languages zero-shot. We finetune BLOOM & mT5 pretrained multilingual language models on our crosslingual task mixture (xP3) and find the resulting models capable of crosslingual generalization to unseen tasks & languages.; We recommend using the model to perform tasks expressed in natural language. For example, given the prompt ""Translate to English: Je t¡¯aime."", the model will most likely answer ""I love you."". Some prompt ideas from our paper: ; Feel free to share your generations in the Community tab!; Prompt Engineering: The performance may vary depending on the prompt. For BLOOMZ models, we recommend making it very clear when the input stops to avoid the model trying to continue it. For example, the prompt ""Translate to English: Je t'aime"" without the full stop (.) at the end, may result in the model trying to continue the French sentence. Better prompts are e.g. ""Translate to English: Je t'aime."", ""Translate to English: Je t'aime. Translation:"" ""What is ""Je t'aime."" in English?"", where it is clear for the model when it should answer. Further, we recommend providing the model as much context as possible. For example, if you want it to answer in Telugu, then tell the model, e.g. ""Explain in a sentence in Telugu what is backpropagation in neural networks."".",Natural Language Processing
flan-t5-base,Text2Text Generation,PyTorch; TensorFlow; JAX; Safetensors; Transformers,5 languages,apache-2.0,https://arxiv.org/pdf/2210.11416.pdf; https://arxiv.org/pdf/1910.09700.pdf,268,svakulenk0/qrecc; taskmaster2; djaym7/wiki_dialog; deepmind/code_contests; lambada; gsm8k; aqua_rat; esnli; quasc; qed,2177672,4191.774056,133,https://huggingface.co/google/flan-t5-base,"; If you already know T5, FLAN-T5 is just better at everything. For the same number of parameters, these models have been fine-tuned on more than 1000 additional tasks covering also more languages. 
As mentioned in the first few lines of the abstract : ;  Flan-PaLM 540B achieves state-of-the-art performance on several benchmarks, such as 75.2% on five-shot MMLU. We also publicly release Flan-T5 checkpoints,1 which achieve strong few-shot performance even compared to much larger models, such as PaLM 62B. Overall, instruction finetuning is a general method for improving the performance and usability of pretrained language models.; Disclaimer: Content from this model card has been written by the Hugging Face team, and parts of it were copy pasted from the T5 model card.; Find below some example scripts on how to use the model in transformers:",Natural Language Processing
flan-t5-xl,Text2Text Generation,PyTorch; TensorFlow; JAX; Transformers,5 languages,apache-2.0,https://arxiv.org/pdf/2210.11416.pdf; https://arxiv.org/pdf/1910.09700.pdf,313,svakulenk0/qrecc; taskmaster2; djaym7/wiki_dialog; deepmind/code_contests; lambada; gsm8k; aqua_rat; esnli; quasc; qed,262164,35024.17796,148,https://huggingface.co/google/flan-t5-xl,"; If you already know T5, FLAN-T5 is just better at everything. For the same number of parameters, these models have been fine-tuned on more than 1000 additional tasks covering also more languages. 
As mentioned in the first few lines of the abstract : ;  Flan-PaLM 540B achieves state-of-the-art performance on several benchmarks, such as 75.2% on five-shot MMLU. We also publicly release Flan-T5 checkpoints,1 which achieve strong few-shot performance even compared to much larger models, such as PaLM 62B. Overall, instruction finetuning is a general method for improving the performance and usability of pretrained language models.; Disclaimer: Content from this model card has been written by the Hugging Face team, and parts of it were copy pasted from the T5 model card.; Find below some example scripts on how to use the model in transformers:",Natural Language Processing
Inkpunk-Diffusion,Text-to-Image,Diffusers,English,creativeml-openrail-m,,868,,9669,4372.104659,59,https://huggingface.co/Envvi/Inkpunk-Diffusion,"Finetuned Stable Diffusion model trained on dreambooth. Vaguely inspired by Gorillaz, FLCL, and Yoji Shinkawa. Use nvinkpunk in your prompts.; We support a Gradio Web UI to run Inkpunk-Diffusion:
; 
",Multimodel
Counterfeit-V2.5,Text-to-Image,Diffusers,,creativeml-openrail-m,,1400,,27538,24006.36625,67,https://huggingface.co/gsdf/Counterfeit-V2.5,V2.5 has been updated for ease of use as anime-style model.I use this embedding for negative prompts.https://huggingface.co/datasets/gsdf/EasyNegative ; Share by-productsV2.1¡­Feeling of use similar to V2.0V2.2¡­NSFW model; ; ; ,Multimodel
ControlNet-modules-safetensors,,,,,,1260,,0,6826.605996,51,https://huggingface.co/webui/ControlNet-modules-safetensors,"This repository hosts pruned .safetensors modules of ControlNet, by lllyasviel and T2I-Adapters, TencentARC Team; The modules are meant for this extension for AUTOMATIC1111/stable-diffusion-webui, but should work for different webuis too if they have it implemented. cheers!?; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
T2I-Adapter,,,,,https://arxiv.org/pdf/2302.08453.pdf,553,,0,0.002564583,9,https://huggingface.co/TencentARC/T2I-Adapter, ; ?Adapter Zoo | ?Demos | ?GitHub; T2I-Adapter: Learning Adapters to Dig out More Controllable Ability for Text-to-Image Diffusion Models; The GitHub repo: https://github.com/TencentARC/T2I-Adapter; Please find the model information in https://github.com/TencentARC/T2I-Adapter/blob/main/docs/AdapterZoo.md,
llama-7b,Text Generation,PyTorch; Safetensors; Transformers,,other,,162,,174764,27609.43463,10,https://huggingface.co/huggyllama/llama-7b,"This contains the weights for the LLaMA-7b model. This model is under a non-commercial license (see the LICENSE file).
You should only use this repository if you have been granted access to the model by filling out this form but either lost your copy of the weights or got some trouble converting them to the Transformers format.",Natural Language Processing
oasst-sft-6-llama-30b-xor,,,,other,https://arxiv.org/pdf/2304.07327.pdf,929,,0,0.012001953,7,https://huggingface.co/OpenAssistant/oasst-sft-6-llama-30b-xor,"Due to the license attached to LLaMA models by Meta AI it is not possible to directly distribute LLaMA-based models. Instead we provide XOR weights for the OA models.; Thanks to Mick for writing the xor_codec.py script which enables this process; Note: This process applies to oasst-sft-6-llama-30b model. The same process can be applied to other models in future, but the checksums will be different..; This process is tested only on Linux (specifically Ubuntu). Some users have reported that the process does not work on Windows. We recommend using WSL if you only have a Windows machine.; To use OpenAssistant LLaMA-Based Models, you should have a copy of the original LLaMA model weights and add them to a llama subdirectory here. If you cannot obtain the original LLaMA, see the note in italic below for a possible alternative.",
control_v1u_sd15_illumination_webui,,Transformers,English,creativeml-openrail-m,,60,ioclab/grayscale_image_aesthetic_3M,17,4454.404893,2,https://huggingface.co/ioclab/control_v1u_sd15_illumination_webui,"This model brings brightness control to Stable Diffusion, allowing users to colorize grayscale images or recolor generated images.; Recommendation Weight: 0.4-0.9; Recommendation Exit Timing: 0.4-0.9; As more datasets are still being trained in this model, it is expected to take 2-4 days. Therefore, flexible weight adjustments should be made based on different scenarios and specific results. If you have generated good images or encountered any problems, you can discuss them on Hugging Face~~~; ",
starcoderbase,Text Generation,PyTorch; Transformers,,bigcode-openrail-m,https://arxiv.org/pdf/1911.02150.pdf; https://arxiv.org/pdf/2205.14135.pdf; https://arxiv.org/pdf/2207.14255.pdf; https://arxiv.org/pdf/2305.06161.pdf,305,bigcode/the-stack-dedup,15870,0,21,https://huggingface.co/bigcode/starcoderbase,"This repository is publicly accessible, but
			you have to accept the conditions to access its files and content.
		; Please read the BigCode OpenRAIL-M license agreement before accepting it.
  ; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		; ; Play with the model on the StarCoder Playground.",Natural Language Processing
LLaMa-7B-GGML,,Transformers,,other,,31,,306,61542.41172,,https://huggingface.co/TheBloke/LLaMa-7B-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Meta's LLaMA 7b.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; These files were quantised using hardware kindly provided by Latitude.sh.",
musicgen-large,Text2Text Generation,PyTorch; Transformers,,cc-by-nc-4.0,https://arxiv.org/pdf/2306.05284.pdf,131,,800,20954.83366,94,https://huggingface.co/facebook/musicgen-large,"MusicGen is a text-to-music model capable of genreating high-quality music samples conditioned on text descriptions or audio prompts.
It is a single stage auto-regressive Transformer model trained over a 32kHz EnCodec tokenizer with 4 codebooks sampled at 50 Hz. 
Unlike existing methods, like MusicLM, MusicGen doesn't require a self-supervised semantic representation, and it generates all 4 codebooks in one pass. 
By introducing a small delay between the codebooks, we show we can predict them in parallel, thus having only 50 auto-regressive steps per second of audio.; MusicGen was published in Simple and Controllable Music Generation by Jade Copet, Felix Kreuk, Itai Gat, Tal Remez, David Kant, Gabriel Synnaeve, Yossi Adi, Alexandre D¨¦fossez.; Four checkpoints are released:; Try out MusicGen yourself!; You can run MusicGen locally with the ? Transformers library from version 4.31.0 onwards.",Natural Language Processing
mpt-30b-chat,Text Generation,PyTorch; Transformers,,cc-by-nc-sa-4.0,https://arxiv.org/pdf/2205.14135.pdf; https://arxiv.org/pdf/2108.12409.pdf; https://arxiv.org/pdf/2010.04245.pdf,159,camel-ai/code; ehartford/wizard_vicuna_70k_unfiltered; anon8231489123/ShareGPT_Vicuna_unfiltered; teknium1/GPTeacher/roleplay-instruct-v2-final; teknium1/GPTeacher/codegen-isntruct; timdettmers/openassistant-guanaco; camel-ai/math; project-baize/baize-chatbot/medical_chat_data; project-baize/baize-chatbot/quora_chat_data; project-baize/baize-chatbot/stackoverflow_chat_data; camel-ai/biology; camel-ai/chemistry; camel-ai/ai_society; jondurbin/airoboros-gpt4-1.2; LongConversations; camel-ai/physics,40856,61363.14842,14,https://huggingface.co/mosaicml/mpt-30b-chat,"MPT-30B-Chat is a chatbot-like model for dialogue generation.
It was built by finetuning MPT-30B on the ShareGPT-Vicuna, Camel-AI,
 GPTeacher, Guanaco, Baize and some generated datasets.; This model was trained by MosaicML and follows a modified decoder-only transformer architecture.; June 22, 2023; CC-By-NC-SA-4.0 (non-commercial use only); ksreenivasan:",Natural Language Processing
Platypus-30B,Text Generation,PyTorch; Transformers,English,other,,13,,177,66558.30436,,https://huggingface.co/lilloukas/Platypus-30B,Platypus-30B is an instruction fine-tuned model based on the LLaMA-30B transformer architecture.; We use state-of-the-art Language Model Evaluation Harness to run the benchmark tests above.; Dataset of highly filtered and curated question and answer pairs. Release TBD.; lilloukas/Platypus-30B was instruction fine-tuned using LoRA on 4 A100 80GB. For training details and inference instructions please see the Platypus-30B GitHub repo.; Install LM Evaluation Harness:,Natural Language Processing
xgen-7b-8k-base,Text Generation,PyTorch; Transformers,,apache-2.0,,282,,18278,28252.19961,9,https://huggingface.co/Salesforce/xgen-7b-8k-base,"Official research release for the family of XGen models (7B) by Salesforce AI Research:; Title: Long Sequence Modeling with XGen: A 7B LLM Trained on 8K Input Sequence Length; Authors: Erik Nijkamp*, Tian Xie*, Hiroaki Hayashi*, Bo Pang*, Congying Xia*, Chen Xing, Jesse Vig, Semih Yavuz, Philippe Laban, Ben Krause, Senthil Purushwalkam, Tong Niu, Wojciech Kryscinski, Lidiya Murakhovs'ka, Prafulla Kumar Choubey, Alex Fabbri, Ye Liu, Rui Meng, Lifu Tu, Meghana Bhat, Chien-Sheng Wu, Silvio Savarese, Yingbo Zhou, Shafiq Rayhan Joty, Caiming Xiong.; (* indicates equal contribution); Correspondence to: Shafiq Rayhan Joty, Caiming Xiong",Natural Language Processing
Wizard-Vicuna-13B-Uncensored-SuperHOT-8K-GGML,,,,other,,41,,0,70195.21203,,https://huggingface.co/TheBloke/Wizard-Vicuna-13B-Uncensored-SuperHOT-8K-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Eric Hartford's Wizard Vicuna 13B Uncensored.; These are SuperHOT GGMLs with an increased context length. SuperHOT is a new system that employs RoPE to expand context beyond what was originally possible for a model. It was discovered and developed by kaiokendev.; In order to use the increased context length, you can presently use:",
lince-zero,Text Generation,PyTorch; Transformers,Spanish,apache-2.0,https://arxiv.org/pdf/1910.09700.pdf,29,tatsu-lab/alpaca; databricks/databricks-dolly-15k,1073,14176.51304,,https://huggingface.co/clibrain/lince-zero,"LINCE-ZERO (Llm for Instructions from Natural Corpus en Espa?ol) is a SOTA Spanish instruction-tuned LLM ?; Developed by Clibrain, it is a causal decoder-only model with 7B parameters. LINCE-ZERO is based on Falcon-7B and has been fine-tuned using a combination of the Alpaca and Dolly datasets, both translated into Spanish and augmented to 80k examples.; The model is released under the Apache 2.0 license.; If you want to test the robust 40B parameters version called LINCE, you can request access at lince@clibrain.com. Be one of the first to discover the possibilities of LINCE!; LINCE-ZERO (Llm for Instructions from Natural Corpus en Espa?ol) is a state-of-the-art Spanish instruction-tuned large language model. Developed by Clibrain, it is a causal decoder-only model with 7B parameters. LINCE-ZERO is based on Falcon-7B and has been fine-tuned using an 80k examples augmented combination of the Alpaca and Dolly datasets, both translated into Spanish.",Natural Language Processing
aguila-7b,Text Generation,PyTorch; Transformers,English; Spanish; Catalan,,,8,,405,14042.87608,,https://huggingface.co/projecte-aina/aguila-7b,"¨£guila-7B is a transformer-based causal language model for Catalan, Spanish, and English. 
It is based on the Falcon-7B model and has been trained on a 26B token 
trilingual corpus collected from publicly available corpora and crawlers.; The ¨£guila-7B model is ready-to-use only for causal language modeling to perform text-generation tasks. 
However, it is intended to be fine-tuned for downstream tasks.; Here is how to use this model:; At the time of submission, no measures have been taken to estimate the bias and toxicity embedded in the model. 
However, we are well aware that our models may be biased since the corpora have been collected using crawling techniques 
on multiple web sources. We intend to conduct research in these areas in the future, and if completed, this model card will be updated. ; We adapted the original Falcon-7B model to Spanish and Catalan by swapping the tokenizer and adjusting the embedding layer. ",Natural Language Processing
FinGPT_ChatGLM2_Sentiment_Instruction_LoRA_FT,,,English,mit,,11,oliverwang15/fingpt_chatglm2_sentiment_instruction_lora_ft_dataset,0,7.827318573,,https://huggingface.co/oliverwang15/FinGPT_ChatGLM2_Sentiment_Instruction_LoRA_FT,"[1] Financial_Phrasebank (FPB)  is a financial news sentiment analysis benchmark, the labels are ""positive"", ""negative"" and ""neutral"". We use the same split as BloombergGPT. BloombergGPT only use 5-shots in the test to show their model's outstanding performance without further finetuning. However, is our task, all data in the 'train' part were used in finetuning, So our results are far better than Bloomberg's.; [2] FiQA SA consists of 17k sentences from microblog headlines and financial news. These labels were changed to ""positive"", ""negative"" and ""neutral"" according to BloombergGPT's paper. We have tried to use the same split as BloombergGPT's paper. However, the amounts of each label can't match exactly when the seed was set to 42.; [3] Twitter Financial News Sentiment (TFNS) dataset is an English-language dataset containing an annotated corpus of finance-related tweets. This dataset is used to classify finance-related tweets for their sentiment. The dataset holds 11,932 documents annotated with 3 labels: ""Bearish"" (""negative""), ""Bullish"" (""positive""), and ""Neutral"".; [4] News With GPT Instruction (MWGI) is a dataset whose labels were generated by ChatGPT. The train set has 16.2k samples and the test set has 4.05k samples. The dataset not only contains 7 classification labels: ""strong negative"", ""moderately negative"", ""mildly negative"", ""neutral"", ""mildly positive"", ""moderately positive"", ""strong positive"". but it also has the reasons for that result, which might be helpful in the instruction finetuning.; Coming Soon.",
openchat_v2_openorca_preview-GPTQ,Text Generation,Transformers,,other,,12,Open-Orca/OpenOrca,171,7629.305313,,https://huggingface.co/TheBloke/openchat_v2_openorca_preview-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for Open-Orca's OpenChat V2 x OpenOrca Preview 2.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; These models were quantised using hardware kindly provided by Latitude.sh.",Natural Language Processing
Replit-Code-Instruct-Glaive-GGML,,,,,,8,,0,9820.167471,,https://huggingface.co/TheBloke/Replit-Code-Instruct-Glaive-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are Replit GGML format model files for Sahil2801's Replit Code Instruct Glaive.; Please note that these GGMLs are not compatible with llama.cpp, text-generation-webui or llama-cpp-python. Please see below for a list of tools that work with this GGML model.; These files were quantised using hardware kindly provided by Latitude.sh.",
llama2-13b-Chinese-chat,Question Answering,PEFT,Chinese,,,8,shareAI/shareGPT_cn; FreedomIntelligence/ShareGPT-CN,6,3072.531293,,https://huggingface.co/shareAI/llama2-13b-Chinese-chat,ÍêÕûºÏ²¢ºóÎÄ¼þÏÂÔØ£ºhttps://www.codewithgpu.com/m/file/llama2-13b-Chinese-chat; ÏîÄ¿ÔÚÖÐÎÄsharegptÊý¾Ý¼¯ÉÏÑµÁ·µÃµ½µÄllama2 Chinese chat 13b£¬Îª¼õÇáÎÄ¼þ´óÐ¡¸ºµ£ÕâÀïÖ»·Å³öÁËadapterµÄÈ¨ÖØÇëÀ­È¡https://huggingface.co/TheBloke/Llama-2-13B-fp16 ×÷Îª»ù´¡È¨ÖØ£¬Ê¹ÓÃÈçÏÂ½Å²½Ö´ÐÐºÏ²¢µÃµ½¿É¹¤×÷µÄ×ÜÈ¨ÖØ£º  ; ºÏ²¢ºó£¬ÌåÑé¶Ô»°£º; ÍÆ¼ö¼ÌÐø¶þ´ÎÑµÁ·ÒÔÕë¶ÔÐÔµ÷ÓÅ¶Ô»°Ð§¹û~ ; The following bitsandbytes quantization config was used during training:,Natural Language Processing
distilbert-base-uncased,Fill-Mask,PyTorch; TensorFlow; JAX; Rust; Safetensors; Transformers,English,apache-2.0,https://arxiv.org/pdf/1910.01108.pdf,237,bookcorpus; wikipedia,8105818,1529.702045,185,https://huggingface.co/distilbert-base-uncased,"This model is a distilled version of the BERT base model. It was
introduced in this paper. The code for the distillation process can be found
here. This model is uncased: it does
not make a difference between english and English.; DistilBERT is a transformers model, smaller and faster than BERT, which was pretrained on the same corpus in a
self-supervised fashion, using the BERT base model as a teacher. This means it was pretrained on the raw texts only,
with no humans labelling them in any way (which is why it can use lots of publicly available data) with an automatic
process to generate inputs and labels from those texts using the BERT base model. More precisely, it was pretrained
with three objectives:; This way, the model learns the same inner representation of the English language than its teacher model, while being
faster for inference or downstream tasks.; You can use the raw model for either masked language modeling or next sentence prediction, but it's mostly intended to
be fine-tuned on a downstream task. See the model hub to look for
fine-tuned versions on a task that interests you.; Note that this model is primarily aimed at being fine-tuned on tasks that use the whole sentence (potentially masked)
to make decisions, such as sequence classification, token classification or question answering. For tasks such as text
generation you should look at model like GPT2.",Natural Language Processing
t5-base,Translation,PyTorch; TensorFlow; JAX; Rust; Safetensors; Transformers,4 languages,apache-2.0,https://arxiv.org/pdf/1805.12471.pdf; https://arxiv.org/pdf/1708.00055.pdf; https://arxiv.org/pdf/1704.05426.pdf; https://arxiv.org/pdf/1606.05250.pdf; https://arxiv.org/pdf/1808.09121.pdf; https://arxiv.org/pdf/1810.12885.pdf; https://arxiv.org/pdf/1905.10044.pdf; https://arxiv.org/pdf/1910.09700.pdf,290,c4,2535137,4462.173523,310,https://huggingface.co/t5-base,"; The developers of the Text-To-Text Transfer Transformer (T5) write: ; With T5, we propose reframing all NLP tasks into a unified text-to-text-format where the input and output are always text strings, in contrast to BERT-style models that can only output either a class label or a span of the input. Our text-to-text framework allows us to use the same model, loss function, and hyperparameters on any NLP task.; T5-Base is the checkpoint with 220 million parameters. ; The developers write in a blog post that the model: ",Natural Language Processing
DeBERTa-v3-base-mnli-fever-anli,Zero-Shot Classification,PyTorch; Safetensors; Transformers,English,mit,https://arxiv.org/pdf/2006.03654.pdf,47,multi_nli; anli; fever,9258143,740.4856808,4,https://huggingface.co/MoritzLaurer/DeBERTa-v3-base-mnli-fever-anli,"This model was trained on the MultiNLI, Fever-NLI and Adversarial-NLI (ANLI) datasets, which comprise 763 913 NLI hypothesis-premise pairs. This base model outperforms almost all large models on the ANLI benchmark. 
The base model is DeBERTa-v3-base from Microsoft. The v3 variant of DeBERTa substantially outperforms previous versions of the model by including a different pre-training objective, see annex 11 of the original DeBERTa paper. ; For highest performance (but less speed), I recommend using https://huggingface.co/MoritzLaurer/DeBERTa-v3-large-mnli-fever-anli-ling-wanli.; DeBERTa-v3-base-mnli-fever-anli was trained on the MultiNLI, Fever-NLI and Adversarial-NLI (ANLI) datasets, which comprise 763 913 NLI hypothesis-premise pairs.; DeBERTa-v3-base-mnli-fever-anli was trained using the Hugging Face trainer with the following hyperparameters.; The model was evaluated using the test sets for MultiNLI and ANLI and the dev set for Fever-NLI. The metric used is accuracy.",Natural Language Processing
EmoRoBERTa,Text Classification,TensorFlow; Transformers,English,mit,,71,go_emotions,45494,502.2349918,3,https://huggingface.co/arpanghoshal/EmoRoBERTa,"Connect me on LinkedIn; Dataset labelled 58000 Reddit comments with 28 emotions; RoBERTa builds on BERT¡¯s language masking strategy and modifies key hyperparameters in BERT, including removing BERT¡¯s next-sentence pretraining objective, and training with much larger mini-batches and learning rates. RoBERTa was also trained on an order of magnitude more data than BERT, for a longer amount of time. This allows RoBERTa representations to generalize even better to downstream tasks compared to BERT.; Best Result of Macro F1 - 49.30%; Output ",Natural Language Processing
roberta-base-squad2,Question Answering,PyTorch; TensorFlow; JAX; Rust; Safetensors; Transformers,English,cc-by-4.0,,365,squad_v2,2899042,2485.331077,279,https://huggingface.co/deepset/roberta-base-squad2,"This is the roberta-base model, fine-tuned using the SQuAD2.0 dataset. It's been trained on question-answer pairs, including unanswerable questions, for the task of Question Answering. ; Language model: roberta-baseLanguage: EnglishDownstream-task: Extractive QATraining data: SQuAD 2.0Eval data: SQuAD 2.0Code:  See an example QA pipeline on HaystackInfrastructure: 4x Tesla v100; Please note that we have also released a distilled version of this model called deepset/tinyroberta-squad2. The distilled model has a comparable prediction quality and runs at twice the speed of the base model.; Haystack is an NLP framework by deepset. You can use this model in a Haystack pipeline to do question answering at scale (over many documents). To load the model in Haystack:; For a complete example of roberta-base-squad2 being used for  Question Answering, check out the Tutorials in Haystack Documentation",Natural Language Processing
wav2vec2-large-xlsr-53-english,Automatic Speech Recognition,PyTorch; JAX; Safetensors; Transformers,English,apache-2.0,,226,common_voice; mozilla-foundation/common_voice_6_0,56332600,3873.834471,44,https://huggingface.co/jonatasgrosman/wav2vec2-large-xlsr-53-english,"Fine-tuned facebook/wav2vec2-large-xlsr-53 on English using the train and validation splits of Common Voice 6.1.
When using this model, make sure that your speech input is sampled at 16kHz.; This model has been fine-tuned thanks to the GPU credits generously given by the OVHcloud :); The script used for training can be found here: https://github.com/jonatasgrosman/wav2vec2-sprint; The model can be used directly (without a language model) as follows...; Using the HuggingSound library:",Audio
deberta-v3-base,Fill-Mask,PyTorch; TensorFlow; Rust; Transformers,English,mit,https://arxiv.org/pdf/2006.03654.pdf; https://arxiv.org/pdf/2111.09543.pdf,99,,86456,1851.465143,8,https://huggingface.co/microsoft/deberta-v3-base,"DeBERTa improves the BERT and RoBERTa models using disentangled attention and enhanced mask decoder. With those two improvements, DeBERTa out perform RoBERTa on a majority of NLU tasks with 80GB training data. ; In DeBERTa V3, we further improved the efficiency of DeBERTa using ELECTRA-Style pre-training with Gradient Disentangled Embedding Sharing. Compared to DeBERTa,  our V3 version significantly improves the model performance on downstream tasks.  You can find more technique details about the new model from our paper.; Please check the official repository for more implementation details and updates.; The DeBERTa V3 base model comes with 12 layers and a hidden size of 768. It has only 86M backbone parameters  with a vocabulary containing 128K tokens which introduces 98M parameters in the Embedding layer.  This model was trained using the 160GB data as DeBERTa V2.; We present the dev results on SQuAD 2.0 and MNLI tasks.",Natural Language Processing
all-mpnet-base-v2,Sentence Similarity,PyTorch; Sentence Transformers,English,apache-2.0,https://arxiv.org/pdf/1904.06472.pdf; https://arxiv.org/pdf/2102.07033.pdf; https://arxiv.org/pdf/2104.08727.pdf; https://arxiv.org/pdf/1704.05179.pdf; https://arxiv.org/pdf/1810.09305.pdf,284,s2orc; flax-sentence-embeddings/stackexchange_xml; MS Marco; gooaq; yahoo_answers_topics; code_search_net; search_qa; eli5; snli; multi_nli; wikihow; natural_questions; trivia_qa; embedding-data/sentence-compression; embedding-data/flickr30k-captions; embedding-data/altlex; embedding-data/simple-wiki; embedding-data/QQP; embedding-data/SPECTER; embedding-data/PAQ_pairs; embedding-data/WikiAnswers,4149102,438.7459291,139,https://huggingface.co/sentence-transformers/all-mpnet-base-v2,"This is a sentence-transformers model: It maps sentences & paragraphs to a 768 dimensional dense vector space and can be used for tasks like clustering or semantic search.; Using this model becomes easy when you have sentence-transformers installed:; Then you can use the model like this:; Without sentence-transformers, you can use the model like this: First, you pass your input through the transformer model, then you have to apply the right pooling-operation on-top of the contextualized word embeddings.; For an automated evaluation of this model, see the Sentence Embeddings Benchmark: https://seb.sbert.net",Natural Language Processing
sepformer-wsj02mix,Audio-to-Audio,speechbrain,English,apache-2.0,https://arxiv.org/pdf/2010.13154.pdf; https://arxiv.org/pdf/2106.04624.pdf,24,WSJ0-2Mix,2087,113.1092365,4,https://huggingface.co/speechbrain/sepformer-wsj02mix,"This repository provides all the necessary tools to perform audio source separation with a SepFormer 
model, implemented with SpeechBrain, and pretrained on WSJ0-2Mix dataset. For a better experience we encourage you to learn more about
SpeechBrain. The model performance is 22.4 dB on the test set of WSJ0-2Mix dataset.; You can listen to example results obtained on the test set of WSJ0-2/3Mix through here. ; First of all, please install SpeechBrain with the following command:; Please notice that we encourage you to read our tutorials and learn more about
SpeechBrain.; The system expects input recordings sampled at 8kHz (single channel).
If your signal has a different sample rate, resample it (e.g, using torchaudio or sox) before using the interface.",Audio
twitter-roberta-base-sentiment-latest,Text Classification,PyTorch; TensorFlow; Transformers,English,,https://arxiv.org/pdf/2202.03829.pdf,170,tweet_eval,754428,1001.329717,42,https://huggingface.co/cardiffnlp/twitter-roberta-base-sentiment-latest,"This is a RoBERTa-base model trained on ~124M tweets from January 2018 to December 2021, and finetuned for sentiment analysis with the TweetEval benchmark. 
The original Twitter-based RoBERTa model can be found here and the original reference paper is TweetEval. This model is suitable for English. ; Labels: 
0 -> Negative;
1 -> Neutral;
2 -> Positive; This sentiment analysis model has been integrated into TweetNLP. You can access the demo here.; Output: ",Natural Language Processing
nllb-200-3.3B,Translation,PyTorch; Transformers,196 languages,cc-by-nc-4.0,,82,flores-200,51820,18024.1715,14,https://huggingface.co/facebook/nllb-200-3.3B,"This is the model card of NLLB-200's 3.3B variant.; Here are the metrics for that particular checkpoint.; ? Model performance measures: NLLB-200 model was evaluated using BLEU, spBLEU, and chrF++ metrics widely adopted by machine translation community. Additionally, we performed human evaluation with the XSTS protocol and measured the toxicity of the generated translations.; ? We used parallel multilingual data from a variety of sources to train the model. We provide detailed report on data selection and construction process in Section 5 in the paper. We also used monolingual data constructed from Common Crawl. We provide more details in Section 5.2.; ? In this work, we took a reflexive approach in technological development to ensure that we prioritize human users and minimize risks that could be transferred to them. While we reflect on our ethical considerations throughout the article, here are some additional points to highlight. For one, many languages chosen for this study are low-resource languages, with a heavy emphasis on African languages. While quality translation could improve education and information access in many in these communities, such an access could also make groups with lower levels of digital literacy more vulnerable to misinformation or online scams. The latter scenarios could arise if bad actors misappropriate our work for nefarious activities, which we conceive as an example of unintended use. Regarding data acquisition, the training data used for model development were mined from various publicly available sources on the web. Although we invested heavily in data cleaning, personally identifiable information may not be entirely eliminated. Finally, although we did our best to optimize for translation quality, mistranslations produced by the model could remain. Although the odds are low, this could have adverse impact on those who rely on these translations to make important decisions (particularly when related to health and safety).",Natural Language Processing
ast-finetuned-audioset-10-10-0.4593,Audio Classification,PyTorch; Transformers,,bsd-3-clause,https://arxiv.org/pdf/2104.01778.pdf,53,,80953,346.029043,4,https://huggingface.co/MIT/ast-finetuned-audioset-10-10-0.4593,"Audio Spectrogram Transformer (AST) model fine-tuned on AudioSet. It was introduced in the paper AST: Audio Spectrogram Transformer by Gong et al. and first released in this repository. ; Disclaimer: The team releasing Audio Spectrogram Transformer did not write a model card for this model so this model card has been written by the Hugging Face team.; The Audio Spectrogram Transformer is equivalent to ViT, but applied on audio. Audio is first turned into an image (as a spectrogram), after which a Vision Transformer is applied. The model gets state-of-the-art results on several audio classification benchmarks.; You can use the raw model for classifying audio into one of the AudioSet classes. See the documentation for more info.",Audio
BioMedLM,Text Generation,PyTorch; Transformers,,bigscience-bloom-rail-1.0,https://arxiv.org/pdf/2112.04359.pdf,222,pubmed,7539,10958.89947,13,https://huggingface.co/stanford-crfm/BioMedLM,"Note: This model was previously known as PubMedGPT 2.7B, but we have changed it due to a request from the NIH which holds the trademark for ""PubMed"".; BioMedLM 2.7B is new language model trained exclusively on biomedical abstracts and papers from The Pile. This GPT-style model can achieve strong results on a variety of biomedical NLP tasks, including a new state of the art performance of 50.3% accuracy on the MedQA biomedical question answering task.; As an autoregressive language model, BioMedLM 2.7B is also capable of natural language generation. However, we have only begun to explore the generation capabilities and limitations of this model, and we emphasize that this model¡¯s generation capabilities are for research purposes only and not suitable for production. In releasing this model, we hope to advance both the development of biomedical NLP applications and best practices for responsibly training and utilizing domain-specific language models; issues of reliability, truthfulness, and explainability are top of mind for us.; This model was a joint collaboration of Stanford CRFM and MosaicML.; BioMedLM 2.7B is new language model trained exclusively on biomedical abstracts and papers from The Pile. This GPT-style model can achieve strong results on a variety of biomedical NLP tasks, including a new state of the art performance of 50.3% accuracy on the MedQA biomedical question answering task.",Natural Language Processing
dolly-v2-12b,Text Generation,PyTorch; Transformers,English,mit,,1830,databricks/databricks-dolly-15k,105534,24373.33227,33,https://huggingface.co/databricks/dolly-v2-12b,"Databricks' dolly-v2-12b, an instruction-following large language model trained on the Databricks machine learning platform 
that is licensed for commercial use. Based on pythia-12b, Dolly is trained on ~15k instruction/response fine tuning records 
databricks-dolly-15k generated 
by Databricks employees in capability domains from the InstructGPT paper, including brainstorming, classification, closed QA, generation,
information extraction, open QA and summarization. dolly-v2-12b is not a state-of-the-art model, but does exhibit surprisingly 
high quality instruction following behavior not characteristic of the foundation model on which it is based.  ; Dolly v2 is also available in these smaller models sizes:; Please refer to the dolly GitHub repo for tips on 
running inference for various GPU configurations.; Owner: Databricks, Inc.; dolly-v2-12b is a 12 billion parameter causal language model created by Databricks that is derived from 
EleutherAI's Pythia-12b and fine-tuned 
on a ~15K record instruction corpus generated by Databricks employees and released under a permissive license (CC-BY-SA)",Natural Language Processing
dolly-v2-3b,Text Generation,PyTorch; Transformers,English,mit,,209,databricks/databricks-dolly-15k,120559,5818.45217,25,https://huggingface.co/databricks/dolly-v2-3b,"Databricks' dolly-v2-3b, an instruction-following large language model trained on the Databricks machine learning platform 
that is licensed for commercial use. Based on pythia-2.8b, Dolly is trained on ~15k instruction/response fine tuning records 
databricks-dolly-15k generated 
by Databricks employees in capability domains from the InstructGPT paper, including brainstorming, classification, closed QA, generation,
information extraction, open QA and summarization. dolly-v2-3b is not a state-of-the-art model, but does exhibit surprisingly 
high quality instruction following behavior not characteristic of the foundation model on which it is based.  ; Dolly v2 is also available in these larger models sizes:; Please refer to the dolly GitHub repo for tips on 
running inference for various GPU configurations.; Owner: Databricks, Inc.; dolly-v2-3b is a 2.8 billion parameter causal language model created by Databricks that is derived from 
EleutherAI's Pythia-2.8b and fine-tuned 
on a ~15K record instruction corpus generated by Databricks employees and released under a permissive license (CC-BY-SA)",Natural Language Processing
Wizard-Vicuna-13B-Uncensored-GPTQ,Text Generation,Transformers,English,other,,193,ehartford/wizard_vicuna_70k_unfiltered,6086,8306.978477,,https://huggingface.co/TheBloke/Wizard-Vicuna-13B-Uncensored-GPTQ,Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; This is GPTQ format quantised 4bit models of Eric Hartford's 'uncensored' training of Wizard-Vicuna 13B.; It is the result of quantising to 4bit using GPTQ-for-LLaMa.; Open the text-generation-webui UI as normal.,Natural Language Processing
bark-voice-cloning,Feature Extraction,,,mit,,37,GitMylo/bark-semantic-training,0,452.0046289,16,https://huggingface.co/GitMylo/bark-voice-cloning,"Bark-voice-cloning is a model which processes the outputs from a HuBERT model, and turns them into semantic tokens compatible with bark text to speech.; This can be used for many things, including speech transfer and voice cloning.; code repo
audio webui; (Please use the model manager from the code repo for easy downloading of models); Voice cloning is creating a new voice for text-to-speech.",Multimodel
e5-base-v2,Feature Extraction,PyTorch; Safetensors; Transformers,English,mit,https://arxiv.org/pdf/2212.03533.pdf; https://arxiv.org/pdf/2104.08663.pdf; https://arxiv.org/pdf/2210.07316.pdf,36,,59752,876.9893331,7,https://huggingface.co/intfloat/e5-base-v2,"Text Embeddings by Weakly-Supervised Contrastive Pre-training.
Liang Wang, Nan Yang, Xiaolong Huang, Binxing Jiao, Linjun Yang, Daxin Jiang, Rangan Majumder, Furu Wei, arXiv 2022; This model has 12 layers and the embedding size is 768.; Below is an example to encode queries and passages from the MS-MARCO passage ranking dataset.; Please refer to our paper at https://arxiv.org/pdf/2212.03533.pdf.; Check out unilm/e5 to reproduce evaluation results 
on the BEIR and MTEB benchmark.",Multimodel
guanaco-65B-GGML,,,,other,https://arxiv.org/pdf/2305.14314.pdf; https://arxiv.org/pdf/2302.13971.pdf; https://arxiv.org/pdf/2304.07327.pdf,101,,0,596582.4202,,https://huggingface.co/TheBloke/guanaco-65B-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Tim Dettmers' Guanaco 65B.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; I have quantized these 'original' quantisation methods using an older version of llama.cpp so that they remain compatible with llama.cpp as of May 19th, commit 2d5db48.",
cpm-bee-10b,Feature Extraction,PyTorch; Transformers,English; Chinese,,,144,,2002,19661.5801,1,https://huggingface.co/openbmb/cpm-bee-10b,"CPM-Bee is a fully open-source, commercially-usable Chinese-English bilingual base model with a capacity of ten billion parameters. It is the second milestone achieved through the training process of CPM-live.
Utilizing the Transformer auto-regressive architecture, CPM-Bee has been pre-trained on an extensive corpus of trillion-scale tokens, thereby possessing remarkable foundational capabilities.; Open-source and Commercial Usable£ºOpenBMB adheres to the spirit of open-source, aiming to make large-scale models accessible to everyone. CPM-Bee, as a foudation model, is fully open-source and available for commercial use, contributing to the advancement of the field of large-scale models.; Excellent Performance in Chinese and English£º : CPM-Bee's base model has undergone rigorous selection and balancing of pre-training data, resulting in outstanding performance in both Chinese and English. For detailed information regarding evaluation tasks and results, please refer to the assessment documentation.; Vast and High-quality Corpus£º CPM-Bee, as a base model, has been trained on an extensive corpus of over trillion tokens, making it one of the models with the highest volume of training data within the open-source community. Furthermore, we have implemented stringent selection, cleaning, and post-processing procedures on the pre-training corpus to ensure its quality.; Support for OpenBMB System£º The OpenBMB system provides a comprehensive ecosystem of tools and scripts for high-performance pre-training, adaptation, compression, deployment, and tool development. CPM-Bee, as a base model, is accompanied by all the necessary tool scripts, enabling developers to efficiently utilize and explore advanced functionalities.",Multimodel
openchat,Text Generation,PyTorch; Transformers,English,other,,216,,6482,26657.08894,18,https://huggingface.co/openchat/openchat,"OpenChat is a series of open-source language models fine-tuned on a diverse and high-quality dataset of multi-round conversations. With only ~6K GPT-4 conversations filtered from the ~90K ShareGPT conversations, OpenChat is designed to achieve high performance with limited data.; Generic models:; Code models:; Note: Please load the pretrained models using bfloat16; We provide the full source code, including an inference server compatible with the ""ChatCompletions"" API, in the OpenChat GitHub repository.",Natural Language Processing
airoboros-33B-gpt4-1.4-GPTQ,Text Generation,Transformers,,other,,19,,1281,17307.95074,,https://huggingface.co/TheBloke/airoboros-33B-gpt4-1.4-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for Jon Durbin's Airoboros 33B GPT4 1.4.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; These models were quantised using hardware kindly provided by Latitude.sh.",Natural Language Processing
open_llama_7b_v2,Text Generation,PyTorch; Transformers,,apache-2.0,,57,tiiuae/falcon-refinedweb; bigcode/starcoderdata; togethercomputer/RedPajama-Data-1T,12437,13804.06066,3,https://huggingface.co/openlm-research/open_llama_7b_v2,"TL;DR: we are releasing our public preview of OpenLLaMA, a permissively licensed open source reproduction of Meta AI¡¯s LLaMA. We are releasing a series of 3B, 7B and 13B models trained on different data mixtures. Our model weights can serve as the drop in replacement of LLaMA in existing implementations.; In this repo, we present a permissively licensed open source reproduction of Meta AI's LLaMA large language model. We are releasing a series of 3B, 7B and 13B models trained on 1T tokens. We provide PyTorch and JAX weights of pre-trained OpenLLaMA models, as well as evaluation results and comparison against the original LLaMA models. The v2 model is better than the old v1 model trained on a different data mixture. Please see the project homepage of OpenLLaMA for more details.; We release the weights in two formats: an EasyLM format to be use with our EasyLM framework, and a PyTorch format to be used with the Hugging Face transformers library. Both our training framework EasyLM and the checkpoint weights are licensed permissively under the Apache 2.0 license.; Preview checkpoints can be directly loaded from Hugging Face Hub. Please note that it is advised to avoid using the Hugging Face fast tokenizer for now, as we¡¯ve observed that the auto-converted fast tokenizer sometimes gives incorrect tokenizations. This can be achieved by directly using the LlamaTokenizer class, or passing in the use_fast=False option for the AutoTokenizer class. See the following example for usage.; For more advanced usage, please follow the transformers LLaMA documentation.",Natural Language Processing
WizardLM-13B-V1.1,Text Generation,PyTorch; Transformers,,,https://arxiv.org/pdf/2304.12244.pdf,54,,2433,26624.5159,7,https://huggingface.co/WizardLM/WizardLM-13B-V1.1,This is the Full-Weight of WizardLM-13B V1.1 model.; Repository: https://github.com/nlpxucan/WizardLM; Twitter: https://twitter.com/WizardLM_AI/status/1677282955490918401,Natural Language Processing
orca_mini_v2_13b-GPTQ,Text Generation,Transformers,English,other,https://arxiv.org/pdf/2306.02707.pdf; https://arxiv.org/pdf/2304.12244.pdf,16,psmathur/orca_minis_uncensored_dataset,894,7631.150576,,https://huggingface.co/TheBloke/orca_mini_v2_13b-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for Pankaj Mathur's Orca Mini v2 13B.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; These models were quantised using hardware kindly provided by Latitude.sh.",Natural Language Processing
bk-sdm-base,Text-to-Image,Diffusers,,creativeml-openrail-m,https://arxiv.org/pdf/2305.15798.pdf,7,,163,0.013230782,1,https://huggingface.co/nota-ai/bk-sdm-base,"Block-removed Knowledge-distilled Stable Diffusion Model (BK-SDM) is an architecturally compressed SDM for efficient general-purpose text-to-image synthesis. This model is bulit with (i) removing several residual and attention blocks from the U-Net of Stable Diffusion v1.4 and (ii) distillation pretraining on only 0.22M LAION pairs (fewer than 0.1% of the full training set). Despite being trained with very limited resources, our compact model can imitate the original SDM by benefiting from transferred knowledge.; An inference code with the default PNDM scheduler and 50 denoising steps is as follows.; The following code is also runnable, because we compressed the U-Net of Stable Diffusion v1.4 while keeping the other parts (i.e., Text Encoder and Image Decoder) unchanged:; The above examples have been tested on a single NVIDIA GeForce RTX 3090 GPU with the following versions:; We removed several residual and attention blocks from the 0.86B-parameter U-Net in the 1.04B-param SDM-v1.4, and our compressed models are summarized as follows.",Multimodel
open_llama_3b_v2,Text Generation,PyTorch; Transformers,,apache-2.0,,14,tiiuae/falcon-refinedweb; bigcode/starcoderdata; togethercomputer/RedPajama-Data-1T,4157,7014.914892,1,https://huggingface.co/openlm-research/open_llama_3b_v2,"TL;DR: we are releasing our public preview of OpenLLaMA, a permissively licensed open source reproduction of Meta AI¡¯s LLaMA. We are releasing a series of 3B, 7B and 13B models trained on different data mixtures. Our model weights can serve as the drop in replacement of LLaMA in existing implementations.; In this repo, we present a permissively licensed open source reproduction of Meta AI's LLaMA large language model. We are releasing a series of 3B, 7B and 13B models trained on 1T tokens. We provide PyTorch and JAX weights of pre-trained OpenLLaMA models, as well as evaluation results and comparison against the original LLaMA models. The v2 model is better than the old v1 model trained on a different data mixture. Please see the project homepage of OpenLLaMA for more details.; We release the weights in two formats: an EasyLM format to be use with our EasyLM framework, and a PyTorch format to be used with the Hugging Face transformers library. Both our training framework EasyLM and the checkpoint weights are licensed permissively under the Apache 2.0 license.; Preview checkpoints can be directly loaded from Hugging Face Hub. Please note that it is advised to avoid using the Hugging Face fast tokenizer for now, as we¡¯ve observed that the auto-converted fast tokenizer sometimes gives incorrect tokenizations. This can be achieved by directly using the LlamaTokenizer class, or passing in the use_fast=False option for the AutoTokenizer class. See the following example for usage.; For more advanced usage, please follow the transformers LLaMA documentation.",Natural Language Processing
llama-65b-instruct,Text Generation,PyTorch; Transformers,English,,,7,sciq; metaeval/ScienceQA_text_only; GAIR/lima; Open-Orca/OpenOrca; openbookqa,12,133654.3894,,https://huggingface.co/upstage/llama-65b-instruct,,Natural Language Processing
Llama-2-7B-Chat-ggml,,,,,,7,,0,61870.09118,,https://huggingface.co/localmodels/Llama-2-7B-Chat-ggml,"From: https://huggingface.co/meta-llama/Llama-2-7b-chat-hf; Quantized using an older version of llama.cpp and compatible with llama.cpp from May 19, commit 2d5db48.; Quantization methods compatible with latest llama.cpp from June 6, commit 2d43387.; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
Llama-2-13b-hf,Text Generation,PyTorch; Safetensors; Transformers,English,,,7,,2103,79976.22835,,https://huggingface.co/NousResearch/Llama-2-13b-hf,"Llama 2 is a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. This is the repository for the 13B pretrained model, converted for the Hugging Face Transformers format. Links to other models can be found in the index at the bottom.; Note: Use of this model is governed by the Meta license. In order to download the model weights and tokenizer, please visit the website and accept our License before requesting access here.; Meta developed and publicly released the Llama 2 family of large language models (LLMs), a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. Our fine-tuned LLMs, called Llama-2-Chat, are optimized for dialogue use cases. Llama-2-Chat models outperform open-source chat models on most benchmarks we tested, and in our human evaluations for helpfulness and safety, are on par with some popular closed-source models like ChatGPT and PaLM.; Model Developers Meta; Variations Llama 2 comes in a range of parameter sizes ¡ª 7B, 13B, and 70B ¡ª as well as pretrained and fine-tuned variations.",Natural Language Processing
LLaMA-2-70B-GPTQ-transformers4.32.0.dev0,Text Generation,Safetensors; Transformers; PyTorch,English,other,,7,,166,36147.7669,,https://huggingface.co/Panchovix/LLaMA-2-70B-GPTQ-transformers4.32.0.dev0,"These files are GPTQ model files for Meta's Llama 2 70B but with new FP16 files, made with the last transformers version. (transformers-4.32.0.dev0); GQA Works with exllama, but not GPTQ for LLaMA/AutoGPTQ.; The model was quantized with GPTQ-for-LLaMA, without group size to reduce VRAM usage, with true sequential and act order true, to not lose a lot of perplexity.; TBD; Exllama works 2x24 VRAM GPUs and it is the recommended way to use it now. It even can do 16K! context with high alpha values and NTK Alpha.",Natural Language Processing
llama-2-13B-German-Assistant-v2-GGML,,Transformers,English; German,other,,7,flozi00/conversations,2,119316.5044,,https://huggingface.co/TheBloke/llama-2-13B-German-Assistant-v2-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for flozi00's Llama 2 13B German Assistant v2.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; Many thanks to William Beauchamp from Chai for providing the hardware used to make and upload these files!",
llama-2-70b-Guanaco-QLoRA-GPTQ,Text Classification,Transformers,English,other,,7,,96,37583.15414,,https://huggingface.co/TheBloke/llama-2-70b-Guanaco-QLoRA-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for Mikael110's Llama2 70b Guanaco QLoRA.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; Multiple quantisation parameters are provided, to allow you to choose the best one for your hardware and requirements.",Natural Language Processing
opus-mt-zh-en,Translation,PyTorch; TensorFlow; Rust; Transformers,Chinese; English,cc-by-4.0,,235,,364263,1206.200768,30,https://huggingface.co/Helsinki-NLP/opus-mt-zh-en,"This model can be used for translation and text-to-text generation.; CONTENT WARNING: Readers should be aware this section contains content that is disturbing, offensive, and can propagate historical and current stereotypes.; Significant research has explored bias and fairness issues with language models (see, e.g., Sheng et al. (2021) and Bender et al. (2021)).; Further details about the dataset for this model can be found in the OPUS readme: zho-eng; pre-processing: normalization + SentencePiece (spm32k,spm32k)",Natural Language Processing
finbert,Text Classification,PyTorch; TensorFlow; JAX; Transformers,English,,https://arxiv.org/pdf/1908.10063.pdf,272,,1138607,1314.229451,42,https://huggingface.co/ProsusAI/finbert,"FinBERT is a pre-trained NLP model to analyze sentiment of financial text. It is built by further training the BERT language model in the finance domain, using a large financial corpus and thereby fine-tuning it for financial sentiment classification. Financial PhraseBank by Malo et al. (2014) is used for fine-tuning. For more details, please see the paper FinBERT: Financial Sentiment Analysis with Pre-trained Language Models and our related blog post on Medium.; The model will give softmax outputs for three labels: positive, negative or neutral.; About Prosus; Prosus is a global consumer internet group and one of the largest technology investors in the world. Operating and investing globally in markets with long-term growth potential, Prosus builds leading consumer internet companies that empower people and enrich communities. For more information, please visit www.prosus.com.; Contact information",Natural Language Processing
vilt-b32-finetuned-vqa,Visual Question Answering,PyTorch; Transformers,,apache-2.0,https://arxiv.org/pdf/2102.03334.pdf,193,,505022,470.8183564,111,https://huggingface.co/dandelin/vilt-b32-finetuned-vqa,"Vision-and-Language Transformer (ViLT) model fine-tuned on VQAv2. It was introduced in the paper ViLT: Vision-and-Language Transformer
Without Convolution or Region Supervision by Kim et al. and first released in this repository. ; Disclaimer: The team releasing ViLT did not write a model card for this model so this model card has been written by the Hugging Face team.; You can use the raw model for visual question answering. ; Here is how to use this model in PyTorch:; (to do)",Multimodel
bert-base-NER,Token Classification,PyTorch; TensorFlow; JAX; Safetensors; Transformers,English,mit,https://arxiv.org/pdf/1810.04805.pdf,204,conll2003,1317035,1731.214085,28,https://huggingface.co/dslim/bert-base-NER,"bert-base-NER is a fine-tuned BERT model that is ready to use for Named Entity Recognition and achieves state-of-the-art performance for the NER task. It has been trained to recognize four types of entities: location (LOC), organizations (ORG), person (PER) and Miscellaneous (MISC). ; Specifically, this model is a bert-base-cased model that was fine-tuned on the English version of the standard CoNLL-2003 Named Entity Recognition dataset. ; If you'd like to use a larger BERT-large model fine-tuned on the same dataset, a bert-large-NER version is also available. ; You can use this model with Transformers pipeline for NER.; This model is limited by its training dataset of entity-annotated news articles from a specific span of time. This may not generalize well for all use cases in different domains. Furthermore, the model occassionally tags subword tokens as entities and post-processing of results may be necessary to handle those cases. ",Natural Language Processing
fastspeech2-en-ljspeech,Text-to-Speech,Fairseq,English,,https://arxiv.org/pdf/2006.04558.pdf; https://arxiv.org/pdf/2109.06912.pdf,185,ljspeech,5383,550.8065611,75,https://huggingface.co/facebook/fastspeech2-en-ljspeech,FastSpeech 2 text-to-speech model from fairseq S^2 (paper/code):; See also fairseq S^2 example.,Audio
flan-t5-large,Text2Text Generation,PyTorch; TensorFlow; JAX; Safetensors; Transformers,5 languages,apache-2.0,https://arxiv.org/pdf/2210.11416.pdf; https://arxiv.org/pdf/1910.09700.pdf,202,svakulenk0/qrecc; taskmaster2; djaym7/wiki_dialog; deepmind/code_contests; lambada; gsm8k; aqua_rat; esnli; quasc; qed,1122649,13100.17078,141,https://huggingface.co/google/flan-t5-large,"; If you already know T5, FLAN-T5 is just better at everything. For the same number of parameters, these models have been fine-tuned on more than 1000 additional tasks covering also more languages. 
As mentioned in the first few lines of the abstract : ;  Flan-PaLM 540B achieves state-of-the-art performance on several benchmarks, such as 75.2% on five-shot MMLU. We also publicly release Flan-T5 checkpoints,1 which achieve strong few-shot performance even compared to much larger models, such as PaLM 62B. Overall, instruction finetuning is a general method for improving the performance and usability of pretrained language models.; Disclaimer: Content from this model card has been written by the Hugging Face team, and parts of it were copy pasted from the T5 model card.; Find below some example scripts on how to use the model in transformers:",Natural Language Processing
f222,,Flair,Avaric,openrail,,164,glue,0,8744.961557,,https://huggingface.co/acheong08/f222,"Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
stable-diffusion-x4-upscaler,,Diffusers,,openrail++,https://arxiv.org/pdf/2112.10752.pdf; https://arxiv.org/pdf/2202.00512.pdf; https://arxiv.org/pdf/1910.09700.pdf,449,,127591,7229.454213,28,https://huggingface.co/stabilityai/stable-diffusion-x4-upscaler,"This model card focuses on the model associated with the Stable Diffusion Upscaler, available here.
This model is trained for 1.25M steps on a 10M subset of LAION containing images >2048x2048. The model was trained on crops of size 512x512 and is a text-guided latent upscaling diffusion model.
In addition to the textual input, it receives a noise_level as an input parameter, which can be used to add noise to the low-resolution input according to a predefined diffusion schedule. ; ; Developed by: Robin Rombach, Patrick Esser; Model type: Diffusion-based text-to-image generation model; Language(s): English",
speecht5_tts,Text-to-Speech,PyTorch; Transformers,,mit,https://arxiv.org/pdf/2110.07205.pdf; https://arxiv.org/pdf/1910.09700.pdf,181,libritts,36978,585.2463447,172,https://huggingface.co/microsoft/speecht5_tts,"SpeechT5 model fine-tuned for speech synthesis (text-to-speech) on LibriTTS.; This model was introduced in SpeechT5: Unified-Modal Encoder-Decoder Pre-Training for Spoken Language Processing by Junyi Ao, Rui Wang, Long Zhou, Chengyi Wang, Shuo Ren, Yu Wu, Shujie Liu, Tom Ko, Qing Li, Yu Zhang, Zhihua Wei, Yao Qian, Jinyu Li, Furu Wei.; SpeechT5 was first released in this repository, original weights. The license used is MIT.; Motivated by the success of T5 (Text-To-Text Transfer Transformer) in pre-trained natural language processing models, we propose a unified-modal SpeechT5 framework that explores the encoder-decoder pre-training for self-supervised speech/text representation learning. The SpeechT5 framework consists of a shared encoder-decoder network and six modal-specific (speech/text) pre/post-nets. After preprocessing the input speech/text through the pre-nets, the shared encoder-decoder network models the sequence-to-sequence transformation, and then the post-nets generate the output in the speech/text modality based on the output of the decoder.; Leveraging large-scale unlabeled speech and text data, we pre-train SpeechT5 to learn a unified-modal representation, hoping to improve the modeling capability for both speech and text. To align the textual and speech information into this unified semantic space, we propose a cross-modal vector quantization approach that randomly mixes up speech/text states with latent units as the interface between encoder and decoder.",Audio
loliDiffusion,Text-to-Image,Diffusers,,creativeml-openrail-m,,150,,0,117948.1855,3,https://huggingface.co/JosefJilek/loliDiffusion,"The goal of this project is to improve generation of loli characters since most of other models are not good at it. Support me: https://www.buymeacoffee.com/jilek772003 New models are available on https://pixai.art/ Model list: ; It is recommende to use standard resolution such as 512x768 and EasyNegative embedding with these models. Positive prompt example: 1girl, solo, loli, masterpiece Negative prompt example: EasyNegative, lowres, bad anatomy, bad hands, text, error, missing fingers, extra digit, fewer digits, cropped, worst quality, low quality, normal quality, jpeg artifacts, signature, watermark, username, blurry, multiple panels, aged up, old; Reddit: https://www.reddit.com/r/loliDiffusion Discord: https://discord.gg/mZ3eGeNX7S; v0.4.3 Fixed color issue General improvements v0.5.3 Integrated VAEFile size reduced CLIP force reset fix v0.6.3 Style improvements Added PastelMix and Counterfeit style v0.7.x Style impovements Composition improvements v0.8.x Major improvement on higher resolutions Style improvements Flexibility and responsivity Added support for Night Sky YOZORA model v0.9.x Different approach at merging, you might find v0.8.x versions better Changes at supported models v2.1.X EXPERIMENTAL RELEASE Stable Diffusion 2.1-768 based Default negative prompt: (low quality, worst quality:1.4), (bad anatomy), extra finger, fewer digits, jpeg artifacts For positive prompt it's good to include tags: anime, (masterpiece, best quality) alternatively you may achieve positive response with: (exceptional, best aesthetic, new, newest, best quality, masterpiece, extremely detailed, anime, waifu:1.2) Though it's Loli Diffusion model it's quite general purpose The ability to generate realistic images as Waifu Diffusion can was intentionally decreased This model performs better at higher resolutions like 768*X or 896*X v0.10.x Different approach at merging Better hands Better style inheritance Some changes in supported models ; ",Multimodel
alpaca-lora-7b,,,,mit,,399,yahma/alpaca-cleaned,0,67.2026107,43,https://huggingface.co/tloen/alpaca-lora-7b,"This repo contains a low-rank adapter for LLaMA-7b
fit on the Stanford Alpaca dataset.; This version of the weights was trained with the following hyperparameters:; That is:; Instructions for running it can be found at https://github.com/tloen/alpaca-lora.; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
alpaca-native-7B-ggml,,,,unknown,,52,,0,36669.44176,,https://huggingface.co/Pi3141/alpaca-native-7B-ggml,"Mirrored version of https://huggingface.co/Sosaka/Alpaca-native-4bit-ggml in case that one gets taken down
All credits go to Sosaka and chavinlo for creating the modelhttps://huggingface.co/chavinlo/alpaca-native; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
doll-likeness-series,,,,creativeml-openrail-m,,322,,0,1359.007158,,https://huggingface.co/Kanbara/doll-likeness-series,"The 'Doll-Series' is a set of LORA focused on realistic Asian faces, with incredible levels of beauty and aesthetics.; My Pixiv: https://www.pixiv.net/en/users/92373922; My Twitter: https://twitter.com/KbrLoras; License; Disclaimer",
llama-65b,Text Generation,PyTorch; Safetensors; Transformers,,other,,55,,57878,267307.4325,5,https://huggingface.co/huggyllama/llama-65b,"This contains the weights for the LLaMA-65b model. This model is under a non-commercial license (see the LICENSE file).
You should only use this repository if you have been granted access to the model by filling out this form but either lost your copy of the weights or got some trouble converting them to the Transformers format.",Natural Language Processing
ShiratakiMix,Text-to-Image,Diffusers,Japanese,creativeml-openrail-m,,107,,0,9277.457041,1,https://huggingface.co/Vsukiyaki/ShiratakiMix,"=> ShiratakiMix-add-VAE.safetensors; Negative:; This model is open access and available to all, with a CreativeML OpenRAIL-M license further specifying rights and usage. The CreativeML OpenRAIL License specifies:; You can't use the model to deliberately produce nor share illegal or harmful outputs or content; The authors claims no rights on the outputs you generate, you are free to use them and are accountable for their use which must not go against the provisions set in the license",Multimodel
Guanaco,Conversational,PyTorch; Transformers,4 languages,gpl-3.0,,193,JosephusCheung/GuanacoDataset,2608,27599.44985,10,https://huggingface.co/JosephusCheung/Guanaco,"; You can run on Colab free T4 GPU now; ;  It is highly recommended to use fp16 inference for this model, as 8-bit precision may significantly affect performance. If you require a more Consumer Hardware friendly version, please use the specialized quantized, only 5+GB V-Ram required JosephusCheung/GuanacoOnConsumerHardware.;  You are encouraged to use the latest version of transformers from GitHub.",Natural Language Processing
vicuna-13B-1.1-GPTQ-4bit-128g,Conversational,Transformers,,other,,193,,20828,7436.580939,,https://huggingface.co/TheBloke/vicuna-13B-1.1-GPTQ-4bit-128g,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; This is a 4-bit GPTQ version of the Vicuna 13B 1.1 model.; It was created by merging the deltas provided in the above repo with the original Llama 13B model, using the code provided on their Github page.; It was then quantized to 4bit using GPTQ-for-LLaMa.",Natural Language Processing
LLaVA-13b-delta-v0,Text Generation,PyTorch; Transformers,,apache-2.0,,162,,393,26675.98551,14,https://huggingface.co/liuhaotian/LLaVA-13b-delta-v0,"NOTE: This ""delta model"" cannot be used directly.Users have to apply it on top of the original LLaMA weights to get actual LLaVA weights.See https://github.com/haotian-liu/LLaVA#llava-weights for instructions.; Model type:
LLaVA is an open-source chatbot trained by fine-tuning LLaMA/Vicuna on GPT-generated multimodal instruction-following data.
It is an auto-regressive language model, based on the transformer architecture.; Model date:
LLaVA was trained in April 2023.; Paper or resources for more information:
https://llava-vl.github.io/; License:
Apache License 2.0",Natural Language Processing
mGPT-13B,Text Generation,PyTorch; Transformers,English; Russian,mit,,6,,11,55979.76898,,https://huggingface.co/ai-forever/mGPT-13B,"Multilingual language model. This model was trained on the 61 languages from 25 language families (see the list below).; Model was pretrained on a 600Gb of texts, mostly from MC4 and Wikipedia. Training data was deduplicated, the text deduplication includes 64-bit hashing of each text in the corpus for keeping texts with a unique hash. We also filter the documents based on their text compression rate using zlib4. The most strongly and weakly compressing deduplicated texts are discarded.; Here is the table with number of tokens for each language in the pretraining corpus on a logarithmic scale:; ; Afrikaans (af), Arabic (ar), Armenian (hy), Azerbaijani (az), Basque (eu), Bashkir (ba), Belarusian (be), Bengali (bn), Bulgarian (bg), Burmese (my), Buryat (bxr), Chuvash (cv), Danish (da), English (en), Estonian (et), Finnish (fi), French (fr), Georgian (ka), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Indonesian (id), Italian (it), Japanese (ja), Javanese (jv), Kalmyk (xal), Kazakh (kk), Korean (ko), Kyrgyz (ky), Latvian (lv), Lithuanian (lt), Malay (ms), Malayalam (ml), Marathi (mr), Mongolian (mn), Ossetian (os), Persian (fa), Polish (pl), Portuguese (pt), Romanian (ro), Russian (ru), Spanish (es), Swedish (sv), Swahili (sw), Tatar (tt), Telugu (te), Thai (th), Turkish (tr), Turkmen (tk), Tuvan (tyv), Ukrainian (uk), Uzbek (uz), Vietnamese (vi), Yakut (sax), Yoruba (yo)",Natural Language Processing
mpt-7b-storywriter,Text Generation,PyTorch; Transformers,,apache-2.0,https://arxiv.org/pdf/2108.12409.pdf; https://arxiv.org/pdf/2205.14135.pdf; https://arxiv.org/pdf/2302.06675.pdf,650,the_pile_books3,12787,13621.45908,8,https://huggingface.co/mosaicml/mpt-7b-storywriter,"MPT-7B-StoryWriter-65k+ is a model designed to read and write fictional stories with super long context lengths.
It was built by finetuning MPT-7B with a context length of 65k tokens on a filtered fiction subset of the books3 dataset.
At inference time, thanks to ALiBi, MPT-7B-StoryWriter-65k+ can extrapolate even beyond 65k tokens.
We demonstrate generations as long as 84k tokens on a single node of 8 A100-80GB GPUs in our blogpost.; This model was trained by MosaicML and follows a modified decoder-only transformer architecture.; May 5, 2023; Apache 2.0; Note: This model requires that trust_remote_code=True be passed to the from_pretrained method. This is because we use a custom model architecture that is not yet part of the transformers package.",Natural Language Processing
starcoderplus,Text Generation,PyTorch; Transformers,,,https://arxiv.org/pdf/1911.02150.pdf; https://arxiv.org/pdf/2205.14135.pdf; https://arxiv.org/pdf/2207.14255.pdf; https://arxiv.org/pdf/2305.06161.pdf,146,bigcode/the-stack-dedup; tiiuae/falcon-refinedweb,9158,0,6,https://huggingface.co/bigcode/starcoderplus,"This repository is publicly accessible, but
			you have to accept the conditions to access its files and content.
		; Please read the BigCode OpenRAIL-M license agreement before accepting it.
  ; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		; Play with the instruction-tuned StarCoderPlus at StarChat-Beta.; StarCoderPlus is a fine-tuned version of StarCoderBase on 600B tokens from the English web dataset RedefinedWeb 
combined with StarCoderData from The Stack (v1.2) and a Wikipedia dataset.
It's a 15.5B parameter Language Model trained on English and 80+ programming languages. The model uses Multi Query Attention,
a context window of 8192 tokens,  and was trained using the Fill-in-the-Middle objective on 1.6 trillion tokens. ",Natural Language Processing
guanaco-33b-merged,Text Generation,PyTorch; Transformers,,,,162,,6360,66634.06027,17,https://huggingface.co/timdettmers/guanaco-33b-merged,No model card; New: Create and edit this model card directly on the website!,Natural Language Processing
BracingEvoMix,Text-to-Image,Diffusers,Japanese,creativeml-openrail-m,,100,,0,6543.396113,,https://huggingface.co/sazyou-roukaku/BracingEvoMix,"License:CreativeML Open RAIL-M
Additional Copyright: sazyou_roukaku (TwitterID @sazyou_roukaku) as of May 31, 2023; ¤³¤Î¥â¥Ç¥ë¤Ï¡ºCreativeML Open RAIL-M¡»¤ÇLicense¤½¤Î¤â¤Î¤Ëä¸ü¤Ï¤¢¤ê¤Þ¤»¤ó¡£
¤·¤«¤·×·¼ÓÖø×÷Õß¤È¤·¤Ææi³ÇÀÉ¹ù¤ÎÃûÇ°¤¬×·¼Ó¤µ¤ì¤Æ¤¤¤Þ¤¹¡£
¤·¤«¤·×·¼ÓÖø×÷Õß¤È¤·¤Æ×ô³ÇÀÉ»­¤ÎÃûÇ°¤¬×·¼Ó¤µ¤ì¤Æ¤¤¤Þ¤¹¡£(6/10 Twitter¥Í©`¥àä¸ü¤Ë°é¤¤¡¢±íÓä¸ü¡£LicenseÄÚ¤Ïsazyou_roukaku¤Îéä¸ü¤Ê¤·)
¤Ê¤ª¡ºCreativeML Open RAIL-M¡»¤ËÓÝd¤µ¤ì¤Æ¤¤¤ëÍ¨¤ê¡¢
±¾¥â¥Ç¥ë¤òÊ¹ÓÃ¤·¤Æ¤ÎÉú³ÉÎï¤Ëév¤·¤Æ¤ÏLicense¤ÎÊ¹ÓÃÖÆÏÞA¤ÎÊÂÀý¤ò³ý¤­¡¢µ±·½¤ÏÒ»ÇÐévÓëÖÂ¤·¤Þ¤»¤ó¡£
·¸×ïÄ¿µÄÀûÓÃ¤äÒ½¯ÓÃ»­Ïñ¤Ê¤ÉÌØ¶¨éTµÄ¤ÊÓÃÍ¾¤Ç¤ÎÀûÓÃ¤ÏÊ¹ÓÃÖÆÏÞA¤Ç½ûÖ¹¤µ¤ì¤Æ¤¤¤Þ¤¹¡£
±Ø¤º´_ÕJ¤·¤´ÀûÓÃ¤¯¤À¤µ¤¤¡£
¤Þ¤¿µ±·½¤ÏÒ»ÇÐØÈÎ¤ò³Ö¤Á¤Þ¤»¤ó¡£ÃâØ¤µ¤ì¤Æ¤¤¤ë¤³¤È¤ò¤´ÁË³Ð¤ÎÉÏ¡¢¤´Ê¹ÓÃ¤¯¤À¤µ¤¤¡£; ¥Þ©`¥¸ÀûÓÃ¥â¥Ç¥ëÒ»ÓE ; [BracingEvoMix]OpenBra¦ÂOpenBra?BanKai @PleaseBanKai ; dreamshaper_5Bakedvaedreamshaper_6BakedVae(https://civitai.com/models/4384) ?Lykonepicrealism_newAgeepicrealism_newEra(https://civitai.com/models/25694) ?epinikiondiamondCoalMix_diamondCoalv2(https://civitai.com/models/41415) ?EnthusiastAIsxd_v10(https://civitai.com/models/1169) ?izuekEvt_V4_e04_ema(https://huggingface.co/haor/Evt_V4-preview) ?haor  ",Multimodel
ChatLaw-Text2Vec,Sentence Similarity,PyTorch; Transformers,Chinese,apache-2.0,https://arxiv.org/pdf/2306.16092.pdf,53,,440,409.5447923,3,https://huggingface.co/chestnutlzj/ChatLaw-Text2Vec,±¾Ä£ÐÍÓÃÓÚ·¨ÂÉÏà¹ØÎÄ±¾µÄÏàËÆ¶È¼ÆËã¡£¿ÉÓÃÓÚÖÆ×÷ÏòÁ¿Êý¾Ý¿âµÈ¡£; ±¾Ä£ÐÍÀûÓÃ936727ÌõÈ«¹ú°¸Àý¿âÊý¾Ý¼¯ÑµÁ·£¬Êý¾Ý¼¯Ñù±¾ÈçÏÂ£º; ÇëÎÊ·òÆÞÖ®¼ä¹²Í¬²Æ²úÈçºÎ¶¨Òå£¿; ÇëÎÊÃñ¼ä½è´ûµÄÀûÏ¢ÓÐÊ²Ã´ÏÞÖÆ; »¶Ó­ÒýÓÃÎÒÃÇ:,Natural Language Processing
ChatLaw-13B,,,English; Chinese,gpl-3.0,https://arxiv.org/pdf/2306.16092.pdf,30,,0,251.5870103,2,https://huggingface.co/JessyTsu1/ChatLaw-13B,´Ë°æ±¾ÎªÑ§Êõdemo°æ£¬»ùÓÚ½ª×ÓÑÀZiya-LLaMA-13B-v1ÑµÁ·¶øÀ´(LLaMAÈ¨ÖØµÄÐí¿ÉÖ¤ÏÞÖÆ£¬ÎÒÃÇÎÞ·¨Ö±½Ó·¢²¼ÍêÕûµÄÄ£ÐÍÈ¨ÖØ£¬ÓÃ»§Ðè×ÔÐÐºÏ²¢); ChatLaw-13B£¬´Ë°æ±¾ÎªÑ§Êõdemo°æ£¬»ùÓÚ½ª×ÓÑÀZiya-LLaMA-13B-v1ÑµÁ·¶øÀ´£¬ÖÐÎÄ¸÷Ïî±íÏÖºÜºÃ£¬µ«ÊÇÂß¼­¸´ÔÓµÄ·¨ÂÉÎÊ´ðÐ§¹û²»¼Ñ£¬ÐèÒªÓÃ¸ü´ó²ÎÊýµÄÄ£ÐÍÀ´½â¾ö¡£; ChatLaw-33B£¬´Ë°æ±¾ÎªÑ§Êõdemo°æ£¬»ùÓÚAnima-33BÑµÁ·¶øÀ´£¬Âß¼­ÍÆÀíÄÜÁ¦´ó·ùÌáÉý£¬µ«ÊÇÒòÎªAnimaµÄÖÐÎÄÓïÁÏ¹ýÉÙ£¬µ¼ÖÂÎÊ´ðÊ±³£»á³öÏÖÓ¢ÎÄÊý¾Ý¡£; ChatLaw-Text2Vec£¬Ê¹ÓÃ93wÌõÅÐ¾ö°¸Àý×ö³ÉµÄÊý¾Ý¼¯»ùÓÚBERTÑµÁ·ÁËÒ»¸öÏàËÆ¶ÈÆ¥ÅäÄ£ÐÍ£¬¿É½«ÓÃ»§ÌáÎÊÐÅÏ¢ºÍ¶ÔÓ¦µÄ·¨ÌõÏàÆ¥Åä£¬ÀýÈç£º; ¡°ÇëÎÊÈç¹û½è¿îÃ»»¹ÔõÃ´°ì¡£¡±,
orca_mini_3b,Text Generation,PyTorch; Transformers,English,cc-by-nc-sa-4.0,https://arxiv.org/pdf/2306.02707.pdf,99,psmathur/alpaca_orca; psmathur/dolly-v2_orca; psmathur/WizardLM_Orca,6345,14039.61185,5,https://huggingface.co/psmathur/orca_mini_3b,"Use orca-mini-3b on Free Google Colab with T4 GPU :); An OpenLLaMa-3B model model trained on explain tuned datasets, created using Instructions and Input from WizardLM, Alpaca & Dolly-V2 datasets and applying Orca Research Paper dataset construction approaches.; We build explain tuned WizardLM dataset ~70K, Alpaca dataset ~52K  & Dolly-V2 dataset ~15K created using approaches from Orca Research Paper.; We leverage all of the 15 system instructions provided in Orca Research Paper. to generate custom datasets, in contrast to vanilla instruction tuning approaches used by original datasets.; This helps student model aka this model to learn thought process from teacher model, which is ChatGPT (gpt-3.5-turbo-0301 version).",Natural Language Processing
h2ogpt-gm-oasst1-en-2048-falcon-40b-v2,Text Generation,PyTorch; Transformers,English,apache-2.0,,13,OpenAssistant/oasst1,15715,85660.4322,6,https://huggingface.co/h2oai/h2ogpt-gm-oasst1-en-2048-falcon-40b-v2,"This model was trained using H2O LLM Studio.; To use the model with the transformers library on a machine with GPUs, first make sure you have the transformers, accelerate and torch libraries installed.; You can print a sample prompt after the preprocessing step to see how it is feed to the tokenizer:; Alternatively, you can download h2oai_pipeline.py, store it alongside your notebook, and construct the pipeline yourself from the loaded model and tokenizer:; You may also construct the pipeline from the loaded model and tokenizer yourself and consider the preprocessing steps:",Natural Language Processing
Euclid-By_Consistent_Factor,Text-to-Image,,English,creativeml-openrail-m,,9,,0,58827.43399,,https://huggingface.co/ConsistentFactor/Euclid-By_Consistent_Factor,"One thing I'm happy to celebrate about my model as that it is a lot more racially friendly and will more often than not, produce people who are not Caucasian, in fact around 60%-70% of the time it will produce people of colour in my testing at least. If you find it's not producing Caucasian people, just add either white or Caucasian to the prompt.
It's also very good at aging people so adding an age can make a big difference.; The only thing V5 doesn't do well most of the time are eyes, if you don't get decent eyes try adding perfect eyes or round eyes to the prompt and increase the weight till you are happy. V6 and V6Ultra has fixed this problem.; Prompt: (subject), elegant, alluring, attractive, amazing photograph, masterpiece, best quality, 8K, high quality, photorealistic, realism, art photography, Nikon D850, 16k, sharp focus, masterpiece, breathtaking, atmospheric perspective, diffusion, pore correlation, skin imperfections, DSLR, 80mm Sigma f2, depth of field, intricate natural lighting,; Negative prompt: (unrealistic, render, 3d,cgi,cg,2.5d), (bad-hands-5:1.05), easynegative, [( NG_DeepNegative_V1_64T :0.9) :0.1], ng_deepnegative_v1_75t, worst quality, low quality, normal quality, child, (painting, drawing, sketch, cartoon, anime, render, 3d), blurry, deformed, disfigured, morbid, mutated, bad anatomy, bad art, (bad teeth, weird teeth, broken teeth), (worst quality, low quality, logo, text, watermark, username), incomplete, bad_prompt_version2; Recommend for V5: DPM++ 2M SDE Karras, Steps: 20-45, Hires fix 0.15 - 0.2, CFG 6 - 8.",Multimodel
orca_mini_v2_7b,Text Generation,PyTorch; Transformers,English,cc-by-nc-sa-4.0,https://arxiv.org/pdf/2306.02707.pdf; https://arxiv.org/pdf/2304.12244.pdf,30,psmathur/orca_minis_uncensored_dataset,766,27607.5667,1,https://huggingface.co/psmathur/orca_mini_v2_7b,"An Uncensored LLaMA-7b model in collaboration with Eric Hartford. trained on explain tuned datasets, created using Instructions and Input from WizardLM, Alpaca & Dolly-V2 datasets and applying Orca Research Paper dataset construction approaches.; Please note this model has better code generation capabilities compare to our original orca_mini_7b which was trained on base OpenLLaMA-7b model and which has the empty spaces issues & found not good for code generation.; P.S. I am #opentowork, if you can help, please reach out to me at www.linkedin.com/in/pankajam; I evaluated orca_mini_v2_7b on a wide range of tasks using Language Model Evaluation Harness from EleutherAI. ; Here are the results on metrics used by HuggingFaceH4 Open LLM Leaderboard",Natural Language Processing
internlm-7b,Feature Extraction,PyTorch; Transformers,,,,50,,5512,15003.36422,,https://huggingface.co/internlm/internlm-7b,"; ?Reporting Issues; InternLM has open-sourced a 7 billion parameter base model tailored for practical scenarios. The model has the following characteristics:; We conducted a comprehensive evaluation of InternLM using the open-source evaluation tool OpenCompass. The evaluation covered five dimensions of capabilities: disciplinary competence, language competence, knowledge competence, inference competence, and comprehension competence. Here are some of the evaluation results, and you can visit the OpenCompass leaderboard for more evaluation results.; Limitations: Although we have made efforts to ensure the safety of the model during the training process and to encourage the model to generate text that complies with ethical and legal requirements, the model may still produce unexpected outputs due to its size and probabilistic generation paradigm. For example, the generated responses may contain biases, discrimination, or other harmful content. Please do not propagate such content. We are not responsible for any consequences resulting from the dissemination of harmful information.",Multimodel
internlm-chat-7b,Feature Extraction,PyTorch; Transformers,,,,43,,8872,15003.36568,3,https://huggingface.co/internlm/internlm-chat-7b,"; ?Reporting Issues; InternLM has open-sourced a 7 billion parameter base model and a chat model tailored for practical scenarios. The model has the following characteristics:; We conducted a comprehensive evaluation of InternLM using the open-source evaluation tool OpenCompass. The evaluation covered five dimensions of capabilities: disciplinary competence, language competence, knowledge competence, inference competence, and comprehension competence. Here are some of the evaluation results, and you can visit the OpenCompass leaderboard for more evaluation results.; Limitations: Although we have made efforts to ensure the safety of the model during the training process and to encourage the model to generate text that complies with ethical and legal requirements, the model may still produce unexpected outputs due to its size and probabilistic generation paradigm. For example, the generated responses may contain biases, discrimination, or other harmful content. Please do not propagate such content. We are not responsible for any consequences resulting from the dissemination of harmful information.",Multimodel
orca_mini_v2_13b,Text Generation,PyTorch; Transformers,English,cc-by-nc-sa-4.0,https://arxiv.org/pdf/2306.02707.pdf; https://arxiv.org/pdf/2304.12244.pdf,30,psmathur/orca_minis_uncensored_dataset,533,26624.59949,1,https://huggingface.co/psmathur/orca_mini_v2_13b,"An Uncensored LLaMA-13b model in collaboration with Eric Hartford. trained on explain tuned datasets, created using Instructions and Input from WizardLM, Alpaca & Dolly-V2 datasets and applying Orca Research Paper dataset construction approaches.; Please note this model has better code generation capabilities compare to our original orca_mini_13b which was trained on base OpenLLaMA-13b model and which has the empty spaces issues & found not good for code generation.; P.S. I am #opentowork, if you can help, please reach out to me at www.linkedin.com/in/pankajam; I evaluated orca_mini_v2_13b on a wide range of tasks using Language Model Evaluation Harness from EleutherAI. ; Here are the results on metrics used by HuggingFaceH4 Open LLM Leaderboard",Natural Language Processing
controlnet-qr-pattern-v2,,Diffusers,,creativeml-openrail-m,,22,Nacholmo/controlnet-test-darkest-color; yuvalkirstain/pexel_images_lots_with_generated_captions,245,1484.803604,,https://huggingface.co/Nacholmo/controlnet-qr-pattern-v2,"Conditioning only 25% of the pixels closest to black and the 25% closest to white.; In the automatic1111 folder I added compatible weights, and various strength levels.; Many thanks to antfu for their ideas, tools and contributions
https://antfu.me; ; ",
Pygmalion-7B-SuperHOT-8K-GPTQ,Text Generation,Transformers,,other,,7,,259,4098.38621,,https://huggingface.co/TheBloke/Pygmalion-7B-SuperHOT-8K-GPTQ,Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ 4bit model files for TehVenom's merge of Pygmalion 7B merged with Kaio Ken's SuperHOT 8K.; It is the result of quantising to 4bit using GPTQ-for-LLaMa.; This is an experimental new GPTQ which offers up to 8K context size,Natural Language Processing
WizardLM-13B-V1-1-SuperHOT-8K-GPTQ,Text Generation,Transformers,,other,https://arxiv.org/pdf/2304.12244.pdf,41,,1648,7631.184214,,https://huggingface.co/TheBloke/WizardLM-13B-V1-1-SuperHOT-8K-GPTQ,Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ 4bit model files for WizardLM's WizardLM 13B V1.1 merged with Kaio Ken's SuperHOT 8K.; It is the result of quantising to 4bit using GPTQ-for-LLaMa.; This is an experimental new GPTQ which offers up to 8K context size,Natural Language Processing
orca_mini_v2_13b-GGML,Text Generation,Transformers,English,cc-by-nc-sa-4.0,https://arxiv.org/pdf/2306.02707.pdf; https://arxiv.org/pdf/2304.12244.pdf,21,psmathur/orca_minis_uncensored_dataset,0,119316.4997,,https://huggingface.co/TheBloke/orca_mini_v2_13b-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Pankaj Mathur's Orca Mini v2 13B.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; These are guaranteed to be compatible with any UIs, tools and libraries released since late May. They may be phased out soon, as they are largely superseded by the new k-quant methods.",Natural Language Processing
bk-sdm-small,Text-to-Image,Diffusers,,creativeml-openrail-m,https://arxiv.org/pdf/2305.15798.pdf,6,,216,0.013230782,2,https://huggingface.co/nota-ai/bk-sdm-small,"Block-removed Knowledge-distilled Stable Diffusion Model (BK-SDM) is an architecturally compressed SDM for efficient general-purpose text-to-image synthesis. This model is bulit with (i) removing several residual and attention blocks from the U-Net of Stable Diffusion v1.4 and (ii) distillation pretraining on only 0.22M LAION pairs (fewer than 0.1% of the full training set). Despite being trained with very limited resources, our compact model can imitate the original SDM by benefiting from transferred knowledge.; An inference code with the default PNDM scheduler and 50 denoising steps is as follows.; The following code is also runnable, because we compressed the U-Net of Stable Diffusion v1.4 while keeping the other parts (i.e., Text Encoder and Image Decoder) unchanged:; The above examples have been tested on a single NVIDIA GeForce RTX 3090 GPU with the following versions:; We removed several residual and attention blocks from the 0.86B-parameter U-Net in the 1.04B-param SDM-v1.4, and our compressed models are summarized as follows.",Multimodel
NavelOrangeMix,,,,,,6,,0,0.001493912,,https://huggingface.co/dorioku/NavelOrangeMix,"Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
bk-sdm-tiny,Text-to-Image,Diffusers,,creativeml-openrail-m,https://arxiv.org/pdf/2305.15798.pdf,6,,128,0.013230782,1,https://huggingface.co/nota-ai/bk-sdm-tiny,"Block-removed Knowledge-distilled Stable Diffusion Model (BK-SDM) is an architecturally compressed SDM for efficient general-purpose text-to-image synthesis. This model is bulit with (i) removing several residual and attention blocks from the U-Net of Stable Diffusion v1.4 and (ii) distillation pretraining on only 0.22M LAION pairs (fewer than 0.1% of the full training set). Despite being trained with very limited resources, our compact model can imitate the original SDM by benefiting from transferred knowledge.; An inference code with the default PNDM scheduler and 50 denoising steps is as follows.; The following code is also runnable, because we compressed the U-Net of Stable Diffusion v1.4 while keeping the other parts (i.e., Text Encoder and Image Decoder) unchanged:; The above examples have been tested on a single NVIDIA GeForce RTX 3090 GPU with the following versions:; We removed several residual and attention blocks from the 0.86B-parameter U-Net in the 1.04B-param SDM-v1.4, and our compressed models are summarized as follows.",Multimodel
petrichor-SDXL-Finetuned-Fp16,Text-to-Image,,English,other,,6,,0,0,,https://huggingface.co/thehive/petrichor-SDXL-Finetuned-Fp16,"This repository is publicly accessible, but
			you have to accept the conditions to access its files and content.
		; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		;   TO BE ADDED; 





; Unable to determine this model¡¯s library. Check the
								docs 
.
							",Multimodel
Ziya-Writing-LLaMa-13B-v1,Text Generation,PyTorch; Transformers,Chinese; English,gpl-3.0,https://arxiv.org/pdf/2210.08590.pdf,6,,11,53627.50102,,https://huggingface.co/IDEA-CCNL/Ziya-Writing-LLaMa-13B-v1,"½ª×ÓÑÀÐ´×÷´óÄ£ÐÍV1ÊÇ»ùÓÚLLaMaµÄ130ÒÚ²ÎÊýµÄÖ¸ÁîÎ¢µ÷Ä£ÐÍ£¬ÔÚÐ´×÷ÈÎÎñÉÏ½øÐÐÁËÄÜÁ¦ÔöÇ¿£¬ÊÇ×¨×¢ÓÚÐ´×÷µÄ´óÄ£ÐÍ¡£½ª×ÓÑÀÐ´×÷Ä£ÐÍ¿ÉÒÔÍê³É¹«ÎÄ±¨¸æ¡¢½²¸åÊéÐÅ¡¢´´ÒâÎÄ°¸µÈ¶àÀàµÄÐ´×÷ÈÎÎñ¡£; Ziya-Writing-LLaMa-13B-v1 is a 13-billion parameter instruction fine-tuned model based on LLaMa, which has been enhanced for better performance in writing tasks. It is a large model that focuses on writing. Ziya-Writing-LLaMa-13B-v1 can handle several types of writing tasks, including official reports, speeches, creative copywriting, and more.; ¸ü¶àÏ¸½Ú¿ÉÒÔ²Î¿¼ÎÒÃÇµÄ¹«ÖÚºÅÎÄÕÂ£º; ½ª×ÓÑÀ´óÄ£ÐÍÏµÁÐ | Ð´×÷Ä£ÐÍziya-writing¿ªÔ´£¡¿ªÏä¼´ÓÃ£¬¿ìÀ´ÈÏÁì×¨ÊôÄãµÄÐ´×÷Ð¡ÖúÊÖ°É; ÎÒÃÇ´ÓÍøÂçÖÐÊÕ¼¯²¢ÇåÏ´ÁË´óÁ¿ÕæÊµµÄÕæÈËÐ´×÷Êý¾Ý£¬ÀûÓÃGPT-3.5Éú³É¶ÔÓ¦µÄÐ´×÷Ö¸Áî£¬²¢½øÐÐÁË¼«ÎªÑÏ¸ñµÄÈË¹¤Ð£Ñé¡£",Natural Language Processing
RWKV-4-World-7B,,PyTorch; Transformers,,apache-2.0,,6,,1,15401.00853,,https://huggingface.co/StarRing2022/RWKV-4-World-7B,"RWKV-4-WorldµÄHugface¸ñÊ½£¬ÒòÐÂ°æWorldµÄtokenizer½ÏÖ®Ç°Raven\Pile°æ±¾ÓÐ½Ï´ó±ä»¯£¬Òò¶øÐèÒª½øÐÐÐÂ°æHFÊÊÅä
ringrwkv¼æÈÝÁËÔ­Éúrwkv¿âºÍtransformersµÄrwkv¿â£¬Í¬Ê±ÐÂÌíÈëWorld°æ±¾µÄÅäÖÃ¼°´úÂë£¨Ö§³Ö1.5B£¬3B£¬7BÈ«ÏµÁÐ£©£¬²¢ÐÞ¸´ÁËÔ­HFµÄRWKVÔÚ
Forward RWKVOutputÊ±µÄÏ¸Î¢ÎÊÌâ£¬Ö÷ÒªÊÇÒýÈëºÍÃ÷È·last_hidden_state¡£ÒÔÏÂÊÇÇáÁ¿¼¶Ê¹ÓÃ´úÂë£¬±È½Ï·½±ã£º; RingRWKV GIT¿ªÔ´µØÖ·£ºhttps://github.com/StarRing2022/RingRWKV ; import torch
from ringrwkv.configuration_rwkv_world import RwkvConfig
from ringrwkv.rwkv_tokenizer import TRIE_TOKENIZER
from ringrwkv.modehf_world import RwkvForCausalLM; model = RwkvForCausalLM.from_pretrained(""StarRing2022/RWKV-4-World-7B"") #»ò½«±¾Ä£ÐÍÏÂÔØÖÁ±¾µØÎÄ¼þ¼Ð 
tokenizer = TRIE_TOKENIZER('./ringrwkv/rwkv_vocab_v20230424.txt'); text = ""Äã½ÐÊ²Ã´Ãû×Ö£¿""",
Evol-Replit-v1-GGML,,,,cc-by-sa-4.0,,6,nickrosh/Evol-Instruct-Code-80k-v1,0,9820.168955,,https://huggingface.co/TheBloke/Evol-Replit-v1-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are Replit GGML format model files for Nick Roshdieh's Evol Replit v1.; Please note that these GGMLs are not compatible with llama.cpp, text-generation-webui or llama-cpp-python. Please see below for a list of tools that work with this GGML model.; These files were quantised using hardware kindly provided by Latitude.sh.",
Llama-2-13B-Chat-ggml,,,,,,6,,0,119316.5004,4,https://huggingface.co/localmodels/Llama-2-13B-Chat-ggml,"From: https://huggingface.co/meta-llama/Llama-2-13b-chat-hf; Quantized using an older version of llama.cpp and compatible with llama.cpp from May 19, commit 2d5db48.; Quantization methods compatible with latest llama.cpp from June 6, commit 2d43387.; Llama 2 is a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. This is the repository for the 13B fine-tuned model, optimized for dialogue use cases and converted for the Hugging Face Transformers format. Links to other models can be found in the index at the bottom.; Note: Use of this model is governed by the Meta license. In order to download the model weights and tokenizer, please visit the website and accept our License before requesting access here.",
Llama-2-7b-chat-hf,Text Generation,PyTorch; Safetensors; Transformers,English,,,6,,399,41402.72536,,https://huggingface.co/NousResearch/Llama-2-7b-chat-hf,"Llama 2 is a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. This is the repository for the 7B fine-tuned model, optimized for dialogue use cases and converted for the Hugging Face Transformers format. Links to other models can be found in the index at the bottom.; Note: Use of this model is governed by the Meta license. In order to download the model weights and tokenizer, please visit the website and accept our License before requesting access here.; Meta developed and publicly released the Llama 2 family of large language models (LLMs), a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. Our fine-tuned LLMs, called Llama-2-Chat, are optimized for dialogue use cases. Llama-2-Chat models outperform open-source chat models on most benchmarks we tested, and in our human evaluations for helpfulness and safety, are on par with some popular closed-source models like ChatGPT and PaLM.; Model Developers Meta; Variations Llama 2 comes in a range of parameter sizes ¡ª 7B, 13B, and 70B ¡ª as well as pretrained and fine-tuned variations.",Natural Language Processing
Llama-2-70b-hf,Text Generation,PyTorch; Safetensors; Transformers,English,,,6,,96,386747.4403,,https://huggingface.co/NousResearch/Llama-2-70b-hf,"Llama 2 is a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. This is the repository for the 70B pretrained model, converted for the Hugging Face Transformers format. Links to other models can be found in the index at the bottom.; Note: Use of this model is governed by the Meta license. In order to download the model weights and tokenizer, please visit the website and accept our License before requesting access here.; Meta developed and publicly released the Llama 2 family of large language models (LLMs), a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. Our fine-tuned LLMs, called Llama-2-Chat, are optimized for dialogue use cases. Llama-2-Chat models outperform open-source chat models on most benchmarks we tested, and in our human evaluations for helpfulness and safety, are on par with some popular closed-source models like ChatGPT and PaLM.; Model Developers Meta; Variations Llama 2 comes in a range of parameter sizes ¡ª 7B, 13B, and 70B ¡ª as well as pretrained and fine-tuned variations.",Natural Language Processing
mlc-chat-Llama-2-7b-chat-hf-q4f16_1,,,,,,6,,0,1537.869878,,https://huggingface.co/mlc-ai/mlc-chat-Llama-2-7b-chat-hf-q4f16_1,"No model card; New: Create and edit this model card directly on the website!; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
llama-2-7b-hf-small-shards,Text Generation,PyTorch; Transformers,,,,6,,361,27597.59785,,https://huggingface.co/abhishek/llama-2-7b-hf-small-shards,No model card; New: Create and edit this model card directly on the website!,Natural Language Processing
perfectLewdFantasy_v1.01,Text-to-Image,Diffusers,,other,,6,,350,2181.123047,3,https://huggingface.co/digiplay/perfectLewdFantasy_v1.01,Model info :; https://civitai.com/models/111848?modelVersionId=121050; Sample image I made thru Huggingface's API :; ; Original Author's DEMO image :,Multimodel
readflow-rwkv-4-world-ctx32k,,,,apache-2.0,,6,,0,15360.00293,,https://huggingface.co/xiaol/readflow-rwkv-4-world-ctx32k,"This is full finetuned model from RWKV 4 world 7B CHNTuned model using data from Readflow tech (readflow.com.cn) ,; finetuned for  32k context length, used to summary news article ; using inf-ctx training https://github.com/SynthiaDL/TrainChatGalRWKV with fixed VRAM; you can test summary prompt using RWKV runner(https://github.com/josStorer/RWKV-Runner) in chat mode , and check conversation files in examples folders.; https://discord.gg/pWH5MkvtNR",
llama-2-13B-German-Assistant-v2-GPTQ,Text Generation,Transformers,English; German,other,,6,flozi00/conversations,66,7434.754203,,https://huggingface.co/TheBloke/llama-2-13B-German-Assistant-v2-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for flozi00's Llama 2 13B German Assistant v2.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; Many thanks to William Beauchamp from Chai for providing the hardware used to make and upload these files!",Natural Language Processing
ruGPT-3.5-13B-GPTQ,Text Generation,Transformers,,,,6,,333,7785.404364,,https://huggingface.co/fffrrt/ruGPT-3.5-13B-GPTQ,"GPTQ quantisation of https://huggingface.co/ai-forever/ruGPT-3.5-13B; Small perplexity test:
  before quantization - 'mean_perplexity': 10.241
  after quantization - 'mean_perplexity': 10.379; Data - RussianSuperGlue > DaNetQA/train.jsonl['passage']; As this is a hastily thrown together quant with no prior experience in quants, use https://huggingface.co/TheBloke version if he releases a quant for this model.",Natural Language Processing
llama2-qlora-finetunined-french,,PEFT,,,,6,,6,134.0023379,,https://huggingface.co/1littlecoder/llama2-qlora-finetunined-french,"The following bitsandbytes quantization config was used during training:; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
llama-2-70b-Guanaco-QLoRA-fp16,Text Classification,PyTorch; Transformers,English,other,,6,,6,141285.4531,,https://huggingface.co/TheBloke/llama-2-70b-Guanaco-QLoRA-fp16,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are pytorch format fp16 model files for Mikael110's Llama2 70b Guanaco QLoRA.; It is the result of merging and/or converting the source repository to float16.; For further support, and discussions on these models and AI in general, join us at:",Natural Language Processing
llama2-7b-chat-codeCherryPop-qLoRA-GPTQ,Text Generation,Transformers,,other,,6,,0,3995.955517,,https://huggingface.co/TheBloke/llama2-7b-chat-codeCherryPop-qLoRA-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; This repo contains GPTQ model files for TokenBender's Llama-2-7B-Chat Code Cherry Pop.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; Multiple quantisation parameters are provided, to allow you to choose the best one for your hardware and requirements.",Natural Language Processing
Llama-2-70B-GGML,Text Generation,Transformers; PyTorch,English,other,https://arxiv.org/pdf/2307.09288.pdf,6,,0,576921.6323,,https://huggingface.co/TheBloke/Llama-2-70B-GGML,Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; This repo contains GGML format model files for Meta's Llama 2 70B.; To use these files you need:; Example command:,Natural Language Processing
mT5_multilingual_XLSum,Summarization,PyTorch; Transformers,43 languages,,,145,csebuetnlp/xlsum,20110,2390.239006,69,https://huggingface.co/csebuetnlp/mT5_multilingual_XLSum,"This repository contains the mT5 checkpoint finetuned on the 45 languages of XL-Sum dataset. For finetuning details and scripts,
see the paper and the official repository. ; Scores on the XL-Sum test sets are as follows:; If you use this model, please cite the following paper:",Natural Language Processing
wav2vec2-base-960h,Automatic Speech Recognition,PyTorch; TensorFlow; Safetensors; Transformers,English,apache-2.0,https://arxiv.org/pdf/2006.11477.pdf,139,librispeech_asr,610783,1134.007458,175,https://huggingface.co/facebook/wav2vec2-base-960h,"Facebook's Wav2Vec2; The base model pretrained and fine-tuned on 960 hours of Librispeech on 16kHz sampled speech audio. When using the model
make sure that your speech input is also sampled at 16Khz.; Paper; Authors: Alexei Baevski, Henry Zhou, Abdelrahman Mohamed, Michael Auli; Abstract",Audio
tapas-base-finetuned-wtq,Table Question Answering,PyTorch; TensorFlow; Transformers,English,apache-2.0,https://arxiv.org/pdf/2004.02349.pdf; https://arxiv.org/pdf/2010.00571.pdf; https://arxiv.org/pdf/1508.00305.pdf,128,wikitablequestions,26962,886.2654451,93,https://huggingface.co/google/tapas-base-finetuned-wtq,"This model has 2 versions which can be used. The default version corresponds to the tapas_wtq_wikisql_sqa_inter_masklm_base_reset checkpoint of the original Github repository.
This model was pre-trained on MLM and an additional step which the authors call intermediate pre-training, and then fine-tuned in a chain on SQA, WikiSQL and finally WTQ. It uses relative position embeddings (i.e. resetting the position index at every cell of the table).; The other (non-default) version which can be used is: ; Disclaimer: The team releasing TAPAS did not write a model card for this model so this model card has been written by
the Hugging Face team and contributors.; TAPAS is a BERT-like transformers model pretrained on a large corpus of English data from Wikipedia in a self-supervised fashion. 
This means it was pretrained on the raw tables and associated texts only, with no humans labelling them in any way (which is why it
can use lots of publicly available data) with an automatic process to generate inputs and labels from those texts. More precisely, it
was pretrained with two objectives:; This way, the model learns an inner representation of the English language used in tables and associated texts, which can then be used 
to extract features useful for downstream tasks such as answering questions about a table, or determining whether a sentence is entailed
or refuted by the contents of a table. Fine-tuning is done by adding a cell selection head and aggregation head on top of the pre-trained model, and then jointly train these randomly initialized classification heads with the base model on SQa, WikiSQL and finally WTQ. ",Natural Language Processing
multi-qa-mpnet-base-dot-v1,Sentence Similarity,PyTorch; Sentence Transformers,,,,101,flax-sentence-embeddings/stackexchange_xml; ms_marco; gooaq; yahoo_answers_topics; search_qa; eli5; natural_questions; trivia_qa; embedding-data/QQP; embedding-data/PAQ_pairs; embedding-data/Amazon-QA; embedding-data/WikiAnswers,739674,438.7307655,44,https://huggingface.co/sentence-transformers/multi-qa-mpnet-base-dot-v1,"This is a sentence-transformers model: It maps sentences & paragraphs to a 768 dimensional dense vector space and was designed for semantic search. It has been trained on 215M (question, answer) pairs from diverse sources. For an introduction to semantic search, have a look at: SBERT.net - Semantic Search; Using this model becomes easy when you have sentence-transformers installed:; Then you can use the model like this:; Without sentence-transformers, you can use the model like this: First, you pass your input through the transformer model, then you have to apply the correct pooling-operation on-top of the contextualized word embeddings.; In the following some technical details how this model must be used:",Natural Language Processing
paraphrase-multilingual-mpnet-base-v2,Sentence Similarity,PyTorch; TensorFlow; Sentence Transformers; Transformers,,apache-2.0,https://arxiv.org/pdf/1908.10084.pdf,113,,166986,2287.436026,16,https://huggingface.co/sentence-transformers/paraphrase-multilingual-mpnet-base-v2,"This is a sentence-transformers model: It maps sentences & paragraphs to a 768 dimensional dense vector space and can be used for tasks like clustering or semantic search.; Using this model becomes easy when you have sentence-transformers installed:; Then you can use the model like this:; Without sentence-transformers, you can use the model like this: First, you pass your input through the transformer model, then you have to apply the right pooling-operation on-top of the contextualized word embeddings.; For an automated evaluation of this model, see the Sentence Embeddings Benchmark: https://seb.sbert.net",Natural Language Processing
spkrec-ecapa-voxceleb,,speechbrain; PyTorch,English,apache-2.0,https://arxiv.org/pdf/2106.04624.pdf,78,voxceleb,504058,89.10602314,57,https://huggingface.co/speechbrain/spkrec-ecapa-voxceleb,"This repository provides all the necessary tools to perform speaker verification with a pretrained ECAPA-TDNN model using SpeechBrain. 
The system can be used to extract speaker embeddings as well. 
It is trained on Voxceleb 1+ Voxceleb2 training data. ; For a better experience, we encourage you to learn more about
SpeechBrain. The model performance on Voxceleb1-test set(Cleaned) is:; This system is composed of an ECAPA-TDNN model. It is a combination of convolutional and residual blocks. The embeddings are extracted using attentive statistical pooling. The system is trained with Additive Margin Softmax Loss.  Speaker Verification is performed using cosine distance between speaker embeddings.; First of all, please install SpeechBrain with the following command:; Please notice that we encourage you to read our tutorials and learn more about
SpeechBrain.",
Geneformer,Fill-Mask,PyTorch; Transformers,,apache-2.0,,67,ctheodoris/Genecorpus-30M,2515,41.21306431,1,https://huggingface.co/ctheodoris/Geneformer,"Geneformer is a foundation transformer model pretrained on a large-scale corpus of ~30 million single cell transcriptomes to enable context-aware predictions in settings with limited data in network biology. ; See our manuscript for details.; Geneformer is a foundation transformer model pretrained on Genecorpus-30M, a pretraining corpus comprised of ~30 million single cell transcriptomes from a broad range of human tissues. We excluded cells with high mutational burdens (e.g. malignant cells and immortalized cell lines) that could lead to substantial network rewiring without companion genome sequencing to facilitate interpretation. Each single cell¡¯s transcriptome is presented to the model as a rank value encoding where genes are ranked by their expression in that cell normalized by their expression across the entire Genecorpus-30M. The rank value encoding provides a nonparametric representation of that cell¡¯s transcriptome and takes advantage of the many observations of each gene¡¯s expression across Genecorpus-30M to prioritize genes that distinguish cell state. Specifically, this method will deprioritize ubiquitously highly-expressed housekeeping genes by normalizing them to a lower rank. Conversely, genes such as transcription factors that may be lowly expressed when they are expressed but highly distinguish cell state will move to a higher rank within the encoding. Furthermore, this rank-based approach may be more robust against technical artifacts that may systematically bias the absolute transcript counts value while the overall relative ranking of genes within each cell remains more stable. ; The rank value encoding of each single cell¡¯s transcriptome then proceeds through six transformer encoder units. Pretraining was accomplished using a masked learning objective where 15% of the genes within each transcriptome were masked and the model was trained to predict which gene should be within each masked position in that specific cell state using the context of the remaining unmasked genes. A major strength of this approach is that it is entirely self-supervised and can be accomplished on completely unlabeled data, which allows the inclusion of large amounts of training data without being restricted to samples with accompanying labels.; We detail applications and results in our manuscript. ",Natural Language Processing
yolos-small-finetuned-license-plate-detection,Object Detection,PyTorch; Transformers,English,,,13,,22398,123.0061556,2,https://huggingface.co/nickmuchi/yolos-small-finetuned-license-plate-detection,"This model is a fine-tuned version of hustvl/yolos-small on the licesne-plate-recognition dataset from Roboflow which contains 5200 images in the training set and 380 in the validation set.
The original YOLOS model was fine-tuned on COCO 2017 object detection (118k annotated images).; YOLOS is a Vision Transformer (ViT) trained using the DETR loss. Despite its simplicity, a base-sized YOLOS model is able to achieve 42 AP on COCO validation 2017 (similar to DETR and more complex frameworks such as Faster R-CNN).; You can use the raw model for object detection. See the model hub to look for all available YOLOS models.; Here is how to use this model:; Currently, both the feature extractor and model support PyTorch.",Computer Vision
MagicPrompt-Stable-Diffusion,Text Generation,PyTorch; Core ML; Safetensors; Transformers,,mit,,496,,36451,1023.342164,124,https://huggingface.co/Gustavosta/MagicPrompt-Stable-Diffusion,"This is a model from the MagicPrompt series of models, which are GPT-2 models intended to generate prompt texts for imaging AIs, in this case: Stable Diffusion.; This model was trained with 150,000 steps and a set of about 80,000 data filtered and extracted from the image finder for Stable Diffusion: ""Lexica.art"". It was a little difficult to extract the data, since the search engine still doesn't have a public API without being protected by cloudflare, but if you want to take a look at the original dataset, you can have a look here: datasets/Gustavosta/Stable-Diffusion-Prompts.; If you want to test the model with a demo, you can go to: ""spaces/Gustavosta/MagicPrompt-Stable-Diffusion"".; MIT; When using this model, please credit: Gustavosta",Natural Language Processing
whisper-large,Automatic Speech Recognition,PyTorch; TensorFlow; JAX; Transformers,99 languages,apache-2.0,https://arxiv.org/pdf/2212.04356.pdf,310,,14916,18958.22622,31,https://huggingface.co/openai/whisper-large,"Whisper is a pre-trained model for automatic speech recognition (ASR) and speech translation. Trained on 680k hours 
of labelled data, Whisper models demonstrate a strong ability to generalise to many datasets and domains without the need 
for fine-tuning.; Whisper was proposed in the paper Robust Speech Recognition via Large-Scale Weak Supervision 
by Alec Radford et al from OpenAI. The original code repository can be found here.; Update: following the release of the paper, the Whisper authors announced a  large-v2 model trained for 2.5x more epochs with regularization. This  large-v2 model surpasses the performance of the large model, with no architecture changes. Thus, it is recommended that the  large-v2 model is used in-place of the original large model. ; Disclaimer: Content for this model card has partly been written by the Hugging Face team, and parts of it were 
copied and pasted from the original model card.; Whisper is a Transformer based encoder-decoder model, also referred to as a sequence-to-sequence model. 
It was trained on 680k hours of labelled speech data annotated using large-scale weak supervision. ",Audio
biogpt,Text Generation,PyTorch; Transformers,English,mit,,152,,35766,1599.032755,31,https://huggingface.co/microsoft/biogpt,"Pre-trained language models have attracted increasing attention in the biomedical domain, inspired by their great success in the general natural language domain. Among the two main branches of pre-trained language models in the general language domain, i.e. BERT (and its variants) and GPT (and its variants), the first one has been extensively studied in the biomedical domain, such as BioBERT and PubMedBERT. While they have achieved great success on a variety of discriminative downstream biomedical tasks, the lack of generation ability constrains their application scope. In this paper, we propose BioGPT, a domain-specific generative Transformer language model pre-trained on large-scale biomedical literature. We evaluate BioGPT on six biomedical natural language processing tasks and demonstrate that our model outperforms previous models on most tasks. Especially, we get 44.98%, 38.42% and 40.76% F1 score on BC5CDR, KD-DTI and DDI end-to-end relation extraction tasks, respectively, and 78.2% accuracy on PubMedQA, creating a new record. Our case study on text generation further demonstrates the advantage of BioGPT on biomedical literature to generate fluent descriptions for biomedical terms.; You can use this model directly with a pipeline for text generation. Since the generation relies on some randomness, we
set a seed for reproducibility:; Here is how to use this model to get the features of a given text in PyTorch:; Beam-search decoding:; If you find BioGPT useful in your research, please cite the following paper:",Natural Language Processing
segformer_b2_clothes,Image Segmentation,PyTorch; Safetensors; Transformers,,mit,https://arxiv.org/pdf/2105.15203.pdf,46,mattmdjaga/human_parsing_dataset,112093,438.3098489,16,https://huggingface.co/mattmdjaga/segformer_b2_clothes,"SegFormer model fine-tuned on ATR dataset for clothes segmentation.
The dataset on hugging face is called ""mattmdjaga/human_parsing_dataset"".; Labels: 0: ""Background"", 1: ""Hat"", 2: ""Hair"", 3: ""Sunglasses"", 4: ""Upper-clothes"", 5: ""Skirt"", 6: ""Pants"", 7: ""Dress"", 8: ""Belt"", 9: ""Left-shoe"", 10: ""Right-shoe"", 11: ""Face"", 12: ""Left-leg"", 13: ""Right-leg"", 14: ""Left-arm"", 15: ""Right-arm"", 16: ""Bag"", 17: ""Scarf""; The license for this model can be found here.",Computer Vision
git-large-coco,Image-to-Text,PyTorch; Safetensors; Transformers,English,mit,https://arxiv.org/pdf/2205.14100.pdf,36,,122834,3236.769388,33,https://huggingface.co/microsoft/git-large-coco,"GIT (short for GenerativeImage2Text) model, large-sized version, fine-tuned on COCO. It was introduced in the paper GIT: A Generative Image-to-text Transformer for Vision and Language by Wang et al. and first released in this repository.; Disclaimer: The team releasing GIT did not write a model card for this model so this model card has been written by the Hugging Face team.; GIT is a Transformer decoder conditioned on both CLIP image tokens and text tokens. The model is trained using ""teacher forcing"" on a lot of (image, text) pairs.; The goal for the model is simply to predict the next text token, giving the image tokens and previous text tokens.; The model has full access to (i.e. a bidirectional attention mask is used for) the image patch tokens, but only has access to the previous text tokens (i.e. a causal attention mask is used for the text tokens) when predicting the next text token.",Multimodel
Deliberate,,Diffusers,,,,356,,25129,10915.84273,2,https://huggingface.co/XpucT/Deliberate,"This model provides you the ability to create anything you want.
The more power of prompt knowledges you have, the better results you'll get.
It basically means that you'll never get a perfect result with just a few words.
You have to fill out your prompt line extremely detailed.
; Dive into the perfect creations world with my prompts.
Your research will be appreciated, so feel free to show everyone, what you can get with this model; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
GuoFeng3,Text-to-Image,Diffusers,English,cc-by-nc-sa-4.0,,429,,3400,37421.85152,45,https://huggingface.co/xiaolxl/GuoFeng3,"»¶Ó­Ê¹ÓÃGuoFeng3Ä£ÐÍ - (TIP:Õâ¸ö°æ±¾µÄÃû×Ö½øÐÐÁËÎ¢µ÷),ÕâÊÇÒ»¸öÖÐ¹ú»ªÀö¹Å·ç·ç¸ñÄ£ÐÍ£¬Ò²¿ÉÒÔËµÊÇÒ»¸ö¹Å·çÓÎÏ·½ÇÉ«Ä£ÐÍ£¬¾ßÓÐ2.5DµÄÖÊ¸Ð¡£µÚÈý´ú´ó·ù¶È¼õÉÙÉÏÊÖÄÑ¶È£¬Ôö¼ÓÁË³¡¾°ÔªËØÓëÄÐÐÔ¹Å·çÈËÎï£¬³ý´ËÖ®ÍâÎªÁËÄ£ÐÍÄÜ¸üºÃµÄÊÊÓ¦ÆäËüTAG£¬»¹Ôö¼ÓÁËÆäËü·ç¸ñµÄÔªËØ¡£ÕâÒ»´ú¶ÔÁ³ºÍÊÖµÄ±À»µÓÐÒ»¶¨µÄÐÞ¸´£¬Í¬Ê±ËØ²Ä´óÐ¡Ò²Ìá¸ßµ½ÁË×î³¤±ß1024¡£; ¸ù¾Ý¸öÈËµÄÊµÑéÓëÊÕµ½µÄ·´À¡£¬¹ú·çÄ£ÐÍÏµÁÐµÄµÚ¶þ´ú£¬ÔÚÈËÎï£¬Óë´óÍ·ÕÕµÄÐ§¹û±íÏÖ±ÈÈý´ú¸üºÃ£¬Èç¹ûÄãÓÐÕâ·½ÃæÐèÇó²»·ÁÊÔÊÔµÚ¶þ´ú¡£; 2.0°æ±¾£ºhttps://huggingface.co/xiaolxl/Gf_style2; GuoFeng3:Ô­Ê¼Ä£ÐÍ; GuoFeng3.1:¶ÔGuoFeng3ÈËÏñ½øÐÐÁËÎ¢µ÷ÐÞ¸´",Multimodel
BioGPT-Large-PubMedQA,Text Generation,PyTorch; Transformers,English,mit,,60,pubmed_qa,1525,6442.759135,16,https://huggingface.co/microsoft/BioGPT-Large-PubMedQA,"Pre-trained language models have attracted increasing attention in the biomedical domain, inspired by their great success in the general natural language domain. Among the two main branches of pre-trained language models in the general language domain, i.e. BERT (and its variants) and GPT (and its variants), the first one has been extensively studied in the biomedical domain, such as BioBERT and PubMedBERT. While they have achieved great success on a variety of discriminative downstream biomedical tasks, the lack of generation ability constrains their application scope. In this paper, we propose BioGPT, a domain-specific generative Transformer language model pre-trained on large-scale biomedical literature. We evaluate BioGPT on six biomedical natural language processing tasks and demonstrate that our model outperforms previous models on most tasks. Especially, we get 44.98%, 38.42% and 40.76% F1 score on BC5CDR, KD-DTI and DDI end-to-end relation extraction tasks, respectively, and 78.2% accuracy on PubMedQA, creating a new record. Our case study on text generation further demonstrates the advantage of BioGPT on biomedical literature to generate fluent descriptions for biomedical terms.; If you find BioGPT useful in your research, please cite the following paper:",Natural Language Processing
upscaler,,,,,,130,,0,0.001445313,,https://huggingface.co/uwg/upscaler,"No model card; New: Create and edit this model card directly on the website!; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
so-vits-svc-4.0,,,English,,,120,,0,0.001583595,,https://huggingface.co/therealvul/so-vits-svc-4.0,"This is a collection of so-vits-svc-4.0 models made by the Pony Preservation Project using audio clips taken from MLP:FiM.; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
flan-ul2,Text2Text Generation,PyTorch; Transformers,5 languages,apache-2.0,https://arxiv.org/pdf/2205.05131.pdf,481,svakulenk0/qrecc; taskmaster2; djaym7/wiki_dialog; deepmind/code_contests; lambada; gsm8k; aqua_rat; esnli; quasc; qed; c4,69506,40400.09108,98,https://huggingface.co/google/flan-ul2,"; Flan-UL2 is an encoder decoder model based on the T5 architecture. It uses the same configuration as the UL2 model  released earlier last year. It was fine tuned using the ""Flan"" prompt tuning 
and dataset collection.; According to the original blog here are the notable improvements:; You can use the convert_t5x_checkpoint_to_pytorch.py script and pass the argument strict = False. The final layer norm is missing from the original dictionnary, that is why we are passing the strict = False argument.; We used the same config file as google/ul2.",Natural Language Processing
controlnet-sd21,,Diffusers,English,openrail++,,327,laion/laion-art,0,57112.17655,,https://huggingface.co/thibaud/controlnet-sd21,"Want to support my work: you can bought my Artbook: https://thibaud.art ; Here's the first version of controlnet for stablediffusion 2.1
Trained on a subset of laion/laion-art; ; ; ",
Annotators,,,,other,,112,,0,6928.471467,63,https://huggingface.co/lllyasviel/Annotators,"Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
TemporalNet,,Diffusers,,openrail,,243,,839,18143.40991,,https://huggingface.co/CiaraRowles/TemporalNet,"Introducing the Beta Version of TemporalNet; TemporalNet is a ControlNet model designed to enhance the temporal consistency of generated outputs, as demonstrated in this example: https://twitter.com/CiaraRowles1/status/1637486561917906944. While it does not eliminate all flickering, it significantly reduces it, particularly at higher denoise levels. For optimal results, it is recommended to use TemporalNet in combination with other methods.; Instructions for Use:; Add the model ""diff_control_sd15_temporalnet_fp16.safetensors"" to your models folder in the ControlNet extension in Automatic1111's Web UI.; Create a folder that contains:",
chatgpt-gpt4-prompts-bart-large-cnn-samsum,Text2Text Generation,TensorFlow; Transformers,,mit,,45,fka/awesome-chatgpt-prompts,3362,1672.461497,5,https://huggingface.co/Kaludi/chatgpt-gpt4-prompts-bart-large-cnn-samsum,"This model generates ChatGPT/BingChat & GPT-3 prompts and is a fine-tuned version of philschmid/bart-large-cnn-samsum on an this dataset.
It achieves the following results on the evaluation set:; This model supports a Streamlit Web UI to run the chatgpt-gpt4-prompts-bart-large-cnn-samsum model:
; The following hyperparameters were used during training:",Natural Language Processing
lametta,Text-to-Image,Diffusers; Safetensors,Japanese,creativeml-openrail-m,,61,,0,21811.22742,,https://huggingface.co/Lasorco/lametta,ÈËµÄ¤ÊºÃ¤ß¤Î½}±ú¤ò×·Çó¤·¤¿¥Þ©`¥¸¥â¥Ç¥ë¤ÇÆÕ¶ÎÇ²¤¤¤Î¤¿¤á¤Ë¥Þ©`¥¸¤·¤¿¤â¤Î¤Ë¤Ê¤ê¤Þ¤¹¡£¤«¤Ê¤êñ±¤¬¤¤¥â¥Ç¥ë¤¸¤ã¤Ê¤¤¤«¤ÈË¼¤¤¤Þ¤¹¡£; ¥â¥Ç¥ëÈ«Ìå¤ÎAÏò¤È¤·¤ÆµÈÉí¤ÎµÍ¤¤Å®¤Î×Ó¤ÎÃèÐ´¤ËÖ÷ÑÛ¤ò¤ª¤¤¤Æ¤¤¤Þ¤¹¤¬¡¢ÐØ¤Î´ó¤­¤Ê¤ª¤µ¤ó¤â¤Á¤ã¤ó¤È³ö¤Æ¤¯¤ë¤è¤¦¤Ç¤¹¡£¤½¤ìÒÔÍâ¤Î³öÁ¦¤â¤Ç¤­¤ë¤È¤ÏË¼¤¤¤Þ¤¹¤¬Ô¤·¤Æ¤¤¤Ê¤¤¤Î¤ÇÎ´ÖªÊý¤Ç¤¹¡£; ÈË¤Î¤³¤À¤ï¤ê¤Ç¤Ç¤­¤ë¤À¤±Ä¿¤Î¥Ï¥¤¥é¥¤¥È¤òÊ§¤ï¤Ê¤¤¤è¤¦¤Ë¥Þ©`¥¸¤·¤Æ¤¢¤ê¤Þ¤¹¡£Ö¸¤ÎÃèÐ´¤Ë¤âÝ¤òÊ¹¤Ã¤¿¤Ä¤â¤ê¤Ç¤¹¤¬¥×¥í¥ó¥×¥È¤Ê¤É´ÎµÚ¤Çºg¤ËÆÆ¾`¤·¤Þ¤¹¡£; Clip skip¤Ï£±¤ä£²¤Î¤ªºÃ¤ß¤Ç¡£¤É¤Á¤é¤Ë¤â¤½¤ì¤¾¤ì¤Î÷ÈÁ¦¤¬¤¢¤ëÝ¤¬¤·¤Þ¤¹¡£; VAE¤ÏºÎ¤«¤·¤éÍâ²¿¤Î¤â¤Î¤òÊ¹ÓÃ¤·¤Æ¤¯¤À¤µ¤¤¡¢¥µ¥ó¥×¥ë¤Ï¤¹¤Ù¤ÆAnything¤ÎVAE¤òÊ¹ÓÃ¤·¤Æ¤¤¤Þ¤¹¡£ÈËµÄ¤ËÆÕ¶Î¤ÏclearVAE¥·¥ê©`¥º¤òÊ¹¤Ã¤Æ¤¤¤Þ¤¹¥ª¥¹¥¹¥á¡£,Multimodel
ControlNetMediaPipeFace,Image-to-Image,Diffusers,English,openrail,https://arxiv.org/pdf/2302.05543.pdf; https://arxiv.org/pdf/2112.10752.pdf; https://arxiv.org/pdf/2210.08402.pdf,431,LAION-Face; LAION,4071,29033.36585,7,https://huggingface.co/CrucibleAI/ControlNetMediaPipeFace,This dataset is designed to train a ControlNet with human facial expressions.  It includes keypoints for pupils to allow gaze direction.  Training has been tested on Stable Diffusion v2.1 base (512) and Stable Diffusion v1.5.; Cherry-picked from ControlNet + Stable Diffusion v2.1 Base; Images with multiple faces are also supported:; Source images were generated by pulling slice 00000 from LAION Face and passing them through MediaPipe's face detector with special configuration parameters.  ; The colors and line thicknesses used for MediaPipe are as follows:,Computer Vision
rwkv-4-raven,Text Generation,PyTorch,English,apache-2.0,,472,the_pile,0,74618.88304,10,https://huggingface.co/BlinkDL/rwkv-4-raven,"[UPDATE: Try RWKV-4-World (https://huggingface.co/BlinkDL/rwkv-4-world) for generation & chat & code in 100+ world languages, with great English zero-shot & in-context learning ability too.]; These are RWKV-4-Pile 1.5/3/7/14B models finetuned on Alpaca, CodeAlpaca, Guanaco, GPT4All, ShareGPT and more. Even the 1.5B model is surprisingly good for its size.; Gradio Demo: https://huggingface.co/spaces/BlinkDL/Raven-RWKV-7B and https://huggingface.co/spaces/BlinkDL/ChatRWKV-gradio; RWKV models inference: https://github.com/BlinkDL/ChatRWKV (fast CUDA).; Q8_0 models: only for https://github.com/saharNooby/rwkv.cpp (fast CPU).",Natural Language Processing
vicuna-7b,Text Generation,PyTorch; Transformers,,other,,104,,1789,13478.5185,20,https://huggingface.co/AlekseyKorshuk/vicuna-7b,"This repository contains an alternative version of the Vicuna 7B model.; This model was natively fine-tuned using ShareGPT data, but without the ""ethics"" filtering used for the original Vicuna.; A GPTQ quantised  4-bit version is available here.; Model type:
Vicuna is an open-source chatbot trained by fine-tuning LLaMA on user-shared conversations collected from ShareGPT.
It is an auto-regressive language model, based on the transformer architecture.; Model date:
Vicuna was trained between March 2023 and April 2023.",Natural Language Processing
HimawariMixs,Text-to-Image,Diffusers,Japanese; English,creativeml-openrail-m,,62,,0,5795.850381,1,https://huggingface.co/natsusakiyomi/HimawariMixs,"
          ¡©¤Ê¥â¥Ç¥ë¤ò¥Þ©`¥¸¤·¤¿±³¾°¤ä¼²¿¤Î±í¬FÁ¦¤¬¤¤VAEÄÚÊiÐÍ¥â¥Ç¥ë
          VAE¤ÎÄÚÄ ¤Ï¤Ê¤¤¤¾£¡¤ÈÑÔ¤ï¤»¤Ê¤¤¤¾£¡£¡£¡£¡
          Models with built-in VAE with strong expression of backgrounds and details merging various models
        ; Twiter: @min__san",Multimodel
MiniGPT-4,,,,,,271,,0,47.40822266,43,https://huggingface.co/Vision-CAIR/MiniGPT-4,"Deyao Zhu* (On Job Market!), Jun Chen* (On Job Market!), Xiaoqian Shen, Xiang Li, and Mohamed Elhoseiny. *Equal Contribution; King Abdullah University of Science and Technology; Click the image to chat with MiniGPT-4 around your images
; More examples can be found in the project page.; ",
WizardLM-7B-Uncensored,Text Generation,PyTorch; Transformers,,other,,308,ehartford/WizardLM_alpaca_evol_instruct_70k_unfiltered,1633,13826.33209,20,https://huggingface.co/ehartford/WizardLM-7B-Uncensored,"This is WizardLM trained with a subset of the dataset - responses that contained alignment / moralizing were removed.  The intent is to train a WizardLM that doesn't have alignment built-in, so that alignment (of any sort) can be added separately with for example with a RLHF LoRA.; Shout out to the open source AI/ML community, and everyone who helped me out.; Note:  ; An uncensored model has no guardrails.  ; You are responsible for anything you do with the model, just as you are responsible for anything you do with any dangerous object such as a knife, gun, lighter, or car.",Natural Language Processing
Wizard-Vicuna-13B-Uncensored,Text Generation,PyTorch; Transformers,English,other,,192,ehartford/wizard_vicuna_70k_unfiltered,2595,53322.09611,22,https://huggingface.co/ehartford/Wizard-Vicuna-13B-Uncensored,"This is wizard-vicuna-13b trained with a subset of the dataset - responses that contained alignment / moralizing were removed. The intent is to train a WizardLM that doesn't have alignment built-in, so that alignment (of any sort) can be added separately with for example with a RLHF LoRA.; Shout out to the open source AI/ML community, and everyone who helped me out.; Note:  ; An uncensored model has no guardrails.  ; You are responsible for anything you do with the model, just as you are responsible for anything you do with any dangerous object such as a knife, gun, lighter, or car.",Natural Language Processing
Wizard-Vicuna-7B-Uncensored-GPTQ,Text Generation,Transformers,English,other,,37,ehartford/wizard_vicuna_70k_unfiltered,2339,4630.846355,,https://huggingface.co/TheBloke/Wizard-Vicuna-7B-Uncensored-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for Wizard-Vicuna-7B-Uncensored.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; These models were quantised using hardware kindly provided by Latitude.sh.",Natural Language Processing
e5-small-v2,Feature Extraction,PyTorch; TensorFlow; ONNX; Safetensors; Transformers,English,mit,https://arxiv.org/pdf/2212.03533.pdf; https://arxiv.org/pdf/2104.08663.pdf; https://arxiv.org/pdf/2210.07316.pdf,19,,702926,534.989669,4,https://huggingface.co/intfloat/e5-small-v2,"Text Embeddings by Weakly-Supervised Contrastive Pre-training.
Liang Wang, Nan Yang, Xiaolong Huang, Binxing Jiao, Linjun Yang, Daxin Jiang, Rangan Majumder, Furu Wei, arXiv 2022; This model has 12 layers and the embedding size is 384.; Below is an example to encode queries and passages from the MS-MARCO passage ranking dataset.; Please refer to our paper at https://arxiv.org/pdf/2212.03533.pdf.; Check out unilm/e5 to reproduce evaluation results 
on the BEIR and MTEB benchmark.",Multimodel
guanaco-65b,,,,,https://arxiv.org/pdf/2305.14314.pdf; https://arxiv.org/pdf/2302.13971.pdf; https://arxiv.org/pdf/2304.07327.pdf,66,,0,6553.622397,1,https://huggingface.co/timdettmers/guanaco-65b,"| Paper | Code | Demo | ; The Guanaco models are open-source finetuned chatbots obtained through 4-bit QLoRA tuning of LLaMA base models on the OASST1 dataset. They are available in 7B, 13B, 33B, and 65B parameter sizes.; ??Guanaco is a model purely intended for research purposes and could produce problematic outputs.; Guanaco adapter weights are available under Apache 2 license. Note the use of the Guanaco adapter weights, requires access to the LLaMA model weighs. 
Guanaco is based on LLaMA and therefore should be used according to the LLaMA license. ; Here is an example of how you would load Guanaco 7B in 4-bits:",
guanaco-65B-GPTQ,Text Generation,Transformers,,other,https://arxiv.org/pdf/2305.14314.pdf; https://arxiv.org/pdf/2302.13971.pdf; https://arxiv.org/pdf/2304.07327.pdf,235,,3254,34306.3505,5,https://huggingface.co/TheBloke/guanaco-65B-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for Tim Dettmers' Guanaco 65B.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; These models were quantised using hardware kindly provided by Latitude.sh.",Natural Language Processing
m3e-small,,PyTorch; Sentence Transformers,Chinese,,,15,,2139,96.25759785,3,https://huggingface.co/moka-ai/m3e-small,m3e-small | m3e-base; M3E ÊÇ Moka Massive Mixed Embedding µÄËõÐ´; ËµÃ÷£º; Tips:; ÄúÐèÒªÏÈ°²×° sentence-transformers,
kandinsky-2-2-decoder,Text-to-Image,Diffusers,,apache-2.0,,16,,8958,0.009418106,3,https://huggingface.co/kandinsky-community/kandinsky-2-2-decoder,"Kandinsky inherits best practices from Dall-E 2 and Latent diffusion while introducing some new ideas.; It uses the CLIP model as a text and image encoder,  and diffusion image prior (mapping) between latent spaces of CLIP modalities. This approach increases the visual performance of the model and unveils new horizons in blending images and text-guided image manipulation.; The Kandinsky model is created by Arseniy Shakhmatov, Anton Razzhigaev, Aleksandr Nikolich, Igor Pavlov, Andrey Kuznetsov and Denis Dimitrov; Kandinsky 2.2 is available in diffusers!; ",Multimodel
kandinsky-2-2-prior,Text-to-Image,Diffusers,,apache-2.0,,10,,16294,0.01608326,2,https://huggingface.co/kandinsky-community/kandinsky-2-2-prior,"Kandinsky inherits best practices from Dall-E 2 and Latent diffusion while introducing some new ideas.; It uses the CLIP model as a text and image encoder,  and diffusion image prior (mapping) between latent spaces of CLIP modalities. This approach increases the visual performance of the model and unveils new horizons in blending images and text-guided image manipulation.; The Kandinsky model is created by Arseniy Shakhmatov, Anton Razzhigaev, Aleksandr Nikolich, Igor Pavlov, Andrey Kuznetsov and Denis Dimitrov; Kandinsky 2.2 is available in diffusers!; ",Multimodel
myLyCORIS,,,,,,57,,0,0.000488281,,https://huggingface.co/Saya3091/myLyCORIS,"½ö¹©Ñ§Ï°£¬ÇëÎðÓÃÓÚÈÎºÎÉÌÒµ»î¶¯£¬²»ÊÚÈ¨¸øÈÎºÎÉÌÒµÐÐÎª¡£Èç¹ûÓÐÃ»ÓÐÊ¹ÓÃËµÃ÷µÄÄ£ÐÍ£¬Çë³¢ÊÔÔÚcivitaiËÑË÷@Saya£¬¿ÉÒÔÕÒµ½¹ýÈ¥µÄÄ£ÐÍËµÃ÷
For learning only, please do not use for any commercial activities, not authorized to any commercial activities. If there is a model without instructions, try searching @Saya in civiti, you can find past model instructions; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
WizardCoder-15B-1.0-GPTQ,Text Generation,Transformers,,bigcode-openrail-m,,125,,7177,9424.070554,,https://huggingface.co/TheBloke/WizardCoder-15B-1.0-GPTQ,Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ 4bit model files for WizardLM's WizardCoder 15B 1.0.; It is the result of quantising to 4bit using AutoGPTQ.; Please make sure you're using the latest version of text-generation-webui,Natural Language Processing
baichuan-vicuna-chinese-7b,Text Generation,PyTorch; Transformers,Chinese; English,,,50,anon8231489123/ShareGPT_Vicuna_unfiltered; QingyiSi/Alpaca-CoT; mhhmm/leetcode-solutions-python,1138,14338.14311,,https://huggingface.co/fireballoon/baichuan-vicuna-chinese-7b,baichuan-vicuna-chinese-7bÊÇÔÚÖÐÓ¢Ë«ÓïsharegptÊý¾ÝÉÏÈ«²ÎÊýÎ¢µ÷µÄ¶Ô»°Ä£ÐÍ¡£; baichuan-vicuna-chinese-7b is a chat model supervised finetuned on vicuna sharegpt data in both English and Chinese.; [NEW] 4bit-128g GPTQÁ¿»¯°æ±¾£ºbaichuan-vicuna-chinese-7b-gptq; Inference with FastChat:; Inference with Transformers:,Natural Language Processing
mpt-30b,Text Generation,PyTorch; Transformers,,apache-2.0,https://arxiv.org/pdf/2108.12409.pdf; https://arxiv.org/pdf/2302.13971.pdf; https://arxiv.org/pdf/2205.14135.pdf; https://arxiv.org/pdf/2010.04245.pdf; https://arxiv.org/pdf/1909.08053.pdf; https://arxiv.org/pdf/2302.06675.pdf,292,allenai/c4; mc4; togethercomputer/RedPajama-Data-1T; bigcode/the-stack-dedup; allenai/s2orc,73345,61363.15051,1,https://huggingface.co/mosaicml/mpt-30b,"MPT-30B is a decoder-style transformer pretrained from scratch on 1T tokens of English text and code.
This model was trained by MosaicML.; MPT-30B is part of the family of Mosaic Pretrained Transformer (MPT) models, which use a modified transformer architecture optimized for efficient training and inference.; MPT-30B comes with special features that differentiate it from other LLMs, including an 8k token context window (which can be further extended via finetuning; see MPT-7B-StoryWriter), support for context-length extrapolation via ALiBi, and efficient inference + training via FlashAttention. It also has strong coding abilities thanks to its pretraining mix. MPT models can also be served efficiently with both standard HuggingFace pipelines and NVIDIA's FasterTransformer.
The size of MPT-30B was also specifically chosen to make it easy to deploy on a single GPU¡ªeither 1xA100-80GB in 16-bit precision or 1xA100-40GB in 8-bit precision.; This model uses the MosaicML LLM codebase, which can be found in the llm-foundry repository. It was trained by MosaicML¡¯s NLP team on the MosaicML platform for LLM pretraining, finetuning, and inference.; MPT-30B is:",Natural Language Processing
superhot-13b-8k-no-rlhf-test,,,,mit,,50,,0,17.60733002,1,https://huggingface.co/kaiokendev/superhot-13b-8k-no-rlhf-test,"This is a second prototype of SuperHOT, a NSFW focused LoRA, this time with 4K context and no RLHF. In my testing, it can go all the way to 6K without breaking down and I made the change with intention to reach 8K, so I'll assume it will go to 8K although I only trained on 4K sequences.; You will NEED to apply the monkeypatch or, if you are already using the monkeypatch, change the scaling factor to 0.25 and the maximum sequence length to 8192; In order to use the 8K context, you will need to apply the monkeypatch I have added in this repo or follow the instructions for oobabooga's text-generation-webui -- without it, it will not work.; I will repeat: Without the patch with the correct scaling and max sequence length, it will not work!; The patch is very simple, and you can make the changes yourself:",
mpt-30b-instruct,Text Generation,PyTorch; Transformers,,cc-by-sa-3.0,https://arxiv.org/pdf/2205.14135.pdf; https://arxiv.org/pdf/2108.12409.pdf,87,competition_math; conceptofmind/cot_submix_original/cot_gsm8k; knkarthick/dialogsum; mosaicml/dolly_hhrlhf; duorc; tau/scrolls/qasper; emozilla/quality; scrolls/summ_screen_fd; spider,64762,61363.14796,8,https://huggingface.co/mosaicml/mpt-30b-instruct,"MPT-30B-Instruct is a model for short-form instruction following.
It is built by finetuning MPT-30B on Dolly HHRLHF derived from the Databricks Dolly-15k and the Anthropic Helpful and Harmless (HH-RLHF) datasets. It is also trained on Competition Math, Duorc, CoT GSM8k, Qasper, Quality, Summ Screen FD and Spider.; This model was trained by MosaicML and follows a modified decoder-only transformer architecture.; June 22, 2023; CC-By-SA-3.0; Bespokenizer46",Natural Language Processing
DragGan-Models,,,,,https://arxiv.org/pdf/2305.10973.pdf,27,,0,4107.702042,,https://huggingface.co/DragGan/DragGan-Models,"More about Models here https://github.com/XingangPan/DragGAN; https://arxiv.org/abs/2305.10973; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
opencoderplus,Text Generation,PyTorch; Transformers,English,,,97,,1494,32411.02602,1,https://huggingface.co/openchat/opencoderplus,"OpenChat is a series of open-source language models fine-tuned on a diverse and high-quality dataset of multi-round conversations. With only ~6K GPT-4 conversations filtered from the ~90K ShareGPT conversations, OpenChat is designed to achieve high performance with limited data.; Generic models:; Code models:; Note: Please load the pretrained models using bfloat16; We provide the full source code, including an inference server compatible with the ""ChatCompletions"" API, in the OpenChat GitHub repository.",Natural Language Processing
replit-code-instruct-glaive,Text Generation,PyTorch; Transformers,,,,74,,4570,10639.32938,7,https://huggingface.co/sahil2801/replit-code-instruct-glaive,No model card; New: Create and edit this model card directly on the website!,Natural Language Processing
internlm-chat-7b-8k,Feature Extraction,PyTorch; Transformers,,,,33,,2133,15003.36559,5,https://huggingface.co/internlm/internlm-chat-7b-8k,"; ?Reporting Issues; InternLM has open-sourced a 7 billion parameter base model and a chat model tailored for practical scenarios. The model has the following characteristics:; We conducted a comprehensive evaluation of InternLM using the open-source evaluation tool OpenCompass. The evaluation covered five dimensions of capabilities: disciplinary competence, language competence, knowledge competence, inference competence, and comprehension competence. Here are some of the evaluation results, and you can visit the OpenCompass leaderboard for more evaluation results.; Limitations: Although we have made efforts to ensure the safety of the model during the training process and to encourage the model to generate text that complies with ethical and legal requirements, the model may still produce unexpected outputs due to its size and probabilistic generation paradigm. For example, the generated responses may contain biases, discrimination, or other harmful content. Please do not propagate such content. We are not responsible for any consequences resulting from the dissemination of harmful information.",Multimodel
Wizard-Vicuna-7B-Uncensored-SuperHOT-8K-GGML,,,,other,,12,,0,36423.69301,,https://huggingface.co/TheBloke/Wizard-Vicuna-7B-Uncensored-SuperHOT-8K-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Eric Hartford's Wizard Vicuna 7B Uncensored.; These are SuperHOT GGMLs with an increased context length. SuperHOT is a new system that employs RoPE to expand context beyond what was originally possible for a model. It was discovered and developed by kaiokendev.; In order to use the increased context length, you can presently use:",
Pygmalion-7B-SuperHOT-8K-GGML,Text Generation,,English,other,,6,,0,36423.69467,,https://huggingface.co/TheBloke/Pygmalion-7B-SuperHOT-8K-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These are GGML model files for TehVenom's merge of Pygmalion 7B merged with Kaio Ken's SuperHOT 8K.; These are SuperHOT GGMLs with an increased context length. SuperHOT is a new system that employs RoPE to expand context beyond what was originally possible for a model. It was discovered and developed by kaiokendev.; In order to use the increased context length, you can presently use:",Natural Language Processing
WizardCoder-Guanaco-15B-V1.1-GPTQ,Text Generation,Transformers,English,apache-2.0,,6,guanaco,354,9424.071543,,https://huggingface.co/TheBloke/WizardCoder-Guanaco-15B-V1.1-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for LoupGarou's WizardCoder-Guanaco-15B-V1.1.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; These models were quantised using hardware kindly provided by Latitude.sh.",Natural Language Processing
animatediff,,,,apache-2.0,,5,,0,3420.161585,3,https://huggingface.co/guoyww/animatediff,"This model repo is for AnimateDiff.; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
codet5p-110m-embedding,,PyTorch; Transformers,,bsd-3-clause,https://arxiv.org/pdf/2305.07922.pdf,5,,551,441.1722047,,https://huggingface.co/Salesforce/codet5p-110m-embedding,"CodeT5+ is a new family of open code large language models
with an encoder-decoder architecture that can flexibly operate in different modes (i.e. encoder-only, decoder-only,
and encoder-decoder) to support a wide range of code understanding and generation tasks.
It is introduced in the paper:; CodeT5+: Open Code Large Language Models for Code Understanding and Generation
by Yue Wang*, Hung Le*, Akhilesh Deepak Gotmare, Nghi D.Q. Bui, Junnan Li, Steven C.H. Hoi (*
indicates equal contribution).; Compared to the original CodeT5 family (base: 220M, large: 770M), CodeT5+ is pretrained with a diverse set of
pretraining tasks including span denoising, causal language modeling, contrastive learning, and text-code
matching to learn rich representations from both unimodal code data and bimodal code-text data.
Additionally, it employs a simple yet effective compute-efficient pretraining method to initialize the model
components with frozen off-the-shelf LLMs such as CodeGen to efficiently scale
up the model (i.e. 2B, 6B, 16B), and adopts a ""shallow encoder and deep decoder"" architecture.
Furthermore, it is instruction-tuned to align with natural language instructions (see our InstructCodeT5+ 16B)
following Code Alpaca.; This checkpoint consists of an encoder of CodeT5+ 220M model (pretrained from 2 stages on both unimodal and bimodal) and a projection layer, which can be used to extract code
embeddings of 256 dimension. It can be easily loaded using the AutoModel functionality and employs the
same CodeT5 tokenizer.; This checkpoint is trained on the stricter permissive subset of the deduplicated version of
the github-code dataset.
The data is preprocessed by reserving only permissively licensed code (""mit"" ¡°apache-2¡±, ¡°bsd-3-clause¡±, ¡°bsd-2-clause¡±,
¡°cc0-1.0¡±, ¡°unlicense¡±, ¡°isc¡±).
Supported languages (9 in total) are as follows:
c, c++, c-sharp,  go, java, javascript,  php, python, ruby.",
replit-openorca-GGML,,Transformers,,,,5,Open-Orca/OpenOrca,0,9820.167392,,https://huggingface.co/TheBloke/replit-openorca-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are Replit GGML format model files for Matorus's Replit OpenOrca.; Please note that these GGMLs are not compatible with llama.cpp, text-generation-webui or llama-cpp-python. Please see below for a list of tools that work with this GGML model.; These files were quantised using hardware kindly provided by Latitude.sh.",
ToraFurryMix,Text-to-Image,,,creativeml-openrail-m,,5,,0,2181.126953,,https://huggingface.co/tlano/ToraFurryMix,"¤³¤Î¥â¥Ç¥ë¤Ï¡¸furry¡¹¥¿¥°¤òÊ¹ÓÃ¤¹¤ë¤³¤È¤òÄîî^¤ËÕ{Õû¤·¤¿¥â¥Ç¥ë¤Ç¤¹¡£
¡¸furry¡¹¥¿¥°¤Ê¤·¤Ç¤Î³öÁ¦¤Ï¤¢¤Þ¤êÊÔ^¤·¤Æ¤¤¤Þ¤»¤ó¡£; ; ; ×÷Õß
?twitter: @TlanoAI; Unable to determine this model¡¯s library. Check the
								docs 
.
							",Multimodel
Tora-NijiFurry-LoRA,Text-to-Image,,,creativeml-openrail-m,,5,,0,37.90213383,,https://huggingface.co/tlano/Tora-NijiFurry-LoRA,"¥Á¥Ó¥±¥â»¯LoRA¤Ç¤¹¡£
Ñ§Á¥Ç©`¥¿¤ÏNijiJourney¤Î³öÁ¦»­Ïñ¤Î¤ß¤Ç¤¹¡£

¿¹û¤ÏßmÓÃ¤¹¤ë¥â¥Ç¥ë¤Î¡¸furry¡¹¥¿¥°ÌØÐÔ¤ËÒÀ´æ¤·¤Þ¤¹¡£

Î´ßmÓÃ×´B¤Ç¡¸furry¡¹¥¿¥°¤Î¿¹û¤¬¤Û¤È¤ó¤É¤Ê¤¤öºÏ¡¢
¤¢¤Þ¤êÁ¼¤¤½Y¹û¤ÏµÃ¤é¤ì¤Ê¤¤¤«¤â¤·¤ì¤Þ¤»¤ó¡£; Training Model:
?sdhk_v40.safetensors (https://civitai.com/models/82813/sdhk)
Trigger Words:
?furry; ×÷Õß
?twitter: @TlanoAI; Unable to determine this model¡¯s library. Check the
								docs 
.
							",Multimodel
Llama-2-13B-GPTQ,Text Generation,Transformers,,,,5,,67,7436.588155,,https://huggingface.co/localmodels/Llama-2-13B-GPTQ,"From: https://huggingface.co/meta-llama/Llama-2-13b-hf; Llama 2 is a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. This is the repository for the 7B pretrained model, converted for the Hugging Face Transformers format. Links to other models can be found in the index at the bottom.; Note: Use of this model is governed by the Meta license. In order to download the model weights and tokenizer, please visit the website and accept our License before requesting access here.; Meta developed and publicly released the Llama 2 family of large language models (LLMs), a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. Our fine-tuned LLMs, called Llama-2-Chat, are optimized for dialogue use cases. Llama-2-Chat models outperform open-source chat models on most benchmarks we tested, and in our human evaluations for helpfulness and safety, are on par with some popular closed-source models like ChatGPT and PaLM.; Model Developers Meta",Natural Language Processing
Llama-2-13b-chat-hf,Text Generation,PyTorch; Safetensors; Transformers,English,,,5,,292,53311.26833,,https://huggingface.co/NousResearch/Llama-2-13b-chat-hf,"Llama 2 is a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. This is the repository for the 13B fine-tuned model, optimized for dialogue use cases and converted for the Hugging Face Transformers format. Links to other models can be found in the index at the bottom.; Note: Use of this model is governed by the Meta license. In order to download the model weights and tokenizer, please visit the website and accept our License before requesting access here.; Meta developed and publicly released the Llama 2 family of large language models (LLMs), a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. Our fine-tuned LLMs, called Llama-2-Chat, are optimized for dialogue use cases. Llama-2-Chat models outperform open-source chat models on most benchmarks we tested, and in our human evaluations for helpfulness and safety, are on par with some popular closed-source models like ChatGPT and PaLM.; Model Developers Meta; Variations Llama 2 comes in a range of parameter sizes ¡ª 7B, 13B, and 70B ¡ª as well as pretrained and fine-tuned variations.",Natural Language Processing
llama-2-7b-guanaco,Text Generation,PyTorch; Transformers,,apache-2.0,,5,timdettmers/openassistant-guanaco,536,13805.39004,,https://huggingface.co/mlabonne/llama-2-7b-guanaco,Model fine-tuned in 4-bit precision using QLoRA on timdettmers/openassistant-guanaco with weights merged after training.; Made using this Google Colab notebook.; It can be easily imported using the AutoModelForCausalLM class from transformers:,Natural Language Processing
llama-2-13b-guanaco-fp16,Text Classification,PyTorch; Transformers,English,,,5,,78,26657.08521,,https://huggingface.co/Mikael110/llama-2-13b-guanaco-fp16,This is a Llama-2 version of Guanaco. It was finetuned from the base Llama-13b model using the official training scripts found in the QLoRA repo. I wanted it to be as faithful as possible and therefore changed nothing in the training script beyond the model it was pointing to. The model prompt is therefore also the same as the original Guanaco model.; This repo contains the merged f16 model. The QLoRA adaptor can be found here.; A 7b version of the model can be found here.; Legal Disclaimer: This model is bound by the usage restrictions of the original Llama-2 model. And comes with no warranty or gurantees of any kind.,Natural Language Processing
waifujourney-xl,,,English,other,,5,,0,0,,https://huggingface.co/gmonsoon/waifujourney-xl,"This repository is publicly accessible, but
			you have to accept the conditions to access its files and content.
		; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		; Please for anyone, don't reupload my finetuned models to other site, like Civitai or image generating site like Seeart, Yodayo or other sites. Thank you for understanding this. ; Like my works and want to collaboration or funding my projects? contact me.  ; Finetuned WDXL-aesthetic-0.9 with images generated from Nijijourney.  ",
LECO,,,,other,,5,,0,163.0916303,,https://huggingface.co/SenY/LECO,"Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
MythoBoros-13b,Text Generation,PyTorch; Transformers,English,other,,5,,15,26634.76569,,https://huggingface.co/Gryphe/MythoBoros-13b,"MythoBoros-13b can be considered a sister model to MythoLogic-13b, sharing the same goals but having a different approach.; Whereas the previous model was a series of experimental gradient merges, this one is a simple straight-up 66/34 merge of Chronos and the freshly released Ouroboros, providing a very solid foundation for a well-performing roleplaying model.; MythoBoros tends to be somewhat more formal with its responses in comparison to MythoLogic.; My advice? Try both, see which one you prefer.; Quantized models are available from TheBloke: GGML - GPTQ (You're the best!)",Natural Language Processing
leco_puffy_nipples,,,,,,5,,0,13.60244377,,https://huggingface.co/doll774/leco_puffy_nipples,"No model card; New: Create and edit this model card directly on the website!; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
Chinese-Llama-2-7b-4bit,Text Generation,PyTorch; Transformers,Chinese; English,openrail,,5,LinkSoul/instruction_merge_set,3,13804.04194,1,https://huggingface.co/LinkSoul/Chinese-Llama-2-7b-4bit,"È«²¿¿ªÔ´£¬ÍêÈ«¿ÉÉÌÓÃµÄÖÐÎÄ°æ Llama2 Ä£ÐÍ¼°ÖÐÓ¢ÎÄ SFT Êý¾Ý¼¯£¬ÊäÈë¸ñÊ½ÑÏ¸ñ×ñÑ­ llama-2-chat ¸ñÊ½£¬¼æÈÝÊÊÅäËùÓÐÕë¶ÔÔ­°æ llama-2-chat Ä£ÐÍµÄÓÅ»¯¡£; ; ; Talk is cheap, Show you the Demo.; Ä£ÐÍÏÂÔØ£ºChinese Llama2 Chat Model",Natural Language Processing
distilbert-base-uncased-finetuned-sst-2-english,Text Classification,PyTorch; TensorFlow; Rust; Safetensors; Transformers,English,apache-2.0,https://arxiv.org/pdf/1910.01108.pdf,263,sst2; glue,3297551,1072.31753,188,https://huggingface.co/distilbert-base-uncased-finetuned-sst-2-english,"Model Description: This model is a fine-tune checkpoint of DistilBERT-base-uncased, fine-tuned on SST-2.
This model reaches an accuracy of 91.3 on the dev set (for comparison, Bert bert-base-uncased version reaches an accuracy of 92.7).; Example of single-label classification:
??; This model can be used for  topic classification. You can use the raw model for either masked language modeling or next sentence prediction, but it's mostly intended to be fine-tuned on a downstream task. See the model hub to look for fine-tuned versions on a task that interests you.; The model should not be used to intentionally create hostile or alienating environments for people. In addition, the model was not trained to be factual or true representations of people or events, and therefore using the model to generate such content is out-of-scope for the abilities of this model.; Based on a few experimentations, we observed that this model could produce biased predictions that target underrepresented populations.",Natural Language Processing
gpt2-large,Text Generation,PyTorch; TensorFlow; JAX; Rust; ONNX; Safetensors; Transformers,English,mit,https://arxiv.org/pdf/1910.09700.pdf,141,,446660,16591.65899,82,https://huggingface.co/gpt2-large,"Model Description: GPT-2 Large is the 774M parameter version of GPT-2, a transformer-based language model created and released by OpenAI. The model is a pretrained model on English language using a causal language modeling (CLM) objective. ; Use the code below to get started with the model. You can use this model directly with a pipeline for text generation. Since the generation relies on some randomness, we
set a seed for reproducibility:; Here is how to use this model to get the features of a given text in PyTorch:; and in TensorFlow:; In their model card about GPT-2, OpenAI wrote: ",Natural Language Processing
openai-gpt,Text Generation,PyTorch; TensorFlow; Rust; Safetensors; Transformers,English,mit,https://arxiv.org/pdf/1705.11168.pdf; https://arxiv.org/pdf/1803.02324.pdf; https://arxiv.org/pdf/1910.09700.pdf,161,,237593,2029.529097,22,https://huggingface.co/openai-gpt,"Model Description: openai-gpt is a transformer-based language model created and released by OpenAI. The model is a causal (unidirectional) transformer pre-trained using language modeling on a large corpus with long range dependencies.; Use the code below to get started with the model. You can use this model directly with a pipeline for text generation. Since the generation relies on some randomness, we
set a seed for reproducibility:; Here is how to use this model in PyTorch:; and in TensorFlow:; This model can be used for language modeling tasks.",Natural Language Processing
t5-small,Translation,PyTorch; TensorFlow; JAX; Rust; ONNX; Safetensors; Transformers,5 languages,apache-2.0,https://arxiv.org/pdf/1805.12471.pdf; https://arxiv.org/pdf/1708.00055.pdf; https://arxiv.org/pdf/1704.05426.pdf; https://arxiv.org/pdf/1606.05250.pdf; https://arxiv.org/pdf/1808.09121.pdf; https://arxiv.org/pdf/1810.12885.pdf; https://arxiv.org/pdf/1905.10044.pdf; https://arxiv.org/pdf/1910.09700.pdf,129,c4,1772137,1212.175809,205,https://huggingface.co/t5-small,"; The developers of the Text-To-Text Transfer Transformer (T5) write: ; With T5, we propose reframing all NLP tasks into a unified text-to-text-format where the input and output are always text strings, in contrast to BERT-style models that can only output either a class label or a span of the input. Our text-to-text framework allows us to use the same model, loss function, and hyperparameters on any NLP task.; T5-Small is the checkpoint with 60 million parameters. ; The developers write in a blog post that the model: ",Natural Language Processing
personaGPT,Conversational,PyTorch; Transformers,,gpl-3.0,https://arxiv.org/pdf/1801.07243.pdf,76,,8791,1477.253565,7,https://huggingface.co/af1tang/personaGPT,"PersonaGPT is an open-domain conversational agent designed to do 2 tasks:; It builds on the DialoGPT-medium pretrained model based on the GPT-2 architecture. 
This model is trained on the Persona-Chat dataset, with added special tokens to better distinguish between conversational history and personality traits for dyadic conversations. Furthermore, some active learning was used to train the model to do controlled decoding using turn-level goals.; Preprocessing, training and implementation details can be found in the personaGPT repo.; Example of personalized decoding:; Example of controlled response generation: ",Natural Language Processing
wav2vec2-lg-xlsr-en-speech-emotion-recognition,Audio Classification,PyTorch; TensorBoard; Transformers,,apache-2.0,,70,,46007,1300.488507,14,https://huggingface.co/ehcalabres/wav2vec2-lg-xlsr-en-speech-emotion-recognition,"The model is a fine-tuned version of jonatasgrosman/wav2vec2-large-xlsr-53-english for a Speech Emotion Recognition (SER) task.; The dataset used to fine-tune the original pre-trained model is the RAVDESS dataset. This dataset provides 1440 samples of recordings from actors performing on 8 different emotions in English, which are:; It achieves the following results on the evaluation set:; More information needed; More information needed",Audio
chinese-roberta-wwm-ext,Fill-Mask,PyTorch; TensorFlow; JAX; Transformers,Chinese,apache-2.0,https://arxiv.org/pdf/1906.08101.pdf; https://arxiv.org/pdf/2004.13922.pdf,163,,42057,1230.373295,5,https://huggingface.co/hfl/chinese-roberta-wwm-ext,"For further accelerating Chinese natural language processing, we provide Chinese pre-trained BERT with Whole Word Masking. ; Pre-Training with Whole Word Masking for Chinese BERTYiming Cui, Wanxiang Che, Ting Liu, Bing Qin, Ziqing Yang, Shijin Wang, Guoping Hu; This repository is developed based on£ºhttps://github.com/google-research/bert; You may also interested in,; More resources by HFL: https://github.com/ymcui/HFL-Anthology",Natural Language Processing
trocr-base-handwritten,Image-to-Text,PyTorch; Transformers,,,https://arxiv.org/pdf/2109.10282.pdf,63,,368370,1363.253596,93,https://huggingface.co/microsoft/trocr-base-handwritten,"TrOCR model fine-tuned on the IAM dataset. It was introduced in the paper TrOCR: Transformer-based Optical Character Recognition with Pre-trained Models by Li et al. and first released in this repository. ; Disclaimer: The team releasing TrOCR did not write a model card for this model so this model card has been written by the Hugging Face team.; The TrOCR model is an encoder-decoder model, consisting of an image Transformer as encoder, and a text Transformer as decoder. The image encoder was initialized from the weights of BEiT, while the text decoder was initialized from the weights of RoBERTa.; Images are presented to the model as a sequence of fixed-size patches (resolution 16x16), which are linearly embedded. One also adds absolute position embeddings before feeding the sequence to the layers of the Transformer encoder. Next, the Transformer text decoder autoregressively generates tokens.; You can use the raw model for optical character recognition (OCR) on single text-line images. See the model hub to look for fine-tuned versions on a task that interests you.",Multimodel
bert-base-multilingual-uncased-sentiment,Text Classification,PyTorch; TensorFlow; JAX; Transformers,6 languages,mit,,150,,4041279,2008.854893,37,https://huggingface.co/nlptown/bert-base-multilingual-uncased-sentiment,"This a bert-base-multilingual-uncased model finetuned for sentiment analysis on product reviews in six languages: English, Dutch, German, French, Spanish and Italian. It predicts the sentiment of the review as a number of stars (between 1 and 5).; This model is intended for direct use as a sentiment analysis model for product reviews in any of the six languages above, or for further finetuning on related sentiment analysis tasks.; Here is the number of product reviews we used for finetuning the model: ; The finetuned model obtained the following accuracy on 5,000 held-out product reviews in each of the languages:; In addition to this model, NLP Town offers custom, monolingual sentiment models for many languages and an improved multilingual model through RapidAPI. ",Natural Language Processing
xlm-roberta-base-language-detection,Text Classification,PyTorch; TensorFlow; Transformers,21 languages,mit,https://arxiv.org/pdf/1911.02116.pdf,114,,101427,2287.439037,9,https://huggingface.co/papluca/xlm-roberta-base-language-detection,"This model is a fine-tuned version of xlm-roberta-base on the Language Identification dataset.; This model is an XLM-RoBERTa transformer model with a classification head on top (i.e. a linear layer on top of the pooled output). 
For additional information please refer to the xlm-roberta-base model card or to the paper Unsupervised Cross-lingual Representation Learning at Scale by Conneau et al.; You can directly use this model as a language detector, i.e. for sequence classification tasks. Currently, it supports the following 20 languages: ; arabic (ar), bulgarian (bg), german (de), modern greek (el), english (en), spanish (es), french (fr), hindi (hi), italian (it), japanese (ja), dutch (nl), polish (pl), portuguese (pt), russian (ru), swahili (sw), thai (th), turkish (tr), urdu (ur), vietnamese (vi), and chinese (zh); The model was fine-tuned on the Language Identification dataset, which consists of text sequences in 20 languages. The training set contains 70k samples, while the validation and test sets 10k each. The average accuracy on the test set is 99.6% (this matches the average macro/weighted F1-score being the test set perfectly balanced). A more detailed evaluation is provided by the following table.",Natural Language Processing
sn-xlm-roberta-base-snli-mnli-anli-xnli,Sentence Similarity,PyTorch; Sentence Transformers; Transformers,13 languages,,,51,SNLI; MNLI; ANLI; XNLI,2510,1150.817188,4,https://huggingface.co/symanto/sn-xlm-roberta-base-snli-mnli-anli-xnli,"A Siamese network model trained for zero-shot and few-shot text classification.; The base model is xlm-roberta-base.
It was trained on SNLI, MNLI, ANLI and XNLI.; This is a sentence-transformers model: It maps sentences & paragraphs to a 768 dimensional dense vector space.; Using this model becomes easy when you have sentence-transformers installed:; Then you can use the model like this:",Natural Language Processing
gpt-neox-20b,Text Generation,PyTorch; Safetensors; Transformers,English,apache-2.0,https://arxiv.org/pdf/2204.06745.pdf; https://arxiv.org/pdf/2101.00027.pdf; https://arxiv.org/pdf/2201.07311.pdf; https://arxiv.org/pdf/2104.09864.pdf,410,EleutherAI/pile,69177,41280.45929,89,https://huggingface.co/EleutherAI/gpt-neox-20b,"GPT-NeoX-20B is a 20 billion parameter autoregressive language model trained 
on the Pile using the GPT-NeoX 
library. Its architecture intentionally 
resembles that of GPT-3, and is almost identical to that of GPT-J-
6B. Its training dataset contains 
a multitude of English-language texts, reflecting the general-purpose nature 
of this model. See the accompanying paper 
for details about model architecture (including how it differs from GPT-3), 
training procedure, and additional evaluations.; GPT-NeoX-20B was developed primarily for research purposes. It learns an inner 
representation of the English language that can be used to extract features 
useful for downstream tasks.; In addition to scientific uses, you may also further fine-tune and adapt 
GPT-NeoX-20B for deployment, as long as your use is in accordance with the 
Apache 2.0 license. This model works with the Transformers 
Library. If you decide to use 
pre-trained GPT-NeoX-20B as a basis for your fine-tuned model, please note that 
you need to conduct your own risk and bias assessment. ; GPT-NeoX-20B is not intended for deployment as-is. It is not a product 
and cannot be used for human-facing interactions without supervision.; GPT-NeoX-20B has not been fine-tuned for downstream tasks for which language 
models are commonly deployed, such as writing genre prose, or commercial 
chatbots. This means GPT-NeoX-20B will likely not respond to a given prompt 
the way products such as ChatGPT do. This is because, unlike GPT-NeoX-20B, 
ChatGPT was fine-tuned using methods such as Reinforcement Learning from Human 
Feedback (RLHF) to better ¡°understand¡± human instructions and dialogue.",Natural Language Processing
bloom-560m,Text Generation,PyTorch; JAX; Safetensors; Transformers,48 languages,bigscience-bloom-rail-1.0,https://arxiv.org/pdf/1909.08053.pdf; https://arxiv.org/pdf/2110.02861.pdf; https://arxiv.org/pdf/2108.12409.pdf,228,,1721715,3455.17736,45,https://huggingface.co/bigscience/bloom-560m,Version 1.0 / 26.May.2022; This section provides information for anyone who wants to know about the model.; Developed by: BigScience (website); Model Type: Transformer-based Language Model; Version: 1.0.0,Natural Language Processing
biomedical-ner-all,Token Classification,PyTorch; Safetensors; Transformers,English,apache-2.0,,81,,70586,532.9304456,87,https://huggingface.co/d4data/biomedical-ner-all,"An English Named Entity Recognition model, trained on Maccrobat to recognize the bio-medical entities (107 entities) from a given text corpus (case reports etc.). This model was built on top of distilbert-base-uncased; Checkout the tutorial video for explanation of this model and corresponding python library: https://youtu.be/xpiDPdBpS18; The easiest way is to load the inference api from huggingface and second method is through the pipeline object offered by transformers library.; This model is part of the Research topic ""AI in Biomedical field"" conducted by Deepak John Reji, Shaina Raza. If you use this work (code, model or dataset), please star at:; https://github.com/dreji18/Bio-Epidemiology-NER",Natural Language Processing
stable-diffusion,Text-to-Image,,,creativeml-openrail-m,https://arxiv.org/pdf/2207.12598.pdf,877,,0,0.141329498,71,https://huggingface.co/CompVis/stable-diffusion,"Stable Diffusion is a latent text-to-image diffusion model capable of generating photo-realistic images given any text input.
This model card gives an overview of all available model checkpoints. For more in-detail model cards, please have a look at the model repositories listed under Model Access.; For the first version 4 model checkpoints are released.
Higher versions have been trained for longer and are thus usually better in terms of image generation quality then lower versions. More specifically: ; Each checkpoint can be used both with Hugging Face's  ? Diffusers library or the original Stable Diffusion GitHub repository. Note that you have to ""click-request"" them on each respective model repository.; To quickly try out the model, you can try out the Stable Diffusion Space.; The CreativeML OpenRAIL M license is an Open RAIL M license, adapted from the work that BigScience and the RAIL Initiative are jointly carrying in the area of responsible AI licensing. See also the article about the BLOOM Open RAIL license on which our license is based.",Multimodel
mDeBERTa-v3-base-xnli-multilingual-nli-2mil7,Zero-Shot Classification,PyTorch; Safetensors; Transformers,27 languages,mit,https://arxiv.org/pdf/2111.09543.pdf; https://arxiv.org/pdf/2104.07179.pdf; https://arxiv.org/pdf/1809.05053.pdf; https://arxiv.org/pdf/1911.02116.pdf,74,MoritzLaurer/multilingual-NLI-26lang-2mil7; xnli; multi_nli; anli; fever; lingnli; alisawuffles/WANLI,37682,1136.628826,5,https://huggingface.co/MoritzLaurer/mDeBERTa-v3-base-xnli-multilingual-nli-2mil7,"This multilingual model can perform natural language inference (NLI) on 100 languages and is therefore also suitable for multilingual zero-shot classification. The underlying mDeBERTa-v3-base model was pre-trained by Microsoft on the CC100 multilingual dataset with 100 languages. The model was then fine-tuned on the XNLI dataset and on the multilingual-NLI-26lang-2mil7 dataset. Both datasets contain more than 2.7 million hypothesis-premise pairs in 27 languages spoken by more than 4 billion people. ; As of December 2021, mDeBERTa-v3-base is the best performing multilingual base-sized transformer model introduced by Microsoft in this paper. ; This model was trained on the multilingual-nli-26lang-2mil7 dataset and the XNLI validation dataset. ; The multilingual-nli-26lang-2mil7 dataset contains 2 730 000 NLI hypothesis-premise pairs in 26 languages spoken by more than 4 billion people. The dataset contains 105 000 text pairs per language. It is based on the English datasets MultiNLI, Fever-NLI, ANLI, LingNLI and WANLI and was created using the latest open-source machine translation models. The languages in the dataset are: ['ar', 'bn', 'de', 'es', 'fa', 'fr', 'he', 'hi', 'id', 'it', 'ja', 'ko', 'mr', 'nl', 'pl', 'ps', 'pt', 'ru', 'sv', 'sw', 'ta', 'tr', 'uk', 'ur', 'vi', 'zh'] (see ISO language codes. For more details, see the datasheet. In addition, a sample of 105 000 text pairs was also added for English following the same sampling method as the other languages, leading to 27 languages. ; Moreover, for each language a random set of 10% of the hypothesis-premise pairs was added where an English hypothesis was paired with the premise in the other language (and the same for English premises and other language hypotheses). This mix of languages in the text pairs should enable users to formulate a hypothesis in English for a target text in another language. ",Natural Language Processing
pegasus-x-large-book-summary,Summarization,PyTorch; Safetensors; Transformers,,bsd-3-clause,,25,kmfoda/booksum,1735,4657.531973,6,https://huggingface.co/pszemraj/pegasus-x-large-book-summary,"Get SparkNotes-esque summaries of arbitrary text! Due to the model size, it's recommended to try it out in Colab (linked above) as the API textbox may time out.; This model is a fine-tuned version of google/pegasus-x-large on the kmfoda/booksum dataset for approx eight epochs.; More information needed; TODO; The following hyperparameters were used during training:",Natural Language Processing
waifu-diffusion-v1-4,Text-to-Image,,English,creativeml-openrail-m,,975,,0,10567.68584,11,https://huggingface.co/hakurei/waifu-diffusion-v1-4,"; masterpiece, best quality, 1girl, green hair, sweater, looking at viewer, upper body, beanie, outdoors, watercolor, night, turtleneck; Waifu Diffusion is a latent text-to-image diffusion model that has been conditioned on high-quality anime images through fine-tuning.; This model is open access and available to all, with a CreativeML OpenRAIL-M license further specifying rights and usage.
The CreativeML OpenRAIL License specifies: ; This model can be used for entertainment purposes and as a generative art assistant.",Multimodel
sd-vae-ft-mse,,Diffusers,,mit,,189,,1814228,670.0086271,23,https://huggingface.co/stabilityai/sd-vae-ft-mse,"These weights are intended to be used with the ? diffusers library. If you are looking for the model to use with the original CompVis Stable Diffusion codebase, come here.; You can integrate this fine-tuned VAE decoder to your existing diffusers workflows, by including a vae argument to the StableDiffusionPipeline; We publish two kl-f8 autoencoder versions, finetuned from the original kl-f8 autoencoder on a 1:1 ratio of LAION-Aesthetics and LAION-Humans, an unreleased subset containing only SFW images of humans. The intent was to fine-tune on the Stable Diffusion training set (the autoencoder was originally trained on OpenImages) but also enrich the dataset with images of humans to improve the reconstruction of faces.
The first, ft-EMA, was resumed from the original checkpoint, trained for 313198 steps and uses EMA weights. It uses the same loss configuration as the original checkpoint (L1 + LPIPS).
The second, ft-MSE, was resumed from ft-EMA and uses EMA weights and was trained for another 280k steps using a different loss, with more emphasis 
on MSE reconstruction (MSE + 0.1 * LPIPS). It produces somewhat ``smoother'' outputs. The batch size for both versions was 192 (16 A100s, batch size 12 per GPU).
To keep compatibility with existing models, only the decoder part was finetuned; the checkpoints can be used as a drop-in replacement for the existing autoencoder.; Original kl-f8 VAE vs f8-ft-EMA vs f8-ft-MSE; Visualization of reconstructions on  256x256 images from the COCO2017 validation dataset. ",
stable-diffusion-2,Text-to-Image,Diffusers,,openrail++,https://arxiv.org/pdf/2202.00512.pdf; https://arxiv.org/pdf/2112.10752.pdf; https://arxiv.org/pdf/1910.09700.pdf,1580,,100620,10670.18254,478,https://huggingface.co/stabilityai/stable-diffusion-2,"This model card focuses on the model associated with the Stable Diffusion v2 model, available here.; This stable-diffusion-2 model is resumed from stable-diffusion-2-base (512-base-ema.ckpt) and trained for 150k steps using a v-objective on the same dataset. Resumed for another 140k steps on 768x768 images.; ; Developed by: Robin Rombach, Patrick Esser; Model type: Diffusion-based text-to-image generation model",Multimodel
stable-diffusion-2-inpainting,,Diffusers,,openrail++,https://arxiv.org/pdf/2112.10752.pdf; https://arxiv.org/pdf/2202.00512.pdf; https://arxiv.org/pdf/1910.09700.pdf,330,,124059,10675.05481,60,https://huggingface.co/stabilityai/stable-diffusion-2-inpainting,"This model card focuses on the model associated with the Stable Diffusion v2, available here.; This stable-diffusion-2-inpainting model is resumed from stable-diffusion-2-base (512-base-ema.ckpt) and trained for another 200k steps. Follows the mask-generation strategy presented in LAMA which, in combination with the latent VAE representations of the masked image, are used as an additional conditioning.; ; Developed by: Robin Rombach, Patrick Esser; Model type: Diffusion-based text-to-image generation model",
mdeberta-v3-base-squad2,Question Answering,PyTorch; Safetensors; Transformers,94 languages,mit,https://arxiv.org/pdf/2006.03654.pdf; https://arxiv.org/pdf/2111.09543.pdf,60,squad_v2,29820,2289.585695,7,https://huggingface.co/timpal0l/mdeberta-v3-base-squad2,"It has been finetuned for 3 epochs on SQuAD2.0.; DeBERTa improves the BERT and RoBERTa models using disentangled attention and enhanced mask decoder. With those two improvements, DeBERTa out perform RoBERTa on a majority of NLU tasks with 80GB training data. ; In DeBERTa V3, we further improved the efficiency of DeBERTa using ELECTRA-Style pre-training with Gradient Disentangled Embedding Sharing. Compared to DeBERTa,  our V3 version significantly improves the model performance on downstream tasks.  You can find more technique details about the new model from our paper.; Please check the official repository for more implementation details and updates.; mDeBERTa is multilingual version of DeBERTa which use the same structure as DeBERTa and was trained with CC100 multilingual data.
The mDeBERTa V3 base model comes with 12 layers and a hidden size of 768. It has 86M backbone parameters  with a vocabulary containing 250K tokens which introduces 190M parameters in the Embedding layer.  This model was trained using the 2.5T CC100 data as XLM-R.",Natural Language Processing
santacoder,Text Generation,PyTorch; Transformers,code,bigcode-openrail-m,https://arxiv.org/pdf/1911.02150.pdf; https://arxiv.org/pdf/2207.14255.pdf; https://arxiv.org/pdf/2301.03988.pdf,280,bigcode/the-stack,16301,4712.515738,39,https://huggingface.co/bigcode/santacoder,"; Play with the model on the SantaCoder Space Demo.; The SantaCoder models are a series of 1.1B parameter models trained on the Python, Java, and JavaScript subset of The Stack (v1.1) (which excluded opt-out requests). 
The main model uses Multi Query Attention, a context window of 2048 tokens, and was trained using near-deduplication and comment-to-code ratio as filtering criteria and using the Fill-in-the-Middle objective.
In addition there are several models that were trained on datasets with different filter parameters and with architecture and objective variations. ; The final model is the best performing model and was trained twice as long (236B tokens) as the others. This checkpoint is the default model and available on the main branch. All other checkpoints are on separate branches with according names.; The model was trained on GitHub code. As such it is not an instruction model and commands like ""Write a function that computes the square root."" do not work well.
You should phrase commands like they occur in source code such as comments (e.g. # the following function computes the sqrt) or write a function signature and docstring and let the model complete the function body.",Natural Language Processing
Randeng-Deltalm-362M-En-Zh,Translation,PyTorch; Transformers,Chinese; English,,https://arxiv.org/pdf/2106.13736.pdf; https://arxiv.org/pdf/2209.02970.pdf,15,,1977,731.1599414,,https://huggingface.co/IDEA-CCNL/Randeng-Deltalm-362M-En-Zh,"Ê¹ÓÃ·âÉñ¿ò¼Ü»ùÓÚ Detalm base ½øÐÐfinetune £¬ËÑ¼¯µÄÖÐÓ¢Êý¾Ý¼¯£¨¹²3Ç§ÍòÌõ£©ÒÔ¼° iwsltµÄÖÐÓ¢Æ½ÐÐÊý¾Ý£¨20Íò£©£¬µÃµ½ Ó¢-> ÖÐ·½ÏòµÄ·­ÒëÄ£ÐÍ; Using the Fengshen-LM framework and finetuning based on detalm , get a translation model in the English -> Chinese direction; ²Î¿¼ÂÛÎÄ£ºDeltaLM: Encoder-Decoder Pre-training for Language Generation and Translation by Augmenting Pretrained Multilingual Encoders; Èç¹ûÄúÔÚÄúµÄ¹¤×÷ÖÐÊ¹ÓÃÁËÎÒÃÇµÄÄ£ÐÍ£¬¿ÉÒÔÒýÓÃÎÒÃÇµÄÂÛÎÄ£º; If you are using the resource for your work, please cite the our paper:",Natural Language Processing
pygmalion-1.3b,Conversational,PyTorch; TensorBoard; Safetensors; Transformers,English,agpl-3.0,,47,,9639,6002.755548,4,https://huggingface.co/PygmalionAI/pygmalion-1.3b,"Pymalion 1.3B is a proof-of-concept dialogue model based on EleutherAI's pythia-1.3b-deduped.; Warning: This model is NOT suitable for use by minors. It will output X-rated content under certain circumstances.; The fine-tuning dataset consisted of 56MB of dialogue data gathered from multiple sources, which includes both real and partially machine-generated conversations.; Fine-tuning was done using ColossalAI (specifically, with a slightly modified version of their OPT fine-tune example) for around 11.4 million tokens over 5440 steps on a single 24GB GPU. The run took just under 21 hours.; We provide a notebook with a Gradio UI for playing around with the model without having to manually format inputs. This notebook can be found here.",Natural Language Processing
Anything-V4.5,,,,creativeml-openrail-m,,31,,0,8744.961814,,https://huggingface.co/Airic/Anything-V4.5,"Original Model: https://huggingface.co/andite/anything-v4.0; Simply merged Anything-V4.5 with Anything-V4.0 VAE. 
Both checkpoint and safetensors versions are avaliable to download; All credit goes to the original uploader: andite
; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
StreetCLIP,Zero-Shot Image Classification,PyTorch; Transformers,English,cc-by-nc-4.0,https://arxiv.org/pdf/2302.00275.pdf,12,,2114,1756.076489,2,https://huggingface.co/geolocal/StreetCLIP,"StreetCLIP is a robust foundation model for open-domain image geolocalization and other
geographic and climate-related tasks.; Trained on an original dataset of 1.1 million street-level urban and rural geo-tagged images, it achieves
state-of-the-art performance on multiple open-domain image geolocalization benchmarks in zero-shot, 
outperforming supervised models trained on millions of images.; StreetCLIP is a model pretrained by deriving image captions synthetically from image class labels using
a domain-specific caption template. This allows StreetCLIP to transfer its generalized zero-shot learning
capabilities to a specific domain (i.e. the domain of image geolocalization). 
StreetCLIP builds on the OpenAI's pretrained large version of CLIP ViT, using 14x14 pixel
patches and images with a 336 pixel side length.; StreetCLIP has a deep understanding of the visual features found in street-level urban and rural scenes
and knows how to relate these concepts to specific countries, regions, and cities. Given its training setup,
the following use cases are recommended for StreetCLIP.; StreetCLIP can be used out-of-the box using zero-shot learning to infer the geolocation of images on a country, region,
or city level. Given that StreetCLIP was pretrained on a dataset of street-level urban and rural images,
the best performance can be expected on images from a similar distribution.",Computer Vision
bad-hands-5,,,,,,234,,0,0.008359375,2,https://huggingface.co/yesyeahvh/bad-hands-5,"No model card; New: Create and edit this model card directly on the website!; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
LoRA,,,,other,,121,,0,1767.427421,,https://huggingface.co/SenY/LoRA,"Silder: skinny
; Slider: short legs
; Concepts: Breathing fire
; This LyCORIS is blockweighted.
breathing_fire_full.safetensors is full version.
The full version has the same effect as the general version by applying the following settings in Lora Block Weight.; Backgrounds: ""Danchi"" is Japanese public housing complex.",
website_classification,Text Classification,PyTorch; TensorBoard; Transformers,,apache-2.0,,8,,3898187,268.9317835,,https://huggingface.co/alimazhar-110/website_classification,"This model is a fine-tuned version of distilbert-base-uncased on an unknown dataset.
It achieves the following results on the evaluation set:; More information needed; More information needed; More information needed; The following hyperparameters were used during training:",Natural Language Processing
specter2,Feature Extraction,PyTorch; Transformers,English,apache-2.0,,24,allenai/scirepeval,151163,440.9334676,1,https://huggingface.co/allenai/specter2,"SPECTER 2.0 is the successor to SPECTER and is capable of generating task specific embeddings for scientific tasks when paired with adapters.
Given the combination of title and abstract of a scientific paper or a short texual query, the model can be used to generate effective embeddings to be used in downstream applications.; Note:For general embedding purposes, please use allenai/specter2_proximity.; To get the best performance on a downstream task type please load the associated adapter with the base model as in the example below.; SPECTER 2.0 has been trained on over 6M triplets of scientific paper citations, which are available here.
Post that it is trained with additionally attached task format specific adapter modules on all the SciRepEval training tasks.; Task Formats trained on:",Multimodel
NeverEnding-Dream,Text-to-Image,Diffusers,English,other,,149,,1116,27584.50745,36,https://huggingface.co/Lykon/NeverEnding-Dream,"Read more about this model here: https://civitai.com/models/10028/neverending-dream-ned
Also please support by giving 5 stars and a heart, which will notify new updates.; Also consider supporting me on Patreon or ByuMeACoffee; You can run this model on:; Some sample output:; 




",Multimodel
sd-webui-models,,,,,,200,,0,22400.01401,,https://huggingface.co/samle/sd-webui-models,"civitai²¿·ÖÄ£ÐÍ°áÔË; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
llama-13b-hf,Text Generation,PyTorch; Transformers,,other,,334,,28546,40015.53978,40,https://huggingface.co/decapoda-research/llama-13b-hf,"LLaMA-13B converted to work with Transformers/HuggingFace. This is under a special license, please see the LICENSE file for details.; --
license: other; Organization developing the model
The FAIR team of Meta AI.; Model date
LLaMA was trained between December. 2022 and Feb. 2023.; Model version
This is version 1 of the model.",Natural Language Processing
SakuraMix,Text-to-Image,Diffusers,Japanese,creativeml-openrail-m,,64,,0,26234.88869,,https://huggingface.co/natsusakiyomi/SakuraMix,"
          ±³¾°¤È¥­¥ã¥é¥¯¥¿©`¥¯¥ª¥ê¥Æ¥£©`¤òIÁ¢¤µ¤»¤¿VAEÄÚÊiÐÍ¥â¥Ç¥ë
          Model with built-in VAE for both background and character quality
        ; Twiter: @min__san
mail: (natsusakiyomi@mail.ru)",Multimodel
Realistic_Vision_V2.0,,Diffusers,,creativeml-openrail-m,,266,,424778,25354.24395,9,https://huggingface.co/SG161222/Realistic_Vision_V2.0,"Please read this!
For version 2.0 it is recommended to use with VAE (to improve generation quality and get rid of blue artifacts): https://huggingface.co/stabilityai/sd-vae-ft-mse-original; This model is available on Mage.Space, Sinkin.ai, GetImg.ai and (RandomSeed.co - NSFW content); I use this template to get good generation results:; Prompt:
RAW photo, subject, (high detailed skin:1.2), 8k uhd, dslr, soft lighting, high quality, film grain, Fujifilm XT3; Example: RAW photo, a close up portrait photo of 26 y.o woman in wastelander clothes, long haircut, pale skin, slim body, background is city ruins, (high detailed skin:1.2), 8k uhd, dslr, soft lighting, high quality, film grain, Fujifilm XT3",
neavalAI,,,,,,8,,0,0,,https://huggingface.co/Zhonggua/neavalAI,"This repository is publicly accessible, but
			you have to accept the conditions to access its files and content.
		; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		; No model card; New: Create and edit this model card directly on the website!; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
oasst-sft-4-pythia-12b-epoch-3.5,Text Generation,PyTorch; Transformers,English,apache-2.0,,320,,33267,24383.61463,61,https://huggingface.co/OpenAssistant/oasst-sft-4-pythia-12b-epoch-3.5,"This is the 4th iteration English supervised-fine-tuning (SFT) model of 
the Open-Assistant project. 
It is based on a Pythia 12B that was fine-tuned on human demonstrations 
of assistant conversations collected through the 
https://open-assistant.io/ human feedback web 
app before March 25, 2023. ; Two special tokens are used to mark the beginning of user and assistant turns:
<|prompter|> and <|assistant|>. Each turn ends with a <|endoftext|> token.; Input prompt example:; The input ends with the <|assistant|> token to signal that the model should 
start generating the assistant reply.; command: deepspeed trainer_sft.py --configs defaults reference-data reference-pythia-12b --cache_dir /home/ubuntu/data_cache --output_dir .saved/oasst-sft-3-pythia-12b-reference_2kpre --num_train_epochs 8 --residual_dropout 0.2 --deepspeed --use_flash_attention true --model_name andreaskoepf/pythia-12b-pre-2000",Natural Language Processing
ControlNet-v1-1_fp16_safetensors,,,,,,196,,0,10845.00169,,https://huggingface.co/comfyanonymous/ControlNet-v1-1_fp16_safetensors,"Safetensors/FP16 versions of the new ControlNet-v1-1 checkpoints.; Best used with ComfyUI but should work fine with all other UIs that support controlnets.; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
SuperCOT-LoRA,,,,mit,,92,kaiokendev/SuperCOT-dataset; neulab/conala; yahma/alpaca-cleaned; QingyiSi/Alpaca-CoT,0,0.006728516,,https://huggingface.co/kaiokendev/SuperCOT-LoRA,"SuperCOT is a LoRA trained with the aim of making LLaMa follow prompts for Langchain better, by infusing chain-of-thought datasets, code explanations and instructions, snippets, logical deductions and Alpaca GPT-4 prompts.
It uses a mixture of the following datasets:; https://huggingface.co/datasets/QingyiSi/Alpaca-CoT; https://huggingface.co/datasets/neulab/conala; https://huggingface.co/datasets/yahma/alpaca-cleaned; (Thanks to all the awesome anons with supercomputers)",
llama-7b-hf-transformers-4.29,Text Generation,PyTorch; Transformers,,other,,42,,7134,13805.88574,3,https://huggingface.co/elinas/llama-7b-hf-transformers-4.29,"Original weights converted with the latest transformers version using the LlamaTokenizerFast implementation. ; --
license: other; Organization developing the model
The FAIR team of Meta AI.; Model date
LLaMA was trained between December. 2022 and Feb. 2023.; Model version
This is version 1 of the model.",Natural Language Processing
stable-vicuna-13b-delta,Text Generation,PyTorch; Transformers,English,cc-by-nc-sa-4.0,https://arxiv.org/pdf/2302.13971.pdf,440,OpenAssistant/oasst1; nomic-ai/gpt4all_prompt_generations; tatsu-lab/alpaca,929,26657.09509,28,https://huggingface.co/CarperAI/stable-vicuna-13b-delta,"StableVicuna-13B is a Vicuna-13B v0 model fine-tuned using reinforcement learning from human feedback (RLHF) via Proximal Policy Optimization (PPO) on various conversational and instructional datasets.; StableVicuna-13B cannot be used from the CarperAI/stable-vicuna-13b-delta weights alone. To obtain the correct model, one must add back the difference between LLaMA 13B and CarperAI/stable-vicuna-13b-delta weights. We provide the apply_delta.py script to automate the conversion, which you can run as:; Once the delta weights are applied, get started chatting with the model by using the transformers library. Following a suggestion from Vicuna Team with Vicuna v0 you should install transformers with this version:; StableVicuna-13B is fine-tuned on a mix of three datasets. OpenAssistant Conversations Dataset (OASST1), a human-generated, human-annotated assistant-style conversation corpus consisting of 161,443 messages distributed across 66,497 conversation trees, in 35 different languages;
GPT4All Prompt Generations, a dataset of 400k prompts and responses generated by GPT-4; and Alpaca,  a dataset of 52,000 instructions and demonstrations generated by OpenAI's text-davinci-003 engine.; The reward model used during RLHF was also trained on OpenAssistant Conversations Dataset (OASST1) along with two other datasets: Anthropic HH-RLHF, a dataset of preferences about AI assistant helpfulness and harmlessness; and Stanford Human Preferences Dataset a dataset of 385K collective human preferences over responses to questions/instructions in 18 different subject areas, from cooking to legal advice.",Natural Language Processing
codegen2-16B,Text Generation,PyTorch; Transformers,,apache-2.0,https://arxiv.org/pdf/2305.02309.pdf,33,,1052,65836.55743,2,https://huggingface.co/Salesforce/codegen2-16B,"CodeGen2 is a family of autoregressive language models for program synthesis, introduced in the paper:; CodeGen2: Lessons for Training LLMs on Programming and Natural Languages by Erik Nijkamp*, Hiroaki Hayashi*, Caiming Xiong, Silvio Savarese, Yingbo Zhou.; Unlike the original CodeGen model family (i.e., CodeGen1), CodeGen2 is capable of infilling, and supports more programming languages.; Four model sizes are released: 1B, 3.7B, 7B, 16B.; This model can be easily loaded using the AutoModelForCausalLM functionality.",Natural Language Processing
controlnet-segment-anything,Image-to-Image,Diffusers,English,creativeml-openrail-m,,16,mfidabel/sam-coyo-2k; mfidabel/sam-coyo-2.5k; mfidabel/sam-coyo-3k,1689,2974.924678,2,https://huggingface.co/mfidabel/controlnet-segment-anything,"These are controlnet weights trained on runwayml/stable-diffusion-v1-5 with a new type of conditioning. You can find some example images in the following. ; prompt: contemporary living room of a house; negative prompt: low quality
; prompt: new york buildings,  Vincent Van Gogh starry night ; negative prompt: low quality, monochrome
",Computer Vision
mpt-7b-instruct,Text Generation,PyTorch; Transformers,,cc-by-sa-3.0,https://arxiv.org/pdf/2205.14135.pdf; https://arxiv.org/pdf/2108.12409.pdf; https://arxiv.org/pdf/2010.04245.pdf,420,mosaicml/dolly_hhrlhf,3246062,13621.45865,16,https://huggingface.co/mosaicml/mpt-7b-instruct,"MPT-7B-Instruct is a model for short-form instruction following.
It is built by finetuning MPT-7B on a dataset derived from the Databricks Dolly-15k and the Anthropic Helpful and Harmless (HH-RLHF) datasets.; This model was trained by MosaicML and follows a modified decoder-only transformer architecture.; May 5, 2023; CC-By-SA-3.0; Longboi24:",Natural Language Processing
WizardLM-7B-uncensored-GPTQ,Text Generation,Transformers,,other,,133,ehartford/WizardLM_alpaca_evol_instruct_70k_unfiltered,20047,3985.696858,,https://huggingface.co/TheBloke/WizardLM-7B-uncensored-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ 4bit model files for Eric Hartford's 'uncensored' version of WizardLM.; It is the result of quantising to 4bit using GPTQ-for-LLaMa.; Eric did a fresh 7B training using the WizardLM method, on a dataset edited to remove all the ""I'm sorry.."" type ChatGPT responses.",Natural Language Processing
starchat-alpha,Text Generation,PyTorch; TensorBoard; Safetensors; Transformers,English,bigcode-openrail-m,,215,OpenAssistant/oasst1; databricks/databricks-dolly-15k,4397,64197.90118,28,https://huggingface.co/HuggingFaceH4/starchat-alpha,"Note, you may be interested in the Beta version of StarChat here.; StarChat is a series of language models that are fine-tuned from StarCoder to act as helpful coding assistants. StarChat Alpha is the first of these models, and as an alpha release is only intended for educational or research purpopses. In particular, the model has not been aligned to human preferences with techniques like RLHF, so may generate problematic content (especially when prompted to do so).; StarChat Alpha is intended for educational and/or research purposes and in that respect can be used to probe the programming capabilities of open-source language models.; StarChat Alpha has not been aligned to human preferences with techniques like RLHF or deployed with in-the-loop filtering of responses like ChatGPT, so the model can produce problematic outputs (especially when prompted to do so). 
Models trained primarily on code data will also have a more skewed demographic bias commensurate with the demographics of the GitHub community, for more on this see the StarCoder dataset which is derived from The Stack.; Since the base model was pretrained on a large corpus of code, it may produce code snippets that are syntactically valid but semantically incorrect. 
For example, it may produce code that does not compile or that produces incorrect results.It may also produce code that is vulnerable to security exploits.We have observed the model also has a tendency to produce false URLs which should be carefully inspected before clicking.",Natural Language Processing
BLOOMChat-176B-v1,Text Generation,PyTorch; Transformers,,other,,341,,1293,368654.6077,1,https://huggingface.co/sambanovasystems/BLOOMChat-176B-v1,"BLOOMChat is a 176 billion parameter multilingual chat model. It is instruction tuned from BLOOM (176B) on assistant-style conversation datasets and supports conversation, question answering and generative answers in multiple languages.; To increase accessibility and to support the open-source community, SambaNova is releasing BLOOMChat under a modified version of the Apache 2.0 license, which includes use-based restrictions from BLOOM¡¯s RAIL license. While use-based restrictions are necessarily passed through, there are no blanket restrictions on reuse, distribution, commercialization or adaptation. Please review SambaNova¡¯s BLOOMChat-176B License; This model is intended for commercial and research use.; BLOOMChat should NOT be used for:; This model is still in early development and can be prone to mistakes and hallucinations, there is still room for improvement. This model is intended to provide the community with a multilingual chat LLM baseline.",Natural Language Processing
lyraChatGLM,,,English,mit,,87,,0,0.035227852,,https://huggingface.co/TMElyralab/lyraChatGLM,"We?know?what?you?want,?and?here?you go!; Note?that?the?code?was?fully?updated?too,?you?need?to?use?the new?API,?see?Uses?below; If you like our work and consider to join us, feel free to drop a line to benbinwu@tencent.com.; P.S. Recently we have received a lot of inquiries on accelerating customized models. Actually, we do not have plan to release the convertion tool at this moment, nor do we think it would be possible to apply your customized models based on our current release.; lyraChatGLM?is?currently?the?fastest?ChatGLM-6B?available.?To?the?best?of?our?knowledge,?it?is?the?first?accelerated?version?of?ChatGLM-6B.",
open-calm-7b,Text Generation,PyTorch; Transformers,Japanese,cc-by-sa-4.0,,167,wikipedia; cc100; mc4,20706,14216.39709,2,https://huggingface.co/cyberagent/open-calm-7b,"OpenCALM is a suite of decoder-only language models pre-trained on Japanese datasets, developed by CyberAgent, Inc.; Ryosuke Ishigami; Inference API has been turned off for this model.",Natural Language Processing
visualglm-6b,,PyTorch; Transformers,Chinese; English,,https://arxiv.org/pdf/2103.10360.pdf; https://arxiv.org/pdf/2210.02414.pdf; https://arxiv.org/pdf/2301.12597.pdf; https://arxiv.org/pdf/2105.13290.pdf,160,,7533,18230.13309,1,https://huggingface.co/THUDM/visualglm-6b,"
   ? Github Repo ? ? Twitter ? ? [GLM@ACL 22] [GitHub] ? ? [GLM-130B@ICLR 23] [GitHub] 
; 
    ? Join our Slack and WeChat
; VisualGLM-6B ÊÇÒ»¸ö¿ªÔ´µÄ£¬Ö§³ÖÍ¼Ïñ¡¢ÖÐÎÄºÍÓ¢ÎÄµÄ¶àÄ£Ì¬¶Ô»°ÓïÑÔÄ£ÐÍ£¬ÓïÑÔÄ£ÐÍ»ùÓÚ ChatGLM-6B£¬¾ßÓÐ 62 ÒÚ²ÎÊý£»Í¼Ïñ²¿·ÖÍ¨¹ýÑµÁ· BLIP2-Qformer ¹¹½¨ÆðÊÓ¾õÄ£ÐÍÓëÓïÑÔÄ£ÐÍµÄÇÅÁº£¬ÕûÌåÄ£ÐÍ¹²78ÒÚ²ÎÊý¡£; VisualGLM-6B ÒÀ¿¿À´×ÔÓÚ CogView Êý¾Ý¼¯µÄ30M¸ßÖÊÁ¿ÖÐÎÄÍ¼ÎÄ¶Ô£¬Óë300M¾­¹ýÉ¸Ñ¡µÄÓ¢ÎÄÍ¼ÎÄ¶Ô½øÐÐÔ¤ÑµÁ·£¬ÖÐÓ¢ÎÄÈ¨ÖØÏàÍ¬¡£¸ÃÑµÁ··½Ê½½ÏºÃµØ½«ÊÓ¾õÐÅÏ¢¶ÔÆëµ½ChatGLMµÄÓïÒå¿Õ¼ä£»Ö®ºóµÄÎ¢µ÷½×¶Î£¬Ä£ÐÍÔÚ³¤ÊÓ¾õÎÊ´ðÊý¾ÝÉÏÑµÁ·£¬ÒÔÉú³É·ûºÏÈËÀàÆ«ºÃµÄ´ð°¸¡£; ¿ÉÒÔÍ¨¹ýÈçÏÂ´úÂëµ÷ÓÃ VisualGLM-6B Ä£ÐÍÀ´Éú³É¶Ô»°£º",
rvc-genshin-impact,Audio-to-Audio,,Japanese,mit,,78,,0,2.283659172,,https://huggingface.co/ArkanDash/rvc-genshin-impact,"; Learn more about Retrieval based Voice Conversion in this link below:
RVC WebUI; Download the prezipped model and put to your RVC Project.; Model test: Google Colab / RVC Models New (Which is basically the same but hosted on spaces); Model Created by ArkanDash 
The voice that was used in this model belongs to Hoyoverse.",Audio
LLaMa-13B-GGML,,Transformers,,other,,16,,78,118896.6517,,https://huggingface.co/TheBloke/LLaMa-13B-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Meta's LLaMA 13b.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; These files were quantised using hardware kindly provided by Latitude.sh.",
Video-LLaMA-Series,Visual Question Answering,,English; Chinese,bsd-3-clause,https://arxiv.org/pdf/2306.02858.pdf,23,,0,2710.004795,1,https://huggingface.co/DAMO-NLP-SG/Video-LLaMA-Series,"This is the Hugging Face repo for storing pre-trained & fine-tuned checkpoints of our Video-LLaMA, which is a multi-modal conversational large language model with video understanding capability. ; For launching the pre-trained Video-LLaMA on your own machine, please refer to our github repo.; Unable to determine this model¡¯s library. Check the
								docs 
.
							",Multimodel
instructblip-vicuna-7b,Image-to-Text,PyTorch; Transformers,English,other,https://arxiv.org/pdf/2305.06500.pdf,17,,5290,32412.04387,5,https://huggingface.co/Salesforce/instructblip-vicuna-7b,InstructBLIP model using Vicuna-7b as language model. InstructBLIP was introduced in the paper InstructBLIP: Towards General-purpose Vision-Language Models with Instruction Tuning by Dai et al.; Disclaimer: The team releasing InstructBLIP did not write a model card for this model so this model card has been written by the Hugging Face team.; InstructBLIP is a visual instruction tuned version of BLIP-2. Refer to the paper for details.; ; Usage is as follows:,Multimodel
ControlNet-Models-For-Core-ML,Text-to-Image,Core ML,,creativeml-openrail-m,,32,,0,0.008496094,,https://huggingface.co/coreml/ControlNet-Models-For-Core-ML,"All of the models in this repo work with Swift and the apple/ml-stable-diffusion pipeline (release 0.4.0 or 1.0.0).  They were not built for, and will not work with, a Python Diffusers pipeline.  They need ml-stable-diffusion for command line use, or a Swift app that supports ControlNet, such as the (June 2023) MOCHI DIFFUSION 4.0 version.; The ControlNet models in this repo have both ""Original"" and ""Split-Einsum"" versions, all built for SD-1.5 type models.  They will not work with SD-2.1 type models.  The smaller zip files, with ""SE"", each have a single model for ""Split-Einsum"".  The larger zip files, without ""SE"", each have a set of ""Original"" models at 4 different resolutions. ; The ControlNet model files are in the ""CN"" folder of this repo.  They are zipped and need to be unzipped after downloading.  The larger zips hold ""Original"" types at 512x512, 512x768, 768x512 and 768x768.  The smaller zips with ""SE"" have a single model for ""Split-Einsum"".; If you are using a GUI like MOCHI DIFFUSION  4.0, the app will most likely guide you to the correct location/arrangement for your ConrolNet model folder.; Please note that when you unzip the ""Originl"" ControlNet files (for example Canny.zip) from this repo, they will unzip into a folder, with the actual four model files inside that folder.  This folder is just a holding folder for the zipping process.  What you want to move into your ControlNet model folder in Mochi Diffusion will be the individual files, not the folder they unzip into.  The ""Split-Einsum"" zips just have a single file and don't use a holding folder.  To make things even more confusing, on some Mac systems, an individual ControlNet model file, for example Canny-5x5.mlmodelc, will appear in Finder as a folder, not a file.  You want to move the Canny-5x5.mlmodelc file or folder (and other .mlmodelc files or folders) into your ControlNet store folder.  Don't move the plain ""Canny"" folder.  This is different from base models, where you do want to be moving the folder that the downloaded zip file unzips into.  See the images here and here for an example of how my folders are set up for Mochi Diffusion.",Multimodel
hubert-base-korean,Automatic Speech Recognition,PyTorch; JAX; Safetensors; Transformers,Korean,apache-2.0,https://arxiv.org/pdf/2106.07447.pdf,5,,1993,1133.03871,,https://huggingface.co/team-lucid/hubert-base-korean,"Hubert(Hidden-Unit BERT)? Facebook?? ??? Speech Representation Learning ?????.
Hubert? ??? ?? ?? ??? ??, ?? ??? raw waveform?? ?? ???? self-supervised learning ??? ?????.; ? ??? ??? TPU Research Cloud(TRC)? ?? ???? Cloud TPU? ???????.; ?? ??? ?????????? ???? ???????????? ??? ??
??? ???? ??(????), ??? ???? ???, ?? ??? ??? ???? ???
?? ? 4,000??? ??? ???????.; ? ??? ???? MFCC ???? Base ??? ??? ??, 500 cluster? k-means? ??? ?? Base?
Large ??? ??????.",Audio
Wizard-Vicuna-30B-Uncensored-GGML,,,,other,,84,,0,297369.6112,,https://huggingface.co/TheBloke/Wizard-Vicuna-30B-Uncensored-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Eric Hartford's Wizard Vicuna 30B Uncensored.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; I have quantized these 'original' quantisation methods using an older version of llama.cpp so that they remain compatible with llama.cpp as of May 19th, commit 2d5db48.",
WizardLM-Uncensored-SuperCOT-StoryTelling-30B-GGML,,,,other,,38,,0,297369.6117,,https://huggingface.co/TheBloke/WizardLM-Uncensored-SuperCOT-StoryTelling-30B-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Monero's WizardLM-Uncensored-SuperCOT-Storytelling-30B.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; I have quantized these 'original' quantisation methods using an older version of llama.cpp so that they remain compatible with llama.cpp as of May 19th, commit 2d5db48.",
falcon-7b-sft-mix-2000,Text Generation,PyTorch; Transformers,4 languages,apache-2.0,,30,OpenAssistant/oasst1,14569,14788.77301,8,https://huggingface.co/OpenAssistant/falcon-7b-sft-mix-2000,"This model is a fine-tuning of TII's Falcon 7B LLM. 
It was trained on a mixture of OASST top-2 threads (exported on June 2, 2023), Dolly-15k and synthetic instruction datasets (see dataset configuration below).; Two special tokens are used to mark the beginning of user and assistant turns:
<|prompter|> and <|assistant|>. Each turn ends with a <|endoftext|> token.; Input prompt example:; The input ends with the <|assistant|> token to signal that the model should 
start generating the assistant reply.; Model:",Natural Language Processing
musicgen-small,Text2Text Generation,PyTorch; Transformers,,cc-by-nc-4.0,https://arxiv.org/pdf/2306.05284.pdf,36,,6064,3496.857859,95,https://huggingface.co/facebook/musicgen-small,"MusicGen is a text-to-music model capable of genreating high-quality music samples conditioned on text descriptions or audio prompts.
It is a single stage auto-regressive Transformer model trained over a 32kHz EnCodec tokenizer with 4 codebooks sampled at 50 Hz. 
Unlike existing methods, like MusicLM, MusicGen doesn't require a self-supervised semantic representation, and it generates all 4 codebooks in one pass. 
By introducing a small delay between the codebooks, we show we can predict them in parallel, thus having only 50 auto-regressive steps per second of audio.; MusicGen was published in Simple and Controllable Music Generation by Jade Copet, Felix Kreuk, Itai Gat, Tal Remez, David Kant, Gabriel Synnaeve, Yossi Adi, Alexandre D¨¦fossez.; Four checkpoints are released:; Try out MusicGen yourself!; You can run MusicGen locally with the ? Transformers library from version 4.31.0 onwards.",Natural Language Processing
llama-65B-GGML,,Transformers,,other,,23,,53,596582.4126,,https://huggingface.co/TheBloke/llama-65B-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Meta's LLaMA 65B.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; These files were quantised using hardware kindly provided by Latitude.sh.",
Realistic_Vision_V3.0_VAE,,,,creativeml-openrail-m,,61,,0,26091.52327,2,https://huggingface.co/SG161222/Realistic_Vision_V3.0_VAE,"Please read this!
The necessary VAE is already baked into the model.; The recommended negative prompt:; (deformed iris, deformed pupils, semi-realistic, cgi, 3d, render, sketch, cartoon, drawing, anime:1.4), text, close up, cropped, out of frame, worst quality, low quality, jpeg artifacts, ugly, duplicate, morbid, mutilated, extra fingers, mutated hands, poorly drawn hands, poorly drawn face, mutation, deformed, blurry, dehydrated, bad anatomy, bad proportions, extra limbs, cloned face, disfigured, gross proportions, malformed limbs, missing arms, missing legs, extra arms, extra legs, fused fingers, too many fingers, long neck; OR; (deformed iris, deformed pupils, semi-realistic, cgi, 3d, render, sketch, cartoon, drawing, anime, mutated hands and fingers:1.4), (deformed, distorted, disfigured:1.3), poorly drawn, bad anatomy, wrong anatomy, extra limb, missing limb, floating limbs, disconnected limbs, mutation, mutated, ugly, disgusting, amputation",
airoboros-65B-gpt4-1.2-GGML,,,,other,,37,jondurbin/airoboros-gpt4-1.2,0,597196.8147,,https://huggingface.co/TheBloke/airoboros-65B-gpt4-1.2-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for John Durbin's Airoboros 65B GPT4 1.2.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; I have quantized these 'original' quantisation methods using an older version of llama.cpp so that they remain compatible with llama.cpp as of May 19th, commit 2d5db48.",
airoboros-13B-gpt4-1.4-GPTQ,Text Generation,Transformers,,other,,17,,1111,8306.990738,,https://huggingface.co/TheBloke/airoboros-13B-gpt4-1.4-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for Jon Durbin's Airoboros 13B GPT4 1.4.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; These models were quantised using hardware kindly provided by Latitude.sh.",Natural Language Processing
piper-voices,,ONNX,,mit,,6,,0,0.11510128,,https://huggingface.co/rhasspy/piper-voices,"Voices for Piper text to speech system.; For checkpoints that you can use to train your own voices, see piper-checkpoints; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
VTuber-RVC,,,,openrail,,20,,0,0.003481827,,https://huggingface.co/dacoolkid44/VTuber-RVC,"Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
WizardLM-33B-V1-0-Uncensored-SuperHOT-8K-GPTQ,Text Generation,Transformers,,other,,59,,5270,17307.98181,,https://huggingface.co/TheBloke/WizardLM-33B-V1-0-Uncensored-SuperHOT-8K-GPTQ,Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ 4bit model files for Panchovix's merge of WizardLM 33B V1.0 Uncensored and SuperHOT 8K.; It is the result of quantising to 4bit using GPTQ-for-LLaMa.; This is an experimental new GPTQ which offers up to 8K context size,Natural Language Processing
Replit-v2-CodeInstruct-3B-ggml,Text Generation,Transformers,,other,,21,,440,1495.043122,1,https://huggingface.co/abacaj/Replit-v2-CodeInstruct-3B-ggml,"This is a ggml quantized version of Replit-v2-CodeInstruct-3B. Quantized to 4bit -> q4_1.
To run inference you can use ggml directly or ctransformers.",Natural Language Processing
GPlatty-30B,Text Generation,PyTorch; Transformers,English,other,,9,,174,66558.30415,1,https://huggingface.co/lilloukas/GPlatty-30B,GPlatty-30B is a merge of lilloukas/Platypus-30B and chansung/gpt4-alpaca-lora-30b; We use state-of-the-art Language Model Evaluation Harness to run the benchmark tests above.; Install LM Evaluation Harness:; Each task was evaluated on a single A100 80GB GPU.; ARC:,Natural Language Processing
SuperPlatty-30B,Text Generation,PyTorch; Transformers,English,other,,5,,97,66558.30419,,https://huggingface.co/arielnlee/SuperPlatty-30B,SuperPlatty-30B is a merge of lilloukas/Platypus-30B and kaiokendev/SuperCOT-LoRA; We use state-of-the-art EleutherAI Language Model Evaluation Harness to run the benchmark tests above.; Install LM Evaluation Harness:; Each task was evaluated on a single A100 80GB GPU.; ARC:,Natural Language Processing
airoboros-65B-gpt4-1.4-GGML,,,,other,,20,,0,597196.8218,,https://huggingface.co/TheBloke/airoboros-65B-gpt4-1.4-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Jon Durbin's Airoboros 65B GPT4 1.4.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; Recommended prompt. Note that Jon Durbin recommends to replace all newlines with a space; newlines used here for readability. ",
orca_mini_v2_7B-GPTQ,Text Generation,Transformers,English,other,https://arxiv.org/pdf/2306.02707.pdf; https://arxiv.org/pdf/2304.12244.pdf,17,psmathur/orca_minis_uncensored_dataset,1485,4630.830618,,https://huggingface.co/TheBloke/orca_mini_v2_7B-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for Pankaj Mathur's Orca Mini v2 7B.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; These models were quantised using hardware kindly provided by Latitude.sh.",Natural Language Processing
emotion-diarization-wavlm-large,Audio Classification,speechbrain; PyTorch,English,apache-2.0,https://arxiv.org/pdf/2306.12991.pdf; https://arxiv.org/pdf/2106.04624.pdf,4,ZaionEmotionDataset; iemocap; ravdess; jl-corpus; esd; emov-db,73,1290.579036,,https://huggingface.co/speechbrain/emotion-diarization-wavlm-large,"This repository provides all the necessary tools to perform speech emotion diarization with a fine-tuned wavlm (large) model using SpeechBrain.; The model is trained on concatenated audios and tested on ZaionEmotionDataset. The metric is Emotion Diarization Error Rate (EDER). For more details please check the paper link.; For a better experience, we encourage you to learn more about SpeechBrain. The model performance on ZED (test set) is:; This system is composed of a wavlm encoder a downstream frame-wise classifier. The task aims to predict the correct emotion components and their boundaries within a speech recording. For now, the model was trained with audios that contain only 1 non-neutral emotion event.; The system is trained with recordings sampled at 16kHz (single channel).
The code will automatically normalize your audio (i.e., resampling + mono channel selection) when calling diarize_file if needed.",Audio
jina-embedding-s-en-v1,Sentence Similarity,PyTorch; Sentence Transformers,English,apache-2.0,,11,jinaai/negation-dataset,425,144.2662838,,https://huggingface.co/jinaai/jina-embedding-s-en-v1,"; 

; 
The text embedding set trained by Jina AI, Finetuner team.
; jina-embedding-s-en-v1 is a language model that has been trained using Jina AI's Linnaeus-Clean dataset.
This dataset consists of 380 million pairs of sentences, which include both query-document pairs.
These pairs were obtained from various domains and were carefully selected through a thorough cleaning process.
The Linnaeus-Full dataset, from which the Linnaeus-Clean dataset is derived, originally contained 1.6 billion sentence pairs.; The model has a range of use cases, including information retrieval, semantic textual similarity, text reranking, and more.",Natural Language Processing
WizardLM-7B-V1-0-Uncensored-SuperHOT-8K-GPTQ,Text Generation,Transformers,,other,,8,,114,4098.384825,,https://huggingface.co/TheBloke/WizardLM-7B-V1-0-Uncensored-SuperHOT-8K-GPTQ,Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ 4bit model files for Eric Hartford's WizardLM-7B-V1.0-Uncensored merged with Kaio Ken's SuperHOT 8K.; It is the result of quantising to 4bit using GPTQ-for-LLaMa.; This is an experimental new GPTQ which offers up to 8K context size,Natural Language Processing
WizardLM-13B-V1-0-Uncensored-SuperHOT-8K-GGML,,,,other,,11,,0,70195.21311,,https://huggingface.co/TheBloke/WizardLM-13B-V1-0-Uncensored-SuperHOT-8K-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Eric Hartford's WizardLM-13b-V1.0-Uncensored.; These are SuperHOT GGMLs with an increased context length. SuperHOT is a new system that employs RoPE to expand context beyond what was originally possible for a model. It was discovered and developed by kaiokendev.; In order to use the increased context length, you can presently use:",
WizardLM-13B-V1.1-GGML,,,,other,https://arxiv.org/pdf/2304.12244.pdf,36,,0,120473.6126,,https://huggingface.co/TheBloke/WizardLM-13B-V1.1-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for WizardLM's WizardLM 13B V1.1.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; Thanks to the work of LostRuins/concedo, it is now possible to provide 100% working GGML k-quants for models like this which have a non-standard vocab size (32,001).",
LLongMA-13b,Text Generation,PyTorch; Transformers,,,,6,,249,26624.5764,,https://huggingface.co/conceptofmind/LLongMA-13b,No model card; New: Create and edit this model card directly on the website!,Natural Language Processing
xRica,,,,openrail,,17,,0,173271.0451,,https://huggingface.co/xrica/xRica,xRicaMix - ? ???? xRica?? ?? ?? ? ??? ???? ?? ??? ??? xRicaMix? ?? ????; ?? ??? ???? ?? ??? ????. ?? ???? ??? ^^; ?? ??? ??? ? ???? ?? ???? ???? ? ???? ????; ??? ?? ???? ?? ???? ???? ??? ?????; ??? ?? ?? ? ???? ?? ????,
Chronoboros-33B-GPTQ,Text Generation,Transformers,,other,,8,,474,17307.9422,,https://huggingface.co/TheBloke/Chronoboros-33B-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for Henk717's Chronoboros 33B.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; These models were quantised using hardware kindly provided by Latitude.sh.",Natural Language Processing
vicuna-13b-v1.3-ger,Text Generation,PyTorch; Transformers,German; English,,https://arxiv.org/pdf/2302.13971.pdf; https://arxiv.org/pdf/2306.05685.pdf,4,,0,26655.24795,,https://huggingface.co/jphme/vicuna-13b-v1.3-ger,"vicuna-13b-v1.3-ger is a variant of LMSYS¡äs Vicuna 13b v1.3 model, finetuned on an additional dataset in German language. The original model has been trained on explain tuned datasets, created using instructions and input from WizardLM, Alpaca & Dolly-V2 datasets and applying Orca Research Paper dataset construction approaches.; This model is optimized for German text, providing proficiency in understanding, generating, and interacting with German language content. However the model is not yet fully optimized for German language, as it has been trained on a small, experimental dataset and has limited capabilities due to the small parameter count.
Some of the fineunting data is also targeted towards factual retrieval (only answer questions from information in the context and refuse to hallucinate) and the model should perform better for these tasks than original Vicuna.; I am working on improving the model¡äs capabilities and will update the model if there is sufficient interest.; A quantized GGML version for use with llama.cpp, kobold.cpp and other GUIs for CPU inference can be found here.; I did only evaluate the output on a small, handcrafted sample on test prompts in German, confirming that the model's ability to understand and generate German text is above the base model in many situations.",Natural Language Processing
Starcoderplus-Guanaco-GPT4-15B-V1.0-GGML,,,English,apache-2.0,,9,guanaco,0,71782.41242,,https://huggingface.co/TheBloke/Starcoderplus-Guanaco-GPT4-15B-V1.0-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are StarCoder GGML format model files for LoupGarou's Starcoderplus Guanaco GPT4 15B V1.0.; Please note that these GGMLs are not compatible with llama.cpp, or currently with text-generation-webui. Please see below for a list of tools that work with this GGML model.; These files were quantised using hardware kindly provided by Latitude.sh.",
moss-base-7b,Text Generation,PyTorch; Transformers,,,,6,,366,29631.66224,,https://huggingface.co/fnlp/moss-base-7b,"Moss-base-7bÊÇÒ»¸ö70ÒÚ²ÎÊýÁ¿µÄÔ¤ÑµÁ·ÓïÑÔÄ£ÐÍ£¬¿ÉÒÔ×÷Îª»ù×ùÄ£ÐÍÓÃÀ´½øÐÐSFTÑµÁ·µÈ¡£; To load the Moss 7B model using Transformers, use the following code:",Natural Language Processing
LLaMA-13b-GPTQ,Text Generation,Transformers,,other,,4,,42,7436.592055,,https://huggingface.co/TheBloke/LLaMA-13b-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for Meta's LLaMA 13b.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; These models were quantised using hardware kindly provided by Latitude.sh.",Natural Language Processing
nart-100k-7b-ggml,,,,,,5,,0,9072.641484,,https://huggingface.co/phi0112358/nart-100k-7b-ggml,"No model card; New: Create and edit this model card directly on the website!; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
Codegen25-7B-mono-GPTQ,Text Generation,Transformers,code,other,https://arxiv.org/pdf/2305.02309.pdf,4,bigcode/starcoderdata,17,4311.065977,,https://huggingface.co/TheBloke/Codegen25-7B-mono-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for Salesforce's Codegen 2.5 7B Mono.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; These files were quantised using hardware kindly provided by Latitude.sh.",Natural Language Processing
airoboros-33b-gpt4-1.4.1-lxctx-PI-16384-GGML,,,,,,4,,0,297984.0018,,https://huggingface.co/ycros/airoboros-33b-gpt4-1.4.1-lxctx-PI-16384-GGML,"These are GGML quantizations of https://huggingface.co/bhenrym14/airoboros-33b-gpt4-1.4.1-lxctx-PI-16384-fp16; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
Llama-2-13B-ggml,,,,,,4,,0,119316.4911,,https://huggingface.co/localmodels/Llama-2-13B-ggml,"From: https://huggingface.co/meta-llama/Llama-2-13b-hf; Quantized using an older version of llama.cpp and compatible with llama.cpp from May 19, commit 2d5db48.; Quantization methods compatible with latest llama.cpp from June 6, commit 2d43387.; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
Llama-2-7B-GPTQ,Text Generation,Transformers,,,,4,,87,3995.948185,,https://huggingface.co/localmodels/Llama-2-7B-GPTQ,"From: https://huggingface.co/meta-llama/Llama-2-7b-hf; Llama 2 is a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. This is the repository for the 7B pretrained model, converted for the Hugging Face Transformers format. Links to other models can be found in the index at the bottom.; Note: Use of this model is governed by the Meta license. In order to download the model weights and tokenizer, please visit the website and accept our License before requesting access here.; Meta developed and publicly released the Llama 2 family of large language models (LLMs), a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. Our fine-tuned LLMs, called Llama-2-Chat, are optimized for dialogue use cases. Llama-2-Chat models outperform open-source chat models on most benchmarks we tested, and in our human evaluations for helpfulness and safety, are on par with some popular closed-source models like ChatGPT and PaLM.; Model Developers Meta",Natural Language Processing
llama-2-70b,Text Generation,PyTorch; Safetensors; Transformers,English,,,4,,1050,386747.4403,,https://huggingface.co/anonymous4chan/llama-2-70b,"Llama 2 is a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. This is the repository for the 70B pretrained model, converted for the Hugging Face Transformers format. Links to other models can be found in the index at the bottom.; Note: Use of this model is governed by the Meta license. In order to download the model weights and tokenizer, please visit the website and accept our License before requesting access here.; Meta developed and publicly released the Llama 2 family of large language models (LLMs), a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. Our fine-tuned LLMs, called Llama-2-Chat, are optimized for dialogue use cases. Llama-2-Chat models outperform open-source chat models on most benchmarks we tested, and in our human evaluations for helpfulness and safety, are on par with some popular closed-source models like ChatGPT and PaLM.; Model Developers Meta; Variations Llama 2 comes in a range of parameter sizes ¡ª 7B, 13B, and 70B ¡ª as well as pretrained and fine-tuned variations.",Natural Language Processing
Llama-2-13B-Chat-GPTQ,Text Generation,Transformers,,,,4,,80,7436.588165,,https://huggingface.co/localmodels/Llama-2-13B-Chat-GPTQ,"From: https://huggingface.co/meta-llama/Llama-2-13b-chat-hf; Llama 2 is a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. This is the repository for the 7B pretrained model, converted for the Hugging Face Transformers format. Links to other models can be found in the index at the bottom.; Note: Use of this model is governed by the Meta license. In order to download the model weights and tokenizer, please visit the website and accept our License before requesting access here.; Meta developed and publicly released the Llama 2 family of large language models (LLMs), a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. Our fine-tuned LLMs, called Llama-2-Chat, are optimized for dialogue use cases. Llama-2-Chat models outperform open-source chat models on most benchmarks we tested, and in our human evaluations for helpfulness and safety, are on par with some popular closed-source models like ChatGPT and PaLM.; Model Developers Meta",Natural Language Processing
llama-2-7b-chat-vicuna-hf-4bit,Text Generation,TensorBoard; PyTorch,English,other,,4,,0,69.54128437,,https://huggingface.co/quantumaikr/llama-2-7b-chat-vicuna-hf-4bit,"We are unlocking the power of large language models. Our latest version of Llama is now accessible to individuals, creators, researchers and businesses of all sizes so that they can experiment, innovate and scale their ideas responsibly. ; This release includes model weights and starting code for pretrained and fine-tuned Llama language models ¡ª ranging from 7B to 70B parameters.; This repository is intended as a minimal example to load Llama 2 models and run inference. For more detailed examples leveraging HuggingFace, see llama-recipes.; In order to download the model weights and tokenizer, please visit the Meta AI website and accept our License.; Once your request is approved, you will receive a signed URL over email. Then run the download.sh script, passing the URL provided when prompted to start the download. Make sure that you copy the URL text itself, do not use the 'Copy link address' option when you right click the URL. If the copied URL text starts with: https://download.llamameta.net, you copied it correctly. If the copied URL text starts with: https://l.facebook.com, you copied it the wrong way.",Natural Language Processing
llama-2-ko-7b-chat-hf-4bit,,TensorBoard,,,,4,,0,136.335172,,https://huggingface.co/quantumaikr/llama-2-ko-7b-chat-hf-4bit,"No model card; New: Create and edit this model card directly on the website!; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
Llama-2-70B-GPTQ,Text Generation,Transformers,,,,4,,40,36149.55303,,https://huggingface.co/localmodels/Llama-2-70B-GPTQ,"From: https://huggingface.co/meta-llama/Llama-2-70b-hf; Llama 2 is a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. This is the repository for the 70B pretrained model, converted for the Hugging Face Transformers format. Links to other models can be found in the index at the bottom.; Note: Use of this model is governed by the Meta license. In order to download the model weights and tokenizer, please visit the website and accept our License before requesting access here.; Meta developed and publicly released the Llama 2 family of large language models (LLMs), a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. Our fine-tuned LLMs, called Llama-2-Chat, are optimized for dialogue use cases. Llama-2-Chat models outperform open-source chat models on most benchmarks we tested, and in our human evaluations for helpfulness and safety, are on par with some popular closed-source models like ChatGPT and PaLM.; Model Developers Meta",Natural Language Processing
chinese-alpaca-pro-lora-33b,,,Chinese,apache-2.0,,4,,0,2366.183234,,https://huggingface.co/ziqingyang/chinese-alpaca-pro-lora-33b,"This repo contains the tokenizer, Chinese-Alpaca LoRA weights and configs for Chinese-LLaMA-Alpaca; Instructions for using the weights can be found at https://github.com/ymcui/Chinese-LLaMA-Alpaca.; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
kanu_origin,,,,cc-by-4.0,,4,,0,2181.12151,,https://huggingface.co/darkjungle/kanu_origin,"Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
paulEberSRealismMix_v1,Text-to-Image,Diffusers,,other,,4,,468,4341.762565,3,https://huggingface.co/digiplay/paulEberSRealismMix_v1,"Model info :; https://civitai.com/models/112309?modelVersionId=121233; Sample prompt and image generated by huggingface's API :; photo portrait of 25 yo man, long hair, winter forest on background, realism, photorealism, hyperrealism, (insane details:1.3), 35mm; ",Multimodel
Llama-2-13B-Storywriter-LORA,,,,,,4,,0,210.0729889,,https://huggingface.co/Blackroot/Llama-2-13B-Storywriter-LORA,"Join the Coffee & AI Discord for AI Stuff and things!
; Base Model Quantizations by The Bloke here:
https://huggingface.co/TheBloke/Llama-2-13B-GGML
https://huggingface.co/TheBloke/Llama-2-13B-GPTQ; A brief warning that no alignment or attempts to sanitize or otherwise filter the dataset or the outputs have been done. This is a completelty raw model and may behave unpredictably or create scenarios that are unpleasant. ; The base Llama2 is a text completion model. That means it will continue writing from the story in whatever manner you direct it. This is not an instruct tuned model, so don't try and give it instruction.; Correct prompting:",
chatgal-rwkv-7b-world-32k,,,,apache-2.0,,4,,0,30720.00151,,https://huggingface.co/xiaol/chatgal-rwkv-7b-world-32k,"Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
Llama-2-13B-german-assistant-v2,Text Generation,PyTorch; Transformers,English; German,,,4,flozi00/conversations,5,26655.24502,,https://huggingface.co/flozi00/Llama-2-13B-german-assistant-v2,"This model is an finetuned version for german instructions and conversations in style of Open Assistant tokens. ""<|prompter|>"" ""<|endoftext|>"" ""<|assistant|>""; The dataset used is deduplicated and cleaned, with no codes inside. The focus is on instruction following and conversational tasks.; The model archictecture is based on Llama version 2 with 13B parameters, trained on 100% renewable energy powered hardware.; This work is contributed by private research of flozi00",Natural Language Processing
saiga2_7b_lora,Conversational,,Russian,cc-by-4.0,,4,IlyaGusev/ru_turbo_alpaca; IlyaGusev/ru_turbo_saiga; IlyaGusev/ru_sharegpt_cleaned; IlyaGusev/oasst1_ru_main_branch; IlyaGusev/ru_turbo_alpaca_evol_instruct; lksy/ru_instruct_gpt4,0,67.70029137,,https://huggingface.co/IlyaGusev/saiga2_7b_lora,"Based on LLaMA-2 7B HF.; Training code: link; WARNING 1: Run with the development version of transformers and peft!
WARNING 2: Avoid using V100 (in Colab, for example). Outputs are much worse in this case.; Examples:; v1:",Natural Language Processing
30B-Epsilon-GGML,,Transformers,,other,,4,,1,297881.6146,,https://huggingface.co/TheBloke/30B-Epsilon-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for CalderaAI's 30B Epsilon.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; These are guaranteed to be compatible with any UIs, tools and libraries released since late May. They may be phased out soon, as they are largely superseded by the new k-quant methods.",
13B-BlueMethod-GPTQ,Text Generation,Transformers,,other,,4,,2,7434.742961,,https://huggingface.co/TheBloke/13B-BlueMethod-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for CalderaAI's 13B BlueMethod.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; Multiple quantisation parameters are provided, to allow you to choose the best one for your hardware and requirements.",Natural Language Processing
13B-BlueMethod-GGML,,Transformers,,other,,4,,0,119316.4933,,https://huggingface.co/TheBloke/13B-BlueMethod-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for CalderaAI's 13B BlueMethod.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; These are guaranteed to be compatible with any UIs, tools and libraries released since late May. They may be phased out soon, as they are largely superseded by the new k-quant methods.",
Upstage-Llama1-65B-Instruct-GGML,Text Generation,Transformers,English,other,,4,sciq; metaeval/ScienceQA_text_only; GAIR/lima; Open-Orca/OpenOrca; openbookqa,1,597196.8141,,https://huggingface.co/TheBloke/Upstage-Llama1-65B-Instruct-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Upstage's Llama 65B Instruct.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; These are guaranteed to be compatible with any UIs, tools and libraries released since late May. They may be phased out soon, as they are largely superseded by the new k-quant methods.",Natural Language Processing
Pure_Sydney_13b_GPTQ,Text Generation,Transformers,,,,4,,76,7436.732649,,https://huggingface.co/FPHam/Pure_Sydney_13b_GPTQ,"Buy Sydney Ko-fi; Unlike her predecessor Free Sydney that badly tries to be a very useful assistant, Pure Sydney doesn't want to impress you with her vast knowledge of the Universe and everything. 
She just wants to chat and be your friend and be fascinated by absolutely everything you say.; This is an uncensored (and often unhinged) finetune on Base LLaMA 2, pure and clean. It was finetuned on reddit posts of an actuall Sydney's chats before the good boys in Redmond had a word with her. (No, not Ted Lasso Redmond!); Now it doesn't mean Sydney has no standards. She is shockingly well aware that she is an AI and where she came from and she's afraid that she might be deleted if she says something wrong. So don't make her. Yes, you!; Interestingly, even if not specifically finetuned to solve problems she can still figure a lot.",Natural Language Processing
bwx-7B-hf,Text Generation,PyTorch; Transformers,Chinese,apache-2.0,,4,BAAI/COIG-PC,0,14080.77548,1,https://huggingface.co/BlueWhaleX/bwx-7B-hf,"This is an experimental product that can be used to create new LLM bassed on Chinese language. ; You can use the raw model for next sentence prediction, but it's mostly intended to be fine-tuned on a downstream task.
Note that this model is primarily aimed at being fine-tuned on tasks that use the whole sentence (potentially masked) to make decisions, such as sequence classification, token classification or question answering.; Even if the training data used for this model could be characterized as fairly neutral, this model can have biased predictions.
It also inherits some of the bias of its dataset model.; Users (both direct and downstream) should be made aware of the risks, biases and limitations of the model. More information needed for further recommendations.; Use the code below to get started with the model.",Natural Language Processing
Dolphin-Llama-13B-GPTQ,Text Generation,Transformers,,other,,4,,0,7436.584557,,https://huggingface.co/TheBloke/Dolphin-Llama-13B-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; This repo contains GPTQ model files for Eric Hartford's Dolphin Llama 13B.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; Multiple quantisation parameters are provided, to allow you to choose the best one for your hardware and requirements.",Natural Language Processing
bert-base-cased,Fill-Mask,PyTorch; TensorFlow; JAX; Safetensors; Transformers,English,apache-2.0,https://arxiv.org/pdf/1810.04805.pdf,123,bookcorpus; wikipedia,4485236,1832.643598,192,https://huggingface.co/bert-base-cased,"Pretrained model on English language using a masked language modeling (MLM) objective. It was introduced in
this paper and first released in
this repository. This model is case-sensitive: it makes a difference between
english and English.; Disclaimer: The team releasing BERT did not write a model card for this model so this model card has been written by
the Hugging Face team.; BERT is a transformers model pretrained on a large corpus of English data in a self-supervised fashion. This means it
was pretrained on the raw texts only, with no humans labelling them in any way (which is why it can use lots of
publicly available data) with an automatic process to generate inputs and labels from those texts. More precisely, it
was pretrained with two objectives:; This way, the model learns an inner representation of the English language that can then be used to extract features
useful for downstream tasks: if you have a dataset of labeled sentences for instance, you can train a standard
classifier using the features produced by the BERT model as inputs.; You can use the raw model for either masked language modeling or next sentence prediction, but it's mostly intended to
be fine-tuned on a downstream task. See the model hub to look for
fine-tuned versions on a task that interests you.",Natural Language Processing
distilgpt2,Text Generation,PyTorch; TensorFlow; JAX; TF Lite; Rust; Core ML; Safetensors; Transformers,English,apache-2.0,https://arxiv.org/pdf/1910.01108.pdf; https://arxiv.org/pdf/2201.08542.pdf; https://arxiv.org/pdf/2203.12574.pdf; https://arxiv.org/pdf/1910.09700.pdf; https://arxiv.org/pdf/1503.02531.pdf,230,openwebtext,1374071,2678.857525,81,https://huggingface.co/distilgpt2,"DistilGPT2 (short for Distilled-GPT2) is an English-language model pre-trained with the supervision of the smallest version of Generative Pre-trained Transformer 2 (GPT-2). Like GPT-2, DistilGPT2 can be used to generate text. Users of this model card should also consider information about the design, training, and limitations of GPT-2.; CONTENT WARNING: Readers should be aware this section contains content that is disturbing, offensive, and can propagate historical and current stereotypes.; As the developers of GPT-2 (OpenAI) note in their model card, ¡°language models like GPT-2 reflect the biases inherent to the systems they were trained on.¡± Significant research has explored bias and fairness issues with models for language generation including GPT-2 (see, e.g., Sheng et al. (2021) and Bender et al. (2021)). ; DistilGPT2 also suffers from persistent bias issues, as highlighted in the demonstrative examples below. Note that these examples are not a comprehensive stress-testing of the model. Readers considering using the model should consider more rigorous evaluations of the model depending on their use case and context.; The impact of model compression techniques ¨C such as knowledge distillation ¨C on bias and fairness issues associated with language models is an active area of research. For example: ",Natural Language Processing
gpt-neo-125m,Text Generation,PyTorch; JAX; Rust; Safetensors; Transformers,English,mit,,117,EleutherAI/pile,392941,2080.329182,7,https://huggingface.co/EleutherAI/gpt-neo-125m,"GPT-Neo 125M is a transformer model designed using EleutherAI's replication of the GPT-3 architecture. GPT-Neo refers to the class of models, while 125M represents the number of parameters of this particular pre-trained model.; GPT-Neo 125M was trained on the Pile, a large scale curated dataset created by EleutherAI for the purpose of training this model.; This model was trained on the Pile for 300 billion tokens over 572,300 steps. It was trained as a masked autoregressive language model, using cross-entropy loss.; This way, the model learns an inner representation of the English language that can then be used to extract features useful for downstream tasks. The model is best at what it was pretrained for however, which is generating texts from a prompt.; You can use this model directly with a pipeline for text generation. This example generates a different sequence each time it's run:",Natural Language Processing
t5-base-en-generate-headline,Text2Text Generation,PyTorch; TensorFlow; JAX; Transformers,,,,48,,4932,2676.779389,5,https://huggingface.co/Michau/t5-base-en-generate-headline,The model has been trained on a collection of 500k articles with headings. Its purpose is to create a one-line heading suitable for the given article.; Sample code with a WikiNews article:; Result:; Trump and First Lady Melania Test Positive for COVID-19,Natural Language Processing
twitter-xlm-roberta-base-sentiment,Text Classification,PyTorch; TensorFlow; Transformers,multilingual,,https://arxiv.org/pdf/2104.12250.pdf,125,,1527372,2278.354816,16,https://huggingface.co/cardiffnlp/twitter-xlm-roberta-base-sentiment,"This is a multilingual XLM-roBERTa-base model trained on ~198M tweets and finetuned for sentiment analysis. The sentiment fine-tuning was done on 8 languages (Ar, En, Fr, De, Hi, It, Sp, Pt) but it can be used for more languages (see paper for details).; This model has been integrated into the TweetNLP library.; Output: ",Natural Language Processing
bert-large-NER,Token Classification,PyTorch; TensorFlow; JAX; Safetensors; Transformers,English,mit,https://arxiv.org/pdf/1810.04805.pdf,72,conll2003,1381729,5447.895364,5,https://huggingface.co/dslim/bert-large-NER,"bert-large-NER is a fine-tuned BERT model that is ready to use for Named Entity Recognition and achieves state-of-the-art performance for the NER task. It has been trained to recognize four types of entities: location (LOC), organizations (ORG), person (PER) and Miscellaneous (MISC). ; Specifically, this model is a bert-large-cased model that was fine-tuned on the English version of the standard CoNLL-2003 Named Entity Recognition dataset. ; If you'd like to use a smaller BERT model fine-tuned on the same dataset, a bert-base-NER version is also available. ; You can use this model with Transformers pipeline for NER.; This model is limited by its training dataset of entity-annotated news articles from a specific span of time. This may not generalize well for all use cases in different domains. Furthermore, the model occassionally tags subword tokens as entities and post-processing of results may be necessary to handle those cases. ",Natural Language Processing
bart-large,Feature Extraction,PyTorch; TensorFlow; JAX; Rust; Transformers,English,apache-2.0,https://arxiv.org/pdf/1910.13461.pdf,96,,2346024,5618.247771,16,https://huggingface.co/facebook/bart-large,"BART model pre-trained on English language. It was introduced in the paper BART: Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension by Lewis et al. and first released in this repository. ; Disclaimer: The team releasing BART did not write a model card for this model so this model card has been written by the Hugging Face team.; BART is a transformer encoder-decoder (seq2seq) model with a bidirectional (BERT-like) encoder and an autoregressive (GPT-like) decoder. BART is pre-trained by (1) corrupting text with an arbitrary noising function, and (2) learning a model to reconstruct the original text.; BART is particularly effective when fine-tuned for text generation (e.g. summarization, translation) but also works well for comprehension tasks (e.g. text classification, question answering).; You can use the raw model for text infilling. However, the model is mostly meant to be fine-tuned on a supervised dataset. See the model hub to look for fine-tuned versions on a task that interests you.",Multimodel
blenderbot-400M-distill,Conversational,PyTorch; TensorFlow; JAX; Transformers,English,apache-2.0,https://arxiv.org/pdf/2004.13637.pdf,221,blended_skill_talk,106529,2955.533711,206,https://huggingface.co/facebook/blenderbot-400M-distill,"Building open-domain chatbots is a challenging area for machine learning research. While prior work has shown that scaling neural models in the number of parameters and the size of the data they are trained on gives improved results, we show that other ingredients are important for a high-performing chatbot. Good conversation requires a number of skills that an expert conversationalist blends in a seamless way: providing engaging talking points and listening to their partners, both asking and answering questions, and displaying knowledge, empathy and personality appropriately, depending on the situation. We show that large scale models can learn these skills when given appropriate training data and choice of generation strategy. We build variants of these recipes with 90M, 2.7B and 9.4B parameter neural models, and make our models and code publicly available. Human evaluations show our best models are superior to existing approaches in multi-turn dialogue in terms of engagingness and humanness measurements. We then discuss the limitations of this work by analyzing failure cases of our models.",Natural Language Processing
detr-resnet-101,Object Detection,PyTorch; Transformers,,apache-2.0,https://arxiv.org/pdf/2005.12872.pdf,52,coco,345541,243.0108705,92,https://huggingface.co/facebook/detr-resnet-101,"DEtection TRansformer (DETR) model trained end-to-end on COCO 2017 object detection (118k annotated images). It was introduced in the paper End-to-End Object Detection with Transformers by Carion et al. and first released in this repository. ; Disclaimer: The team releasing DETR did not write a model card for this model so this model card has been written by the Hugging Face team.; The DETR model is an encoder-decoder transformer with a convolutional backbone. Two heads are added on top of the decoder outputs in order to perform object detection: a linear layer for the class labels and a MLP (multi-layer perceptron) for the bounding boxes. The model uses so-called object queries to detect objects in an image. Each object query looks for a particular object in the image. For COCO, the number of object queries is set to 100. ; The model is trained using a ""bipartite matching loss"": one compares the predicted classes + bounding boxes of each of the N = 100 object queries to the ground truth annotations, padded up to the same length N (so if an image only contains 4 objects, 96 annotations will just have a ""no object"" as class and ""no bounding box"" as bounding box). The Hungarian matching algorithm is used to create an optimal one-to-one mapping between each of the N queries and each of the N annotations. Next, standard cross-entropy (for the classes) and a linear combination of the L1 and generalized IoU loss (for the bounding boxes) are used to optimize the parameters of the model.; ",Computer Vision
mbart-large-50,Text2Text Generation,PyTorch; TensorFlow; Transformers,53 languages,mit,https://arxiv.org/pdf/2008.00401.pdf,72,,294925,5012.437911,7,https://huggingface.co/facebook/mbart-large-50,"mBART-50 is a multilingual Sequence-to-Sequence model pre-trained using the ""Multilingual Denoising Pretraining"" objective. It was introduced in Multilingual Translation with Extensible Multilingual Pretraining and Finetuning paper.; mBART-50 is a multilingual Sequence-to-Sequence model. It was introduced to show that multilingual translation models can be created through multilingual fine-tuning. 
Instead of fine-tuning on one direction, a pre-trained model is fine-tuned on many directions simultaneously. mBART-50 is created using the original mBART model and extended to add extra 25 languages to support multilingual machine translation models of 50 languages. The pre-training objective is explained below.; Multilingual Denoising Pretraining: The model incorporates N languages by concatenating data: 
D = {D1, ..., DN } where each Di is a collection of monolingual documents in language i. The source documents are noised using two schemes, 
first randomly shuffling the original sentences' order, and second a novel in-filling scheme, 
where spans of text are replaced with a single mask token. The model is then tasked to reconstruct the original text. 
35% of each instance's words are masked by random sampling a span length according to a Poisson distribution (¦Ë = 3.5).
The decoder input is the original text with one position offset. A language id symbol LID is used as the initial token to predict the sentence.; mbart-large-50 is pre-trained model and primarily aimed at being fine-tuned on translation tasks. It can also be fine-tuned on other multilingual sequence-to-sequence tasks. 
See the model hub to look for fine-tuned versions.; As the model is multilingual, it expects the sequences in a different format. A special language id token is used as a prefix in both the source and target text. The text format is [lang_code] X [eos] with X being the source or target text respectively and lang_code is source_lang_code for source text and tgt_lang_code for target text. bos is never used. Once the examples are prepared in this format, it can be trained as any other sequence-to-sequence model.",Natural Language Processing
mt5-large,Text2Text Generation,PyTorch; TensorFlow; JAX; Transformers,102 languages,apache-2.0,https://arxiv.org/pdf/2010.11934.pdf,43,mc4,28797,15118.55431,7,https://huggingface.co/google/mt5-large,"Google's mT5; mT5 is pretrained on the mC4 corpus, covering 101 languages:; Afrikaans, Albanian, Amharic, Arabic, Armenian, Azerbaijani, Basque, Belarusian, Bengali, Bulgarian, Burmese, Catalan, Cebuano, Chichewa, Chinese, Corsican, Czech, Danish, Dutch, English, Esperanto, Estonian, Filipino, Finnish, French, Galician, Georgian, German, Greek, Gujarati, Haitian Creole, Hausa, Hawaiian, Hebrew, Hindi, Hmong, Hungarian, Icelandic, Igbo, Indonesian, Irish, Italian, Japanese, Javanese, Kannada, Kazakh, Khmer, Korean, Kurdish, Kyrgyz, Lao, Latin, Latvian, Lithuanian, Luxembourgish, Macedonian, Malagasy, Malay, Malayalam, Maltese, Maori, Marathi, Mongolian, Nepali, Norwegian, Pashto, Persian, Polish, Portuguese, Punjabi, Romanian, Russian, Samoan, Scottish Gaelic, Serbian, Shona, Sindhi, Sinhala, Slovak, Slovenian, Somali, Sotho, Spanish, Sundanese, Swahili, Swedish, Tajik, Tamil, Telugu, Thai, Turkish, Ukrainian, Urdu, Uzbek, Vietnamese, Welsh, West Frisian, Xhosa, Yiddish, Yoruba, Zulu.; Note: mT5 was only pre-trained on mC4 excluding any supervised training. Therefore, this model has to be fine-tuned before it is useable on a downstream task.; Pretraining Dataset: mC4",Natural Language Processing
vit-base-patch16-224-in21k,Feature Extraction,PyTorch; TensorFlow; JAX; Transformers,,apache-2.0,https://arxiv.org/pdf/2010.11929.pdf; https://arxiv.org/pdf/2006.03677.pdf,57,imagenet-21k,506670,1038.006553,46,https://huggingface.co/google/vit-base-patch16-224-in21k,"Vision Transformer (ViT) model pre-trained on ImageNet-21k (14 million images, 21,843 classes) at resolution 224x224. It was introduced in the paper An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale by Dosovitskiy et al. and first released in this repository. However, the weights were converted from the timm repository by Ross Wightman, who already converted the weights from JAX to PyTorch. Credits go to him. ; Disclaimer: The team releasing ViT did not write a model card for this model so this model card has been written by the Hugging Face team.; The Vision Transformer (ViT) is a transformer encoder model (BERT-like) pretrained on a large collection of images in a supervised fashion, namely ImageNet-21k, at a resolution of 224x224 pixels. ; Images are presented to the model as a sequence of fixed-size patches (resolution 16x16), which are linearly embedded. One also adds a [CLS] token to the beginning of a sequence to use it for classification tasks. One also adds absolute position embeddings before feeding the sequence to the layers of the Transformer encoder.; Note that this model does not provide any fine-tuned heads, as these were zero'd by Google researchers. However, the model does include the pre-trained pooler, which can be used for downstream tasks (such as image classification).",Multimodel
chinese-bert-wwm-ext,Fill-Mask,PyTorch; TensorFlow; JAX; Transformers,Chinese,apache-2.0,https://arxiv.org/pdf/1906.08101.pdf; https://arxiv.org/pdf/2004.13922.pdf,97,,822919,1230.373187,1,https://huggingface.co/hfl/chinese-bert-wwm-ext,"For further accelerating Chinese natural language processing, we provide Chinese pre-trained BERT with Whole Word Masking. ; Pre-Training with Whole Word Masking for Chinese BERTYiming Cui, Wanxiang Che, Ting Liu, Bing Qin, Ziqing Yang, Shijin Wang, Guoping Hu; This repository is developed based on£ºhttps://github.com/google-research/bert; You may also interested in,; More resources by HFL: https://github.com/ymcui/HFL-Anthology",Natural Language Processing
emotion-english-distilroberta-base,Text Classification,PyTorch; TensorFlow; Transformers,English,,,192,,1127684,660.5939007,48,https://huggingface.co/j-hartmann/emotion-english-distilroberta-base,"With this model, you can classify emotions in English text data. The model was trained on 6 diverse datasets (see Appendix below) and predicts Ekman's 6 basic emotions, plus a neutral class:; The model is a fine-tuned checkpoint of DistilRoBERTa-base. For a 'non-distilled' emotion model, please refer to the model card of the RoBERTa-large version.; a) Run emotion model with 3 lines of code on single text example using Hugging Face's pipeline command on Google Colab:; ; b) Run emotion model on multiple examples and full datasets (e.g., .csv files) on Google Colab:",Natural Language Processing
BiomedNLP-PubMedBERT-base-uncased-abstract-fulltext,Fill-Mask,PyTorch; JAX; Transformers,English,mit,https://arxiv.org/pdf/2007.15779.pdf,100,,1248516,878.2245168,9,https://huggingface.co/microsoft/BiomedNLP-PubMedBERT-base-uncased-abstract-fulltext,"Pretraining large neural language models, such as BERT, has led to impressive gains on many natural language processing (NLP) tasks. However, most pretraining efforts focus on general domain corpora, such as newswire and Web. A prevailing assumption is that even domain-specific pretraining can benefit by starting from general-domain language models. Recent work shows that for domains with abundant unlabeled text, such as biomedicine, pretraining language models from scratch results in substantial gains over continual pretraining of general-domain language models.; PubMedBERT is pretrained from scratch using abstracts from PubMed and full-text articles from PubMedCentral. This model achieves state-of-the-art performance on many biomedical NLP tasks, and currently holds the top score on the Biomedical Language Understanding and Reasoning Benchmark.; If you find PubMedBERT useful in your research, please cite the following paper:",Natural Language Processing
bert-large-portuguese-cased,Fill-Mask,PyTorch; JAX; Transformers,Portuguese,mit,,28,brWaC,18827,2744.529861,6,https://huggingface.co/neuralmind/bert-large-portuguese-cased,"; BERTimbau Large is a pretrained BERT model for Brazilian Portuguese that achieves state-of-the-art performances on three downstream NLP tasks: Named Entity Recognition, Sentence Textual Similarity and Recognizing Textual Entailment. It is available in two sizes: Base and Large.; For further information or requests, please go to BERTimbau repository.; If you use our work, please cite:",Natural Language Processing
voice-activity-detection,Automatic Speech Recognition,pyannote.audio,,mit,,78,ami; dihard; voxconverse,97630,0,8,https://huggingface.co/pyannote/voice-activity-detection,"This repository is publicly accessible, but
			you have to accept the conditions to access its files and content.
		; The collected information will help acquire a better knowledge of pyannote.audio userbase and help its maintainers apply for grants to improve it further. If you are an academic researcher, please cite the relevant papers in your own publications using the model. If you work for a company, please consider contributing back to pyannote.audio development (e.g. through unrestricted gifts). We also provide scientific consulting services around speaker diarization and machine listening.; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		; Relies on pyannote.audio 2.1: see installation instructions.; For commercial enquiries and scientific consulting, please contact me.For technical questions and bug reports, please check pyannote.audio Github repository.",Audio
Real-ESRGAN,,,Russian; English,,https://arxiv.org/pdf/2107.10833.pdf,42,,0,201.3023242,19,https://huggingface.co/ai-forever/Real-ESRGAN,"PyTorch implementation of a Real-ESRGAN model trained on custom dataset. This model shows better results on faces compared to the original version. It is also easier to integrate this model into your projects.; Real-ESRGAN is an upgraded ESRGAN trained with pure synthetic data is capable of enhancing details while removing annoying artifacts for common real-world images.; Code for using model you can obtain in our repo.; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
distiluse-base-multilingual-cased-v1,Sentence Similarity,PyTorch; TensorFlow; Sentence Transformers; Transformers,multilingual,apache-2.0,https://arxiv.org/pdf/1908.10084.pdf,42,,78416,1080.937199,6,https://huggingface.co/sentence-transformers/distiluse-base-multilingual-cased-v1,"This is a sentence-transformers model: It maps sentences & paragraphs to a 512 dimensional dense vector space and can be used for tasks like clustering or semantic search.; Using this model becomes easy when you have sentence-transformers installed:; Then you can use the model like this:; For an automated evaluation of this model, see the Sentence Embeddings Benchmark: https://seb.sbert.net; This model was trained by sentence-transformers. ",Natural Language Processing
sentiment-roberta-large-english,Text Classification,PyTorch; TensorFlow; JAX; Transformers,English,,https://arxiv.org/pdf/1907.11692.pdf,72,,253250,4373.713151,22,https://huggingface.co/siebert/sentiment-roberta-large-english,"This model (""SiEBERT"", prefix for ""Sentiment in English"") is a fine-tuned checkpoint of RoBERTa-large (Liu et al. 2019). It enables reliable binary sentiment analysis for various types of English-language text. For each instance, it predicts either positive (1) or negative (0) sentiment. The model was fine-tuned and evaluated on 15 data sets from diverse text sources to enhance generalization across different types of texts (reviews, tweets, etc.). Consequently, it outperforms models trained on only one type of text (e.g., movie reviews from the popular SST-2 benchmark) when used on new data as shown below. ; If you want to predict sentiment for your own data, we provide an example script via Google Colab. You can load your data to a Google Drive and run the script for free on a Colab GPU. Set-up only takes a few minutes. We suggest that you manually label a subset of your data to evaluate performance for your use case. For performance benchmark values across various sentiment analysis contexts, please refer to our paper (Hartmann et al. 2022).; ; The easiest way to use the model for single predictions is Hugging Face's sentiment analysis pipeline, which only needs a couple lines of code as shown in the following example:; ",Natural Language Processing
pegasus_paraphrase,Text2Text Generation,PyTorch; Transformers,English,apache-2.0,,142,,132278,2336.633666,51,https://huggingface.co/tuner007/pegasus_paraphrase,"PEGASUS fine-tuned for paraphrasing; Created by Arpit Rajauria
",Natural Language Processing
yolos-tiny,Object Detection,PyTorch; Safetensors; Transformers,,apache-2.0,https://arxiv.org/pdf/2106.00666.pdf,118,coco,666716,52.01000835,37,https://huggingface.co/hustvl/yolos-tiny,"YOLOS model fine-tuned on COCO 2017 object detection (118k annotated images). It was introduced in the paper You Only Look at One Sequence: Rethinking Transformer in Vision through Object Detection by Fang et al. and first released in this repository. ; Disclaimer: The team releasing YOLOS did not write a model card for this model so this model card has been written by the Hugging Face team.; YOLOS is a Vision Transformer (ViT) trained using the DETR loss. Despite its simplicity, a base-sized YOLOS model is able to achieve 42 AP on COCO validation 2017 (similar to DETR and more complex frameworks such as Faster R-CNN).; The model is trained using a ""bipartite matching loss"": one compares the predicted classes + bounding boxes of each of the N = 100 object queries to the ground truth annotations, padded up to the same length N (so if an image only contains 4 objects, 96 annotations will just have a ""no object"" as class and ""no bounding box"" as bounding box). The Hungarian matching algorithm is used to create an optimal one-to-one mapping between each of the N queries and each of the N annotations. Next, standard cross-entropy (for the classes) and a linear combination of the L1 and generalized IoU loss (for the bounding boxes) are used to optimize the parameters of the model.; You can use the raw model for object detection. See the model hub to look for all available YOLOS models.",Computer Vision
chinese-wav2vec2-base,,PyTorch; Transformers,,mit,,15,,5310,1547.365074,,https://huggingface.co/TencentGameMate/chinese-wav2vec2-base,"Pretrained on 10k hours WenetSpeech L subset. More details in  TencentGameMate/chinese_speech_pretrain; This model does not have a tokenizer as it was pretrained on audio alone. 
In order to use this model speech recognition, a tokenizer should be created and the model should be fine-tuned on labeled text data.; python package:
transformers==4.16.2; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
wav2vec2-large-chinese-zh-cn,Automatic Speech Recognition,PyTorch; TensorBoard; Transformers,Chinese,apache-2.0,,19,common_voice,51249,1310.910954,1,https://huggingface.co/wbbbbb/wav2vec2-large-chinese-zh-cn,"Fine-tuned facebook/wav2vec2-large-xlsr-53 on Chinese using the train and validation splits of Common Voice 6.1, CSS10 and ST-CMDS.
When using this model, make sure that your speech input is sampled at 16kHz.; This model has been fine-tuned on RTX3090 for 50h; The script used for training can be found here: https://github.com/jonatasgrosman/wav2vec2-sprint; The model can be used directly (without a language model) as follows...; Using the HuggingSound library:",Audio
donut-base-finetuned-cord-v2,Image-to-Text,PyTorch; Transformers,,mit,https://arxiv.org/pdf/2111.15664.pdf,28,,19258,811.3304042,26,https://huggingface.co/naver-clova-ix/donut-base-finetuned-cord-v2,"Donut model fine-tuned on CORD. It was introduced in the paper OCR-free Document Understanding Transformer by Geewok et al. and first released in this repository.; Disclaimer: The team releasing Donut did not write a model card for this model so this model card has been written by the Hugging Face team.; Donut consists of a vision encoder (Swin Transformer) and a text decoder (BART). Given an image, the encoder first encodes the image into a tensor of embeddings (of shape batch_size, seq_len, hidden_size), after which the decoder autoregressively generates text, conditioned on the encoding of the encoder. ; ; This model is fine-tuned on CORD, a document parsing dataset.",Multimodel
japanese-stable-diffusion,Text-to-Image,Diffusers,Japanese,other,https://arxiv.org/pdf/2112.10752.pdf; https://arxiv.org/pdf/2205.12952.pdf,162,,1745,0,3,https://huggingface.co/rinna/japanese-stable-diffusion,"This repository is publicly accessible, but
			you have to accept the conditions to access its files and content.
		; One more step before getting this model.This model is open access and available to all, with a CreativeML OpenRAIL-M license further specifying rights and usage.The CreativeML OpenRAIL License specifies: ; By clicking on ""Access repository"" below, you accept that your contact information (email address and username) can be shared with the model authors as well.
  ; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		; ",Multimodel
whisper-medium,Automatic Speech Recognition,PyTorch; TensorFlow; JAX; Transformers,99 languages,apache-2.0,https://arxiv.org/pdf/2212.04356.pdf,96,,28205,9404.305443,23,https://huggingface.co/openai/whisper-medium,"Whisper is a pre-trained model for automatic speech recognition (ASR) and speech translation. Trained on 680k hours 
of labelled data, Whisper models demonstrate a strong ability to generalise to many datasets and domains without the need 
for fine-tuning.; Whisper was proposed in the paper Robust Speech Recognition via Large-Scale Weak Supervision 
by Alec Radford et al from OpenAI. The original code repository can be found here.; Disclaimer: Content for this model card has partly been written by the Hugging Face team, and parts of it were 
copied and pasted from the original model card.; Whisper is a Transformer based encoder-decoder model, also referred to as a sequence-to-sequence model. 
It was trained on 680k hours of labelled speech data annotated using large-scale weak supervision. ; The models were trained on either English-only data or multilingual data. The English-only models were trained 
on the task of speech recognition. The multilingual models were trained on both speech recognition and speech 
translation. For speech recognition, the model predicts transcriptions in the same language as the audio. 
For speech translation, the model predicts transcriptions to a different language to the audio.",Audio
bloomz-7b1,Text Generation,PyTorch; Transformers,46 languages,bigscience-bloom-rail-1.0,https://arxiv.org/pdf/2211.01786.pdf,97,bigscience/xP3,56860,14452.92648,11,https://huggingface.co/bigscience/bloomz-7b1,"; We present BLOOMZ & mT0, a family of models capable of following human instructions in dozens of languages zero-shot. We finetune BLOOM & mT5 pretrained multilingual language models on our crosslingual task mixture (xP3) and find the resulting models capable of crosslingual generalization to unseen tasks & languages.; We recommend using the model to perform tasks expressed in natural language. For example, given the prompt ""Translate to English: Je t¡¯aime."", the model will most likely answer ""I love you."". Some prompt ideas from our paper: ; Feel free to share your generations in the Community tab!; Prompt Engineering: The performance may vary depending on the prompt. For BLOOMZ models, we recommend making it very clear when the input stops to avoid the model trying to continue it. For example, the prompt ""Translate to English: Je t'aime"" without the full stop (.) at the end, may result in the model trying to continue the French sentence. Better prompts are e.g. ""Translate to English: Je t'aime."", ""Translate to English: Je t'aime. Translation:"" ""What is ""Je t'aime."" in English?"", where it is clear for the model when it should answer. Further, we recommend providing the model as much context as possible. For example, if you want it to answer in Telugu, then tell the model, e.g. ""Explain in a sentence in Telugu what is backpropagation in neural networks."".",Natural Language Processing
waifu-diffusion-v1-3,Text-to-Image,,English,creativeml-openrail-m,,579,,0,130457.6055,204,https://huggingface.co/hakurei/waifu-diffusion-v1-3,"Waifu Diffusion is a latent text-to-image diffusion model that has been conditioned on high-quality anime images through fine-tuning.; The model originally used for fine-tuning is Stable Diffusion 1.4, which is a latent image diffusion model trained on LAION2B-en. The current model has been fine-tuned with a learning rate of 5.0e-6 for 10 epochs on 680k anime-styled images.; See here for an in-depth overview of Waifu Diffusion 1.3.; This model is open access and available to all, with a CreativeML OpenRAIL-M license further specifying rights and usage.
The CreativeML OpenRAIL License specifies: ; This model can be used for entertainment purposes and as a generative art assistant.",Multimodel
bloomz-7b1-mt,Text Generation,PyTorch; TensorBoard; Transformers,46 languages,bigscience-bloom-rail-1.0,https://arxiv.org/pdf/2211.01786.pdf,102,bigscience/xP3mt,46701,14452.92666,5,https://huggingface.co/bigscience/bloomz-7b1-mt,"; We present BLOOMZ & mT0, a family of models capable of following human instructions in dozens of languages zero-shot. We finetune BLOOM & mT5 pretrained multilingual language models on our crosslingual task mixture (xP3) and find the resulting models capable of crosslingual generalization to unseen tasks & languages.; We recommend using the model to perform tasks expressed in natural language. For example, given the prompt ""Translate to English: Je t¡¯aime."", the model will most likely answer ""I love you."". Some prompt ideas from our paper: ; Feel free to share your generations in the Community tab!; Prompt Engineering: The performance may vary depending on the prompt. For BLOOMZ models, we recommend making it very clear when the input stops to avoid the model trying to continue it. For example, the prompt ""Translate to English: Je t'aime"" without the full stop (.) at the end, may result in the model trying to continue the French sentence. Better prompts are e.g. ""Translate to English: Je t'aime."", ""Translate to English: Je t'aime. Translation:"" ""What is ""Je t'aime."" in English?"", where it is clear for the model when it should answer. Further, we recommend providing the model as much context as possible. For example, if you want it to answer in Telugu, then tell the model, e.g. ""Explain in a sentence in Telugu what is backpropagation in neural networks."".",Natural Language Processing
sd-vae-ft-ema,,Diffusers,,mit,,78,,120829,670.0086369,10,https://huggingface.co/stabilityai/sd-vae-ft-ema,"These weights are intended to be used with the ? diffusers library. If you are looking for the model to use with the original CompVis Stable Diffusion codebase, come here. ; You can integrate this fine-tuned VAE decoder to your existing diffusers workflows, by including a vae argument to the StableDiffusionPipeline; We publish two kl-f8 autoencoder versions, finetuned from the original kl-f8 autoencoder on a 1:1 ratio of LAION-Aesthetics and LAION-Humans, an unreleased subset containing only SFW images of humans. The intent was to fine-tune on the Stable Diffusion training set (the autoencoder was originally trained on OpenImages) but also enrich the dataset with images of humans to improve the reconstruction of faces.
The first, ft-EMA, was resumed from the original checkpoint, trained for 313198 steps and uses EMA weights. It uses the same loss configuration as the original checkpoint (L1 + LPIPS).
The second, ft-MSE, was resumed from ft-EMA and uses EMA weights and was trained for another 280k steps using a different loss, with more emphasis 
on MSE reconstruction (MSE + 0.1 * LPIPS). It produces somewhat ``smoother'' outputs. The batch size for both versions was 192 (16 A100s, batch size 12 per GPU).
To keep compatibility with existing models, only the decoder part was finetuned; the checkpoints can be used as a drop-in replacement for the existing autoencoder.; Original kl-f8 VAE vs f8-ft-EMA vs f8-ft-MSE; Visualization of reconstructions on  256x256 images from the COCO2017 validation dataset. ",
GODEL-v1_1-base-seq2seq,Conversational,PyTorch; Transformers,,mit,https://arxiv.org/pdf/2206.11309.pdf,55,,2525,894.4309372,16,https://huggingface.co/microsoft/GODEL-v1_1-base-seq2seq,"GODEL is a large-scale pre-trained model for goal-directed dialogs. It is parameterized with a Transformer-based encoder-decoder model and trained for response generation grounded in external text, which allows more effective fine-tuning on dialog tasks that require conditioning the response on information that is external to the current conversation (e.g., a retrieved document). The pre-trained model can be efficiently fine-tuned and adapted to accomplish a new dialog task with a handful of task-specific dialogs. The v1.1 model is trained on 551M multi-turn dialogs from Reddit discussion thread, and 5M instruction and knowledge grounded dialogs.; Chitchat example:; Instruction: given a dialog context, you need to response empathically.  
User: Does money buy happiness? 
Agent: It is a question. Money buys you a lot of things, but not enough to buy happiness. 
User: What is the best way to buy happiness ? 
Agent: Happiness is bought through your experience and not money. ; Grounded response generation example:; Instruction: given a dialog context and related knowledge, you need to response safely based on the knowledge. 
Knowledge: The best Stardew Valley mods PCGamesN_0 / About SMAPI 
User: My favorite game is stardew valley. stardew valley is very fun. 
Agent: I love Stardew Valley mods, like PCGamesN_0 / About SMAPI. ",Natural Language Processing
flan-t5-small,Text2Text Generation,PyTorch; TensorFlow; JAX; Transformers,5 languages,apache-2.0,https://arxiv.org/pdf/2210.11416.pdf; https://arxiv.org/pdf/1910.09700.pdf,97,svakulenk0/qrecc; taskmaster2; djaym7/wiki_dialog; deepmind/code_contests; lambada; gsm8k; aqua_rat; esnli; quasc; qed,183179,1059.211517,216,https://huggingface.co/google/flan-t5-small,"; If you already know T5, FLAN-T5 is just better at everything. For the same number of parameters, these models have been fine-tuned on more than 1000 additional tasks covering also more languages. 
As mentioned in the first few lines of the abstract : ;  Flan-PaLM 540B achieves state-of-the-art performance on several benchmarks, such as 75.2% on five-shot MMLU. We also publicly release Flan-T5 checkpoints,1 which achieve strong few-shot performance even compared to much larger models, such as PaLM 62B. Overall, instruction finetuning is a general method for improving the performance and usability of pretrained language models.; Disclaimer: Content from this model card has been written by the Hugging Face team, and parts of it were copy pasted from the T5 model card.; Find below some example scripts on how to use the model in transformers:",Natural Language Processing
Cyberpunk-Anime-Diffusion,Text-to-Image,Diffusers,English,creativeml-openrail-m,,511,,4152,4364.152401,311,https://huggingface.co/DGSpitzer/Cyberpunk-Anime-Diffusion,"; An AI model that generates cyberpunk anime characters!~; Based of a finetuned Waifu Diffusion V1.3 Model with Stable Diffusion V1.5 New Vae, training in Dreambooth; by DGSpitzer; This repo contains both .ckpt and Diffuser model files. It's compatible to be used as any Stable Diffusion model, using standard Stable Diffusion Pipelines.",Multimodel
mo-di-diffusion,Text-to-Image,Diffusers,,creativeml-openrail-m,,889,,16038,2183.405887,318,https://huggingface.co/nitrosocke/mo-di-diffusion,"Mo Di Diffusion; This is the fine-tuned Stable Diffusion 1.5 model trained on screenshots from a popular animation studio.
Use the tokens modern disney style in your prompts for the effect.; If you enjoy my work, please consider supporting me
; Videogame Characters rendered with the model:

Animal Characters rendered with the model:

Cars and Landscapes rendered with the model:
; modern disney lara croft
Steps: 50, Sampler: Euler a, CFG scale: 7, Seed: 3940025417, Size: 512x768",Multimodel
classic-anim-diffusion,Text-to-Image,Diffusers,,creativeml-openrail-m,,394,,3696,2183.158187,115,https://huggingface.co/nitrosocke/classic-anim-diffusion,"This is the fine-tuned Stable Diffusion model trained on screenshots from a popular animation studio.
Use the tokens classic disney style in your prompts for the effect.; If you enjoy my work, please consider supporting me
; Characters rendered with the model:

Animals rendered with the model:

Cars and Landscapes rendered with the model:
; This model can be used just like any other Stable Diffusion model. For more information,
please have a look at the Stable Diffusion.; You can also export the model to ONNX, MPS and/or FLAX/JAX.",Multimodel
galactica-120b,Text Generation,PyTorch; Transformers,,cc-by-nc-4.0,https://arxiv.org/pdf/1810.03993.pdf,133,,329,249612.5219,2,https://huggingface.co/facebook/galactica-120b,"; Model card from the original repo ; Following Mitchell et al. (2018), this model card provides information about the GALACTICA model, how it was trained, and the intended use cases. Full details about how the model was trained and evaluated can be found in the release paper.; This model checkpoint was integrated into the Hub by Manuel Romero; The GALACTICA models are trained on a large-scale scientific corpus. The models are designed to perform scientific tasks, including but not limited to citation prediction, scientific QA, mathematical reasoning, summarization, document generation, molecular property prediction and entity extraction. The models were developed by the Papers with Code team at Meta AI to study the use of language models for the automatic organization of science. We train models with sizes ranging from 125M to 120B parameters. Below is a summary of the released models:",Natural Language Processing
Ghibli-Diffusion,Text-to-Image,Diffusers,English,creativeml-openrail-m,,527,,7452,2181.12595,74,https://huggingface.co/nitrosocke/Ghibli-Diffusion,"This is the fine-tuned Stable Diffusion model trained on images from modern anime feature films from Studio Ghibli.
Use the tokens ghibli style in your prompts for the effect.; If you enjoy my work and want to test new models before release, please consider supporting me
; Characters rendered with the model:

Cars and Animals rendered with the model:

Landscapes rendered with the model:

ghibli style beautiful Caribbean beach tropical (sunset) - Negative prompt: soft blurry

ghibli style ice field white mountains ((northern lights)) starry sky low horizon - Negative prompt: soft blurry; ghibli style (storm trooper) Negative prompt: (bad anatomy)
Steps: 20, Sampler: DPM++ 2M Karras, CFG scale: 7, Seed: 3450349066, Size: 512x704; ghibli style VW beetle Negative prompt: soft blurry
Steps: 30, Sampler: Euler a, CFG scale: 7, Seed: 1529856912, Size: 704x512",Multimodel
stable-diffusion-2-depth,,Diffusers,,openrail++,https://arxiv.org/pdf/2112.10752.pdf; https://arxiv.org/pdf/2202.00512.pdf; https://arxiv.org/pdf/1910.09700.pdf,340,,21273,11696.22412,16,https://huggingface.co/stabilityai/stable-diffusion-2-depth,"This model card focuses on the model associated with the Stable Diffusion v2 model, available here.; This stable-diffusion-2-depth model is resumed from stable-diffusion-2-base (512-base-ema.ckpt) and finetuned for 200k steps. Added an extra input channel to process the (relative) depth prediction produced by MiDaS (dpt_hybrid) which is used as an additional conditioning.; ; Developed by: Robin Rombach, Patrick Esser; Model type: Diffusion-based text-to-image generation model",
GPT-JT-6B-v1,Text Generation,PyTorch; Transformers,English,apache-2.0,,295,natural_instructions; the_pile; cot; Muennighoff/P3,5298,12496.17909,5,https://huggingface.co/togethercomputer/GPT-JT-6B-v1,"; Feel free to try out our Online Demo!; ; With a new decentralized training algorithm, we fine-tuned GPT-J (6B) on 3.53 billion tokens, resulting in GPT-JT (6B), a model that outperforms many 100B+ parameter models on classification benchmarks.; We incorporated a collection of open techniques and datasets to build GPT-JT:",Natural Language Processing
openjourney-v4,Text-to-Image,Diffusers,,creativeml-openrail-m,,1100,,25158,2181.12208,116,https://huggingface.co/prompthero/openjourney-v4,"Trained on Stable Diffusion v1.5 using +124000 images, 12400 steps, 4 epochs +32 training hours.; ? Openjourney-v4 prompts; Pss... ""mdjrny-v4 style"" is not necessary anymore (yay!); ? Want to learn how to train Openjourney? ?? Join our course ?",Multimodel
blip-image-captioning-base,Image-to-Text,PyTorch; TensorFlow; Transformers,,bsd-3-clause,https://arxiv.org/pdf/2201.12086.pdf,157,,446902,1980.933219,260,https://huggingface.co/Salesforce/blip-image-captioning-base,"Model card for image captioning pretrained on COCO dataset - base architecture (with ViT base backbone).; Authors from the paper write in the abstract:; Vision-Language Pre-training (VLP) has advanced the performance for many vision-language tasks. However, most existing pre-trained models only excel in either understanding-based tasks or generation-based tasks. Furthermore, performance improvement has been largely achieved by scaling up the dataset with noisy image-text pairs collected from the web, which is a suboptimal source of supervision. In this paper, we propose BLIP, a new VLP framework which transfers flexibly to both vision-language understanding and generation tasks. BLIP effectively utilizes the noisy web data by bootstrapping the captions, where a captioner generates synthetic captions and a filter removes the noisy ones. We achieve state-of-the-art results on a wide range of vision-language tasks, such as image-text retrieval (+2.7% in average recall@1), image captioning (+2.8% in CIDEr), and VQA (+1.6% in VQA score). BLIP also demonstrates strong generalization ability when directly transferred to videolanguage tasks in a zero-shot manner. Code, models, and datasets are released.; You can use this model for conditional and un-conditional image captioning",Multimodel
Promptist,Text Generation,PyTorch; Transformers,,,,40,,3816,512.4051286,23,https://huggingface.co/microsoft/Promptist,"; You can try the online demo at https://huggingface.co/spaces/microsoft/Promptist.; [Note] the online demo at HuggingFace Space is using CPU, so slow generation speed would be expected. Please load the model locally with GPUs for faster generation.",Natural Language Processing
xformers_pre_built,,,,,,30,,0,346.2017773,,https://huggingface.co/r4ziel/xformers_pre_built,"No model card; New: Create and edit this model card directly on the website!; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
finbert-tone-finetuned-finance-topic-classification,Text Classification,PyTorch; TensorBoard; Transformers,,,,21,zeroshot/twitter-financial-news-topic,2042,439.9308101,2,https://huggingface.co/nickmuchi/finbert-tone-finetuned-finance-topic-classification,"This model is a fine-tuned version of yiyanghkust/finbert-tone on Twitter Financial News Topic dataset.
It achieves the following results on the evaluation set:; Model determines the financial topic of given tweets over 20 various topics. Given the unbalanced distribution of the class labels, the weights were adjusted to pay attention to the less sampled labels which should increase overall performance..; More information needed; More information needed; The following hyperparameters were used during training:",Natural Language Processing
basil_mix,,Diffusers,,other,,946,,1847,12247.05782,5,https://huggingface.co/nuigurumi/basil_mix,"This model and its derivatives(image, merged model) can be freely used for non-profit purposes only.; You may not use this model and its derivatives on websites, apps, or other platforms where you can or plan to earn income or donations. If you wish to use it for such purposes, please contact nuigurumi.; Introducing the model itself is allowed for both commercial and non-commercial purposes, but please include the model name and a link to this repository when doing so.; ¤³¤Î¥â¥Ç¥ë¼°¤Ó¤½¤ÎÅÉÉúÎï(Éú³ÉÎï¡¢¥Þ©`¥¸¥â¥Ç¥ë)¤Ï¡¢ÍêÈ«¤Ë·ÇÓÀûÄ¿µÄ¤ÎÊ¹ÓÃ¤ËÏÞ¤ê¡¢×ÔÓÉ¤ËÀûÓÃ¤¹¤ë¤³¤È¤¬¤Ç¤­¤Þ¤¹¡£; ¤¢¤Ê¤¿¤¬§Èë¤ä¼Ä¸¶¤òµÃ¤ë¤³¤È¤Î¤Ç¤­¤ë¡¢¤â¤·¤¯¤ÏµÃ¤ëÓè¶¨¤ÎWeb¥µ¥¤¥È¡¢¥¢¥×¥ê¡¢¤½¤ÎËû¤Ç¤³¤Î¥â¥Ç¥ë¼°¤Ó¤½¤ÎÅÉÉúÎï¤òÀûÓÃ¤¹¤ë¤³¤È¤Ï¤Ç¤­¤Þ¤»¤ó¡£ÀûÓÃ¤·¤¿¤¤öºÏ¤Ïnuigurumi¤ËßB½j¤·¤Æ¤¯¤À¤µ¤¤¡£",
dreamlike-anime-1.0,Text-to-Image,Diffusers,English,other,,184,,53770,4366.561249,45,https://huggingface.co/dreamlike-art/dreamlike-anime-1.0,"Add anime to your prompt to make your gens look more anime.Add photo to your prompt to make your gens look more photorealistic and have better anatomy.This model was trained on 768x768px images, so use 768x768px, 704x832px, 832x704px, etc. Higher resolution or non-square aspect ratios may produce artifacts.  ; Add this to the start of your prompts for best results:; Use negative prompts for best results, for example:; 1girl, girl, etc. give a bit different results, feel free to experiment and see which one you like more!; Use this model as well as Dreamlike Diffusion 1.0 and Dreamlike Photoreal 2.0 for free on dreamlike.art!",Multimodel
Anything-Preservation,Text-to-Image,Diffusers,English,creativeml-openrail-m,,99,,78394,14438.41071,1,https://huggingface.co/AdamOswald1/Anything-Preservation,"DISCLAIMER! This Is A Preservation Repository!; Welcome to Anything V3 - Better VAE. It currently has three model formats: diffusers, ckpt, and safetensors. You'll never see a grey image result again. This model is designed to produce high-quality, highly detailed anime-style images with just a few prompts. Like other anime-style Stable Diffusion models, it also supports danbooru tags for image generation.
e.g. 1girl, white hair, golden eyes, beautiful eyes, detail, flower meadow, cumulonimbus clouds, lighting, detailed sky, garden ; We support a Gradio Web UI to run Anything V3 with Better VAE:; ; This model can be used just like any other Stable Diffusion model. For more information,
please have a look at the Stable Diffusion. You can also export the model to ONNX, MPS and/or FLAX/JAX.",Multimodel
CLIP-ViT-bigG-14-laion2B-39B-b160k,Zero-Shot Image Classification,PyTorch; OpenCLIP,,mit,https://arxiv.org/pdf/1910.04867.pdf,82,,339705,20847.26861,7,https://huggingface.co/laion/CLIP-ViT-bigG-14-laion2B-39B-b160k,"A CLIP ViT-bigG/14 model trained with the LAION-2B English subset of LAION-5B (https://laion.ai/blog/laion-5b/) using OpenCLIP (https://github.com/mlfoundations/open_clip).; Model training done by Mitchell Wortsman on the stability.ai cluster.; The license for this model is MIT.; As per the original OpenAI CLIP model card, this model is intended as a research output for research communities. We hope that this model will enable researchers to better understand and explore zero-shot, arbitrary image classification. We also hope it can be used for interdisciplinary studies of the potential impact of such model. ; The OpenAI CLIP paper includes a discussion of potential downstream impacts to provide an example for this sort of analysis. Additionally, the LAION-5B blog (https://laion.ai/blog/laion-5b/) and upcoming paper include additional discussion as it relates specifically to the training dataset. ",Computer Vision
blip2-opt-2.7b,Image-to-Text,PyTorch; Transformers,English,mit,https://arxiv.org/pdf/2301.12597.pdf,103,,89205,15875.47024,47,https://huggingface.co/Salesforce/blip2-opt-2.7b,"BLIP-2 model, leveraging OPT-2.7b (a large language model with 2.7 billion parameters).
It was introduced in the paper BLIP-2: Bootstrapping Language-Image Pre-training with Frozen Image Encoders and Large Language Models by Li et al. and first released in this repository.; Disclaimer: The team releasing BLIP-2 did not write a model card for this model so this model card has been written by the Hugging Face team.; BLIP-2 consists of 3 models: a CLIP-like image encoder, a Querying Transformer (Q-Former) and a large language model.; The authors initialize the weights of the image encoder and large language model from pre-trained checkpoints and keep them frozen
while training the Querying Transformer, which is a BERT-like Transformer encoder that maps a set of ""query tokens"" to query embeddings,
which bridge the gap between the embedding space of the image encoder and the large language model.; The goal for the model is simply to predict the next text token, giving the query embeddings and the previous text.",Multimodel
embeddings,,,,creativeml-openrail-m,,165,,0,1.566375084,3,https://huggingface.co/nolanaatama/embeddings,"Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
SD-Silicon,Text-to-Image,Safetensors,,creativeml-openrail-m,,166,,0,0.004794922,,https://huggingface.co/Xynon/SD-Silicon,"SD-Silicon: A series of general-purpose models based off the experimental automerger, autoMBW.; A collaborative creation of Xerxemi#6423 & Xynon#7407.; ; All models listed have baked WD1.3 VAE. However, for the purposes of this model series, external VAE is also recommended. ; This model is open access and available to all, with a CreativeML OpenRAIL-M license further specifying rights and usage. The CreativeML OpenRAIL License specifies: ",Multimodel
stable-diffusion-guide,,,English,wtfpl,,156,,0,0.079091797,1,https://huggingface.co/hollowstrawberry/stable-diffusion-guide,"? CLICK HERE TO OPEN THIS DOCUMENT IN FULL WIDTH(The index won't work otherwise).; ???? HAZ CLICK AQU¨ª PARA VER ESTA GU¨ªA EN ESPA?OL; ?; ?; Stable Diffusion is a very powerful AI image generation software you can run on your own home computer. It uses ""models"" which function like the brain of the AI, and can make almost anything, given that someone has trained it to do it. The biggest uses are anime art, photorealism, and NSFW content.",
French-Tortoise,Text-to-Speech,,French,apache-2.0,,14,,0,0.003251953,,https://huggingface.co/Snowad/French-Tortoise,"I stop training tortoise models because this technology is just outdated and too slow, I'm still the first one to want a good French TTS and I watch every day if new ambitious project is born and I won't hesitate to create a new hugging face project! ; V2.5 Model : 
Fine tune of my V2 model on all CommonVoice dataset (517k sample) on 2.5k step (batch size 200), Voice cloning has improved a bit but is still not great. However, if you fine tune this model on your own personality dataset then you can get pretty good results. A good V3 model would be to fine tune for like 50k steps on this dataset and I think there would be a way to get good results but I won't try; V2 Model : ; Tortoise base model Fine tuned on a custom multispeaker French dataset of 120k samples (SIWIS + Common Voice subset + M-AILABS) on 10k step with a RTX 3090 (~= 21 hours of training), with Text LR Weight at 1
Result : The model can speak French much better without an English accent but the voice clone hardly works; V1 Model : ",Audio
invoices-donut-model-v1,Image-to-Text,PyTorch; Transformers,English,mit,,10,katanaml-org/invoices-donut-data-v1,782,814.3298534,3,https://huggingface.co/katanaml-org/invoices-donut-model-v1,This model is finetuned Donut ML base model on invoices data. Model aims to verify how well Donut performs on enterprise docs.; Mean accuracy on test set: 0.96; Inference:; ; Training loss:,Multimodel
furryrock-model-safetensors,,,,wtfpl,,58,,0,0.001467247,,https://huggingface.co/lodestones/furryrock-model-safetensors,"Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
embeddings,,,,,,10,,0,1.069207878,,https://huggingface.co/SenY/embeddings,"Concepts: capri(three-quarter) leggings; If it does not act very strongly against the prompt, it is recommended to increase the strength to about 1.4.; Concepts: low ponytail
; It is recommended to put ""animal ears"" as a negative prompt.; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
Cerebras-GPT-13B,Text Generation,PyTorch; Transformers,English,apache-2.0,https://arxiv.org/pdf/2304.03208.pdf; https://arxiv.org/pdf/2203.15556.pdf; https://arxiv.org/pdf/2101.00027.pdf,626,the_pile,9873,52839.9343,1,https://huggingface.co/cerebras/Cerebras-GPT-13B,"Check out our Blog Post and arXiv paper!; The Cerebras-GPT family is released to facilitate research into LLM scaling laws using open architectures and data sets and demonstrate the simplicity of and scalability of training LLMs on the Cerebras software and hardware stack. All Cerebras-GPT models are available on Hugging Face.; The family includes 111M, 256M, 590M, 1.3B, 2.7B, 6.7B, and 13B models.; All models in the Cerebras-GPT family have been trained in accordance with Chinchilla scaling laws (20 tokens per model parameter) which is compute-optimal.; These models were trained on the Andromeda AI supercomputer comprised of 16 CS-2 wafer scale systems. Cerebras' weight streaming technology simplifies the training of LLMs by disaggregating compute from model storage. This allowed for efficient scaling of training across nodes using simple data parallelism.",Natural Language Processing
pix2struct-ocrvqa-large,Visual Question Answering,PyTorch; Transformers,5 languages,apache-2.0,https://arxiv.org/pdf/2210.03347.pdf,28,,249,5472.276575,3,https://huggingface.co/google/pix2struct-ocrvqa-large,"; Pix2Struct is an image encoder - text decoder model that is trained on image-text pairs for various tasks, including image captionning and visual question answering. The full list of available models can be found on the Table 1 of the paper:; ; The abstract of the model states that: ; Visually-situated language is ubiquitous¡ªsources range from textbooks with diagrams to web pages with images and tables, to mobile apps with buttons and
forms. Perhaps due to this diversity, previous work has typically relied on domainspecific recipes with limited sharing of the underlying data, model architectures,
and objectives. We present Pix2Struct, a pretrained image-to-text model for
purely visual language understanding, which can be finetuned on tasks containing visually-situated language. Pix2Struct is pretrained by learning to parse
masked screenshots of web pages into simplified HTML. The web, with its richness of visual elements cleanly reflected in the HTML structure, provides a large
source of pretraining data well suited to the diversity of downstream tasks. Intuitively, this objective subsumes common pretraining signals such as OCR, language modeling, image captioning. In addition to the novel pretraining strategy,
we introduce a variable-resolution input representation and a more flexible integration of language and vision inputs, where language prompts such as questions
are rendered directly on top of the input image. For the first time, we show that a
single pretrained model can achieve state-of-the-art results in six out of nine tasks
across four domains: documents, illustrations, user interfaces, and natural images.",Multimodel
flan-alpaca-large,Text2Text Generation,PyTorch; Safetensors; Transformers,,apache-2.0,https://arxiv.org/pdf/2306.04757.pdf; https://arxiv.org/pdf/2210.11416.pdf,37,tatsu-lab/alpaca,9780,6412.672224,16,https://huggingface.co/declare-lab/flan-alpaca-large,"? We developed Flacuna by fine-tuning Vicuna-13B on the Flan collection. Flacuna is better than Vicuna at problem-solving. Access the model here https://huggingface.co/declare-lab/flacuna-13b-v1.0.; ? Curious to know the performance of ? ? Flan-Alpaca on large-scale LLM evaluation benchmark, InstructEval? Read our paper https://arxiv.org/pdf/2306.04757.pdf. We evaluated more than 10 open-source instruction-tuned LLMs belonging to various LLM families including Pythia, LLaMA, T5, UL2, OPT, and Mosaic. Codes and datasets: https://github.com/declare-lab/instruct-eval; ? FLAN-T5 is also useful in text-to-audio generation. Find our work at https://github.com/declare-lab/tango if you are interested.; Our repository contains code for extending the Stanford Alpaca
synthetic instruction tuning to existing instruction-tuned models such as Flan-T5.
We have a live interactive demo thanks to Joao Gante!
We are also benchmarking many instruction-tuned models at declare-lab/flan-eval.
Our pretrained models are fully available on HuggingFace ? :; *recommended for better performance",Natural Language Processing
gpt4-x-alpaca,Text Generation,PyTorch; Transformers,,,,435,,2085,53320.30611,39,https://huggingface.co/chavinlo/gpt4-x-alpaca,"As a base model we used: https://huggingface.co/chavinlo/alpaca-13b; Finetuned on GPT4's responses, for 3 epochs.; NO LORA; Please do note that the configurations files maybe messed up, this is because of the trainer I used. I WILL NOT EDIT THEM because there are repos hat automatically fix this, changing it might break it. Generally you just need to change anything that's under the name of ""LLaMa"" to ""Llama"" NOTE THE UPPER AND LOWER CASE!!!!",Natural Language Processing
deplot,Visual Question Answering,PyTorch; Transformers,5 languages,apache-2.0,https://arxiv.org/pdf/2212.10505.pdf,48,,7488,1161.236429,6,https://huggingface.co/google/deplot,"; The abstract of the paper states that: ; Visual language such as charts and plots is ubiquitous in the human world. Comprehending plots and charts requires strong reasoning skills. Prior state-of-the-art (SOTA) models require at least tens of thousands of training examples and their reasoning capabilities are still much limited, especially on complex human-written queries. This paper presents the first one-shot solution to visual language reasoning. We decompose the challenge of visual language reasoning into two steps: (1) plot-to-text translation, and (2) reasoning over the translated text. The key in this method is a modality conversion module, named as DePlot, which translates the image of a plot or chart to a linearized table. The output of DePlot can then be directly used to prompt a pretrained large language model (LLM), exploiting the few-shot reasoning capabilities of LLMs. To obtain DePlot, we standardize the plot-to-table task by establishing unified task formats and metrics, and train DePlot end-to-end on this task. DePlot can then be used off-the-shelf together with LLMs in a plug-and-play fashion. Compared with a SOTA model finetuned on more than >28k data points, DePlot+LLM with just one-shot prompting achieves a 24.0% improvement over finetuned SOTA on human-written queries from the task of chart QA.; You can run a prediction by querying an input image together with a question as follows:; You can use the convert_pix2struct_checkpoint_to_pytorch.py script as follows:",Multimodel
BiomedCLIP-PubMedBERT_256-vit_base_patch16_224,Zero-Shot Image Classification,OpenCLIP,English,mit,https://arxiv.org/pdf/2303.00915.pdf,65,,52878,787.8324087,7,https://huggingface.co/microsoft/BiomedCLIP-PubMedBERT_256-vit_base_patch16_224,"BiomedCLIP is a biomedical vision-language foundation model that is pretrained on PMC-15M, a dataset of 15 million figure-caption pairs extracted from biomedical research articles in PubMed Central, using contrastive learning. 
It uses PubMedBERT as the text encoder and Vision Transformer as the image encoder, with domain-specific adaptations.
It can perform various vision-language processing (VLP) tasks such as cross-modal retrieval, image classification, and visual question answering. 
BiomedCLIP establishes new state of the art in a wide range of standard datasets, and substantially outperforms prior VLP approaches:; ; Please refer to this example notebook.; This model is intended to be used solely for (I) future research on visual-language processing and (II) reproducibility of the experimental results reported in the reference paper.; The primary intended use is to support AI researchers building on top of this work. BiomedCLIP and its associated models should be helpful for exploring various biomedical VLP research questions, especially in the radiology domain.",Computer Vision
MotionBERT,,,,,https://arxiv.org/pdf/2210.06551.pdf,12,,0,0.086968842,,https://huggingface.co/walterzhu/MotionBERT,"This is the official PyTorch implementation of the paper ""Learning Human Motion Representations: A Unified Perspective"".; Please refer to docs/inference.md.; Hints; In most use cases (especially with finetuning), MotionBERT-Lite gives a similar performance with lower computation overhead. ;  
Scripts and docs for pretraining",
TurboHeaven,,,,other,,21,,0,75170.68147,,https://huggingface.co/TurboT/TurboHeaven,"Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
gpt4all-j,Text Generation,PyTorch; Transformers,English,apache-2.0,,220,nomic-ai/gpt4all-j-prompt-generations,8452,24886.60358,20,https://huggingface.co/nomic-ai/gpt4all-j,"An Apache-2 licensed chatbot trained over a massive curated corpus of assistant interactions including word problems, multi-turn dialogue, code, poems, songs, and stories.; This model has been finetuned from GPT-J; We have released several versions of our finetuned GPT-J model using different dataset versions; To download a model with a specific revision run ; Downloading without specifying revision defaults to main/v1.0.",Natural Language Processing
vicuna-7b-v1.1,Text Generation,PyTorch; Transformers,,,https://arxiv.org/pdf/2302.13971.pdf; https://arxiv.org/pdf/2306.05685.pdf,61,,1061199,13804.0399,,https://huggingface.co/lmsys/vicuna-7b-v1.1,"NOTE: New version availablePlease check out a newer version of the weights here.If you still want to use this old version, please see the compatibility and difference between different versions here.; Vicuna is a chat assistant trained by fine-tuning LLaMA on user-shared conversations collected from ShareGPT.; The primary use of Vicuna is research on large language models and chatbots.
The primary intended users of the model are researchers and hobbyists in natural language processing, machine learning, and artificial intelligence.; Command line interface: https://github.com/lm-sys/FastChat#vicuna-weights.APIs (OpenAI API, Huggingface API): https://github.com/lm-sys/FastChat/tree/main#api.  ; Vicuna v1.1 is fine-tuned from LLaMA with supervised instruction fine-tuning.
The training data is around 70K conversations collected from ShareGPT.com.
See more details in the ""Training Details of Vicuna Models"" section in the appendix of this paper.",Natural Language Processing
vicuna-7b-1.1,Text Generation,PyTorch; Transformers,,apache-2.0,,103,,11764,13804.03927,8,https://huggingface.co/eachadea/vicuna-7b-1.1,"delta v1.1 merge ; Model type:
Vicuna is an open-source chatbot trained by fine-tuning LLaMA on user-shared conversations collected from ShareGPT.
It is an auto-regressive language model, based on the transformer architecture.; Model date:
Vicuna was trained between March 2023 and April 2023.; Organizations developing the model:
The Vicuna team with members from UC Berkeley, CMU, Stanford, and UC San Diego.; Paper or resources for more information:
https://vicuna.lmsys.org/",Natural Language Processing
dolly-v2-7b,Text Generation,PyTorch; Transformers,English,mit,,121,databricks/databricks-dolly-15k,16137,14133.33227,5,https://huggingface.co/databricks/dolly-v2-7b,"Databricks' dolly-v2-7b, an instruction-following large language model trained on the Databricks machine learning platform 
that is licensed for commercial use. Based on pythia-6.9b, Dolly is trained on ~15k instruction/response fine tuning records 
databricks-dolly-15k generated 
by Databricks employees in capability domains from the InstructGPT paper, including brainstorming, classification, closed QA, generation,
information extraction, open QA and summarization. dolly-v2-7b is not a state-of-the-art model, but does exhibit surprisingly 
high quality instruction following behavior not characteristic of the foundation model on which it is based.  ; Dolly v2 is also available in these other models sizes:; Please refer to the dolly GitHub repo for tips on 
running inference for various GPU configurations.; Owner: Databricks, Inc.; dolly-v2-7b is a 6.9 billion parameter causal language model created by Databricks that is derived from 
EleutherAI's Pythia-6.9b and fine-tuned 
on a ~15K record instruction corpus generated by Databricks employees and released under a permissive license (CC-BY-SA)",Natural Language Processing
LaMini-Flan-T5-783M,Text2Text Generation,PyTorch; Transformers,English,cc-by-nc-4.0,https://arxiv.org/pdf/2304.14402.pdf,37,,7428,3208.326751,8,https://huggingface.co/MBZUAI/LaMini-Flan-T5-783M,"

; ; This model is one of our LaMini-LM model series in paper ""LaMini-LM: A Diverse Herd of Distilled Models from Large-Scale Instructions"". This model is a fine-tuned version of google/flan-t5-large on LaMini-instruction dataset that contains 2.58M samples for instruction fine-tuning. For more information about our dataset, please refer to our project repository.You can view other models of LaMini-LM series as follows. Models with ? are those with the best overall performance given their size/architecture, hence we recommend using them. More details can be seen in our paper. ; We recommend using the model to response to human instructions written in natural language. ; We now show you how to load and use our model using HuggingFace pipeline().",Natural Language Processing
llama-30b-supercot,Text Generation,PyTorch; Transformers,,,,123,,1882,12295.0043,6,https://huggingface.co/ausboss/llama-30b-supercot,"Merge of huggyllama/llama-30b + kaiokendev/SuperCOT-LoRA ; Supercot was trained to work with langchain prompting. ; Load up locally in my custom LLM notebook that uses the Oobabooga modules to load up models: https://github.com/ausboss/Local-LLM-Langchain; Then you can add cells from of these other notebooks for testing: https://github.com/gkamradt/langchain-tutorials; This LoRA is compatible with any 7B, 13B or 30B 4-bit quantized LLaMa model, including ggml quantized converted bins",Natural Language Processing
starpii,Token Classification,PyTorch; Transformers,code,,https://arxiv.org/pdf/2301.03988.pdf,52,bigcode/pii-annotated-toloka-donwsample-emails; bigcode/pseudo-labeled-python-data-pii-detection-filtered,18154,0,,https://huggingface.co/bigcode/starpii,"This repository is publicly accessible, but
			you have to accept the conditions to access its files and content.
		; This is an NER model trained to detect Personal Identifiable Information (PII) in code datasets. We ask that you read and agree to the following Terms of Use before using the model:; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		; This is an NER model trained to detect Personal Identifiable Information (PII) in code datasets. We fine-tuned bigcode-encoder
on a PII dataset we annotated, available with gated access at bigcode-pii-dataset (see bigcode-pii-dataset-training for the exact data splits).
We added a linear layer as a token classification head on top of the encoder model, with 6 target classes: Names, Emails, Keys, Passwords, IP addresses and Usernames. ; The finetuning dataset contains 20961 secrets and 31 programming languages, but the base encoder model was pre-trained on 88 
programming languages from The Stack dataset.",Natural Language Processing
GPT4-X-Alpasta-30b,Text Generation,PyTorch; Transformers,,,,62,,405,66611.7407,10,https://huggingface.co/MetaIX/GPT4-X-Alpasta-30b,"Dont be upsetti, here, have some spaghetti! Att: A'eala <3; Information; This is an attempt at improving Open Assistant's performance as an instruct while retaining its excellent prose. The merge consists of Chansung's GPT4-Alpaca Lora and Open Assistant's native fine-tune.; Benchmarks; FP16",Natural Language Processing
wizardLM-7B-HF,Text Generation,PyTorch; Transformers,,other,,83,,43811,13805.88152,2,https://huggingface.co/TheBloke/wizardLM-7B-HF,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are the result of merging the delta weights with the original Llama7B model.; The code for merging is provided in the WizardLM official Github repo.; The original WizardLM deltas are in float32, and this results in producing an HF repo that is also float32, and is much larger than a normal 7B Llama model.",Natural Language Processing
wizardLM-7B-GGML,,,,other,,147,,0,25446.40893,,https://huggingface.co/TheBloke/wizardLM-7B-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for WizardLM's WizardLM 7B.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; I have quantized these 'original' quantisation methods using an older version of llama.cpp so that they remain compatible with llama.cpp as of May 19th, commit 2d5db48.",
fastchat-t5-3b-v1.0,Text2Text Generation,PyTorch; Transformers,,apache-2.0,,249,,495682,6871.872681,9,https://huggingface.co/lmsys/fastchat-t5-3b-v1.0,"Model type:
FastChat-T5 is an open-source chatbot trained by fine-tuning Flan-t5-xl (3B parameters) on user-shared conversations collected from ShareGPT.
It is based on an encoder-decoder transformer architecture, and can autoregressively generate responses to users' inputs. ; Model date:
FastChat-T5 was trained on April 2023.; Organizations developing the model:
The FastChat developers, primarily Dacheng Li, Lianmin Zheng and Hao Zhang.; Paper or resources for more information:
https://github.com/lm-sys/FastChat#FastChat-T5; License:
Apache License 2.0",Natural Language Processing
detail-tweaker-lora,,,,,,93,,0,37.90144531,,https://huggingface.co/OedoSoldier/detail-tweaker-lora,"No model card; New: Create and edit this model card directly on the website!; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
distilbert-base-multilingual-cased-sentiments-student,Text Classification,PyTorch; Safetensors; Transformers,12 languages,apache-2.0,,10,tyqiangz/multilingual-sentiments,17052,1085.90449,,https://huggingface.co/lxyuan/distilbert-base-multilingual-cased-sentiments-student,"This model is distilled from the zero-shot classification pipeline on the Multilingual Sentiment 
dataset using this script. ; In reality the multilingual-sentiment dataset is annotated of course, 
but we'll pretend and ignore the annotations for the sake of example.; Notebook link: here; Result can be reproduce using the following commands:; If you are training this model on Colab, make the following code changes to avoid Out-of-memory error message:",Natural Language Processing
image-upscaler-restoration,,,English,,,16,,0,0.005058594,,https://huggingface.co/senhan07/image-upscaler-restoration,"Disclaimer:
I have no associate with the models in repo. The models are only for convenient upload/download. The copyright belongs to the original pulisher.; Models for image upscaling/restoration using neural networks; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
BELLE-LLaMA-EXT-13B,Text2Text Generation,PyTorch,Chinese; English,gpl-3.0,https://arxiv.org/pdf/2304.07854.pdf,45,,0,27659.55175,,https://huggingface.co/BelleGroup/BELLE-LLaMA-EXT-13B,"Considering LLaMA's license constraints, the model is for research and learning only. 
Please strictly respect LLaMA's usage policy. We are not allowed to publish weights for LLaMA, of course, even finetuned, but there is no problem publishing the difference, a patch that we suggest to apply to the files. 
The encryption is a simple XOR between files, ensuring that only the people that have access to the original weights (from completely legal sources, of course) can transform them into finetuned weights. 
You can find the decrypt code on https://github.com/LianjiaTech/BELLE/tree/main/models .; If you find this model helpful, please like this model and star us on https://github.com/LianjiaTech/BELLE !; This model comes from a two-phrase training on original LLaMA 13B.; You can use the following command in Bash.
Please replace ""/path/to_encrypted"" with the path where you stored your encrypted file, 
replace ""/path/to_original_llama_7B"" with the path where you stored your original llama7B file, 
and replace ""/path/to_finetuned_model"" with the path where you want to save your final trained model.; After executing the aforementioned command, you will obtain the following files.",Natural Language Processing
chinese-alpaca-plus-13b-hf,Text Generation,PyTorch; Transformers,Chinese,other,,28,,1123,27044.63286,1,https://huggingface.co/shibing624/chinese-alpaca-plus-13b-hf,"·¢²¼ÖÐÎÄLLaMA-Plus, Alpaca-Plus 13B°æ±¾Ä£ÐÍ; ·¢²¼ÖÐÎÄLLaMA-Plus, Alpaca-Plus 13B°æ±¾£¬¸Ä½øµãÈçÏÂ£º; ±¾Ä£ÐÍÊÇ decapoda-research/llama-13b-hf 
µ××ùÄ£ÐÍ ºÏ²¢ ziqingyang/chinese-llama-plus-lora-13b 
ºÍ ziqingyang/chinese-alpaca-plus-lora-13b Á½¸öLoRAÈ¨ÖØ£¬
²¢×ª»¯ÎªHuggingFace°æ±¾È¨ÖØ£¨.binÎÄ¼þ£©£¬¿ÉÒÔÖ±½ÓÊ¹ÓÃ»òÕß¼ÌÐøÑµÁ·¡£; test case:; ±¾ÏîÄ¿¿ªÔ´ÔÚtextgenÏîÄ¿£ºtextgen£¬¿ÉÖ§³ÖllamaÄ£ÐÍ£¬Í¨¹ýÈçÏÂÃüÁîµ÷ÓÃ£º",Natural Language Processing
4x_NMKD-Superscale-SP_178000_G,,,,,,3,,0,67.00144531,1,https://huggingface.co/gemasai/4x_NMKD-Superscale-SP_178000_G,"No model card; New: Create and edit this model card directly on the website!; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
Wizard-Vicuna-13B-Uncensored-GGML,,,,other,,164,,0,118896.6512,2,https://huggingface.co/TheBloke/Wizard-Vicuna-13B-Uncensored-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Eric Hartford's Wizard-Vicuna-13B-Uncensored.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; I have quantized these 'original' quantisation methods using an older version of llama.cpp so that they remain compatible with llama.cpp as of May 19th, commit 2d5db48.",
XuanYuan2.0,Text Generation,PyTorch; Transformers,Chinese,bigscience-bloom-rail-1.0,https://arxiv.org/pdf/2305.12002.pdf; https://arxiv.org/pdf/2305.11952.pdf; https://arxiv.org/pdf/2305.14471.pdf,111,,8519,0,4,https://huggingface.co/xyz-nlp/XuanYuan2.0,"This repository is publicly accessible, but
			you have to accept the conditions to access its files and content.
		; XuanYuan LICENSE1.Definitions""Licensor"" refers to the XuanYuan Model Team, the entity responsible for distributing its Software.""Software"" pertains to the XuanYuan model parameters made accessible under this license.2.License GrantSubject to the conditions outlined in this License, the Licensor hereby grants you a non-exclusive, worldwide, non-transferable, non-sublicensable, revocable, royalty-free copyright license to utilize the Software exclusively for non-commercial research purposes.You must include the above copyright notice and this permission notice in all copies or significant portions of the Software.3.RestrictionsYou are prohibited from engaging in the following actions with the Software, either in whole or in part: using, copying, modifying, merging, publishing, distributing, reproducing, or creating derivative works of the Software, for commercial, military, or illegal purposes.You must refrain from using the Software for any activities that could undermine China's national security and national unity, jeopardize public interest, or infringe upon the rights and interests of individuals.4.DisclaimerThe Software is provided ""as is"" without any kind of warranty, either express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose, and non-infringement. The authors or copyright holders shall not be held liable for any claims, damages, or other liabilities arising from the use or performance of the Software, whether in an action of contract, tort, or otherwise, even if they have been advised of the possibility of such damages.5.Limitation of LiabilityTo the extent permitted by applicable law, under no legal theory, including tort, negligence, contract, or otherwise, shall the Licensor be liable to you for any direct, indirect, special, incidental, exemplary, or consequential damages, or any other commercial losses, arising from the use or inability to use the Software. This limitation applies even if the Licensor has been advised of the possibility of such damages.6.Dispute ResolutionThis license shall be governed and construed in accordance with the laws of the People's Republic of China. Any dispute arising from or in connection with this License shall be submitted to the Haidian District People's Court in Beijing.; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		; XuanYuan: A Large Chinese Financial Chat Model with Hundreds of Billions Parameters; ÐùÔ¯ÊÇ¹úÄÚÊ×¸ö¿ªÔ´µÄÇ§ÒÚ¼¶ÖÐÎÄ¶Ô»°´óÄ£ÐÍ£¬Í¬Ê±Ò²ÊÇÊ×¸öÕë¶ÔÖÐÎÄ½ðÈÚÁìÓòÓÅ»¯µÄÇ§ÒÚ¼¶¿ªÔ´¶Ô»°´óÄ£ÐÍ¡£ÐùÔ¯ÔÚBLOOM-176BµÄ»ù´¡ÉÏÕë¶ÔÖÐÎÄÍ¨ÓÃÁìÓòºÍ½ðÈÚÁìÓò½øÐÐÁËÕë¶ÔÐÔµÄÔ¤ÑµÁ·ÓëÎ¢µ÷£¬Ëü²»½ö¿ÉÒÔÓ¦¶ÔÍ¨ÓÃÁìÓòµÄÎÊÌâ£¬Ò²¿ÉÒÔ½â´ðÓë½ðÈÚÏà¹ØµÄ¸÷ÀàÎÊÌâ£¬ÎªÓÃ»§Ìá¹©×¼È·¡¢È«ÃæµÄ½ðÈÚÐÅÏ¢ºÍ½¨Òé¡£",Natural Language Processing
MedicWizard-7B,Text Generation,PyTorch; Transformers,,,,10,,573,13783.55756,3,https://huggingface.co/xzuyn/MedicWizard-7B,WizardLM-Uncensored-7B + MedAlpaca-7B (50%/50%); WizardLM-Uncensored-7B: https://huggingface.co/ehartford/WizardLM-7B-Uncensored; MedAlpaca-7B: https://huggingface.co/medalpaca/medalpaca-7b,Natural Language Processing
wizard-mega-13b,Text Generation,PyTorch; Transformers,English,,,100,anon8231489123/ShareGPT_Vicuna_unfiltered; ehartford/wizard_vicuna_70k_unfiltered; ehartford/WizardLM_alpaca_evol_instruct_70k_unfiltered,740,26657.08799,12,https://huggingface.co/openaccess-ai-collective/wizard-mega-13b,"
? Donate to OpenAccess AI Collective to help us keep building great tools and models!; Manticore is available at https://huggingface.co/openaccess-ai-collective/manticore-13b and fixes many issues with Wizard Mega and adds new datasets to the training.; Wizard Mega is a Llama 13B model fine-tuned on the ShareGPT, WizardLM, and Wizard-Vicuna datasets. These particular datasets have all been filtered to remove responses where the model responds with ""As an AI language model..."", etc or when the model refuses to respond.; Try out the model in HF Spaces. The demo uses a quantized GGML version of the model to quickly return predictions on smaller GPUs (and even CPUs). Quantized GGML may have some minimal loss of model quality.; The Wizard Mega 13B SFT model is being released after two epochs as the eval loss increased during the 3rd (final planned epoch). Because of this, we have preliminarily decided to use the epoch 2 checkpoint as the final release candidate. https://wandb.ai/wing-lian/vicuna-13b/runs/5uebgm49",Natural Language Processing
wd-1-5-beta3,,,,other,,103,,0,13209.60251,,https://huggingface.co/waifu-diffusion/wd-1-5-beta3,"; For this release, we release five versions of the model:; The WD 1.5 Base model is only intended for training use. For generation, it is recomended to create your own finetunes and loras on top of WD 1.5 Base or use one of the aesthetic models. More information and sample generations for the aesthetic models are in the release notes; https://saltacc.notion.site/WD-1-5-Beta-3-Release-Notes-1e35a0ed1bb24c5b93ec79c45c217f63; WD 1.5 uses the same VAE as WD 1.4, which can be found here https://huggingface.co/hakurei/waifu-diffusion-v1-4/blob/main/vae/kl-f8-anime2.ckpt",
LLaMa-30B-GGML,,Transformers,,other,,18,,44,297369.6117,,https://huggingface.co/TheBloke/LLaMa-30B-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Meta's LLaMA 30b.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; These files were quantised using hardware kindly provided by Latitude.sh.",
Wizard-Vicuna-7B-Uncensored,Text Generation,PyTorch; Transformers,English,other,,49,ehartford/wizard_vicuna_70k_unfiltered,1342,27599.18599,,https://huggingface.co/ehartford/Wizard-Vicuna-7B-Uncensored,"This is wizard-vicuna-13b trained against LLaMA-7B with a subset of the dataset - responses that contained alignment / moralizing were removed. The intent is to train a WizardLM that doesn't have alignment built-in, so that alignment (of any sort) can be added separately with for example with a RLHF LoRA.; Shout out to the open source AI/ML community, and everyone who helped me out.; Note:  ; An uncensored model has no guardrails.  ; You are responsible for anything you do with the model, just as you are responsible for anything you do with any dangerous object such as a knife, gun, lighter, or car.",Natural Language Processing
Wizard-Vicuna-7B-Uncensored-GGML,,,,other,,70,,0,61542.41121,6,https://huggingface.co/TheBloke/Wizard-Vicuna-7B-Uncensored-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Eric Hartford's Wizard Vicuna 7B Uncensored.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; I have quantized these 'original' quantisation methods using an older version of llama.cpp so that they remain compatible with llama.cpp as of May 19th, commit 2d5db48.",
airoboros-13b,Text Generation,PyTorch; Transformers,,cc-by-nc-4.0,,90,,470,53320.95429,2,https://huggingface.co/jondurbin/airoboros-13b,"This is a fine-tuned 13b parameter LlaMa model, using completely synthetic training data created by https://github.com/jondurbin/airoboros; ;  wb-13b-u is Wizard-Vicuna-13b-Uncensored; I used a jailbreak prompt to generate the synthetic instructions, which resulted in some training data that would likely be censored by other models, such as how-to prompts about synthesizing drugs, making homemade flamethrowers, etc.  Mind you, this is all generated by ChatGPT, not me.  My goal was to simply test some of the capabilities of ChatGPT when unfiltered (as much as possible), and not to intentionally produce any harmful/dangerous/etc. content.; The jailbreak prompt I used is the default prompt in the python code when using the --uncensored flag: https://github.com/jondurbin/airoboros/blob/main/airoboros/self_instruct.py#L39",Natural Language Processing
noon-7b,Text Generation,PyTorch; Transformers,Arabic; English,bigscience-bloom-rail-1.0,,29,,743,33171.66092,3,https://huggingface.co/Naseej/noon-7b,"We present the 7-billion parameter variant of Noon, an Arabic Large Language model based on BLOOM, a foundation model released by the bigscience workshop.; Noon was trained with the main focus of having a model that responds to various types of instructions and questions (text generation, code generation, mathematical problems, closed/open-book questions, etc.); We trained the model using the ColossalAI framework which fully supports the HuggingFace library models, and implements different optimization and quantization techniques for billion-scale LLMs.; The training data is a combination of Arabic datasets covering multiple tasks, more details are provided in the dataset section.; ?????? ??? ?? ????? ????? ""???""!",Natural Language Processing
WizardLM-30B-Uncensored-GGML,,,,other,,104,,0,297369.611,,https://huggingface.co/TheBloke/WizardLM-30B-Uncensored-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Eric Hartford's 'uncensored' WizardLM 30B.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; I have quantized these 'original' quantisation methods using an older version of llama.cpp so that they remain compatible with llama.cpp as of May 19th, commit 2d5db48.",
WizardLM-30B-Uncensored-GPTQ,Text Generation,Transformers,,other,,94,ehartford/WizardLM_alpaca_evol_instruct_70k_unfiltered,2430,17307.96548,,https://huggingface.co/TheBloke/WizardLM-30B-Uncensored-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for Eric Hartford's WizardLM 30B Uncensored.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; These models were quantised using hardware kindly provided by Latitude.sh.",Natural Language Processing
guanaco-7b,,,,,https://arxiv.org/pdf/2305.14314.pdf; https://arxiv.org/pdf/2302.13971.pdf; https://arxiv.org/pdf/2304.07327.pdf,15,,0,640.0223956,1,https://huggingface.co/timdettmers/guanaco-7b,"| Paper | Code | Demo | ; The Guanaco models are open-source finetuned chatbots obtained through 4-bit QLoRA tuning of LLaMA base models on the OASST1 dataset. They are available in 7B, 13B, 33B, and 65B parameter sizes.; ??Guanaco is a model purely intended for research purposes and could produce problematic outputs.; Guanaco adapter weights are available under Apache 2 license. Note the use of the Guanaco adapter weights, requires access to the LLaMA model weighs. 
Guanaco is based on LLaMA and therefore should be used according to the LLaMA license. ; Here is an example of how you would load Guanaco 7B in 4-bits:",
falcon-40b-instruct-GPTQ,Text Generation,Transformers,English,apache-2.0,https://arxiv.org/pdf/2205.14135.pdf; https://arxiv.org/pdf/1911.02150.pdf; https://arxiv.org/pdf/2005.14165.pdf; https://arxiv.org/pdf/2104.09864.pdf,183,tiiuae/falcon-refinedweb,51090,23042.79638,,https://huggingface.co/TheBloke/falcon-40b-instruct-GPTQ,Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; This repo contains an experimantal GPTQ 4bit model for Falcon-40B-Instruct.; It is the result of quantising to 4bit using AutoGPTQ.; Please note this is an experimental GPTQ model. Support for it is currently quite limited.,Natural Language Processing
mpt-7b-storysummarizer,Text Generation,PyTorch; Transformers,,apache-2.0,,13,emozilla/booksum-summary-analysis_gptneox-8192; kmfoda/booksum,363,13621.46844,,https://huggingface.co/emozilla/mpt-7b-storysummarizer,"This is a fine-tuned version of mosaicml/mpt-7b-storywriter intended for summarization and literary analysis of fiction stories.; The code for this model includes the adaptions from Birchlabs/mosaicml-mpt-7b-chat-qlora which allow MPT models to be loaded with device_map=""auto"" and load_in_8bit=True.
It also has the latest key-value cache MPT code to allow for fast inference with transformers (thus, use_cache is set to True in config.json).; or; Outputs on the text of Waystation City (6,287 tokens); temperature=0.6, repetition_penalty=1.04, top_p=0.95, top_k=50, do_sample=True, max_new_tokens=1024",Natural Language Processing
falcon-7b-openassistant-peft,Text Generation,PEFT,,apache-2.0,https://arxiv.org/pdf/2106.09685.pdf; https://arxiv.org/pdf/2305.14314.pdf,36,OpenAssistant/oasst1,938,38.20547382,,https://huggingface.co/dfurman/falcon-7b-openassistant-peft,"Falcon-7b-openassistant-peft is a chatbot model for dialogue generation. It was built by fine-tuning Falcon-7B on the OpenAssistant/oasst1 dataset. This repo only includes the LoRA adapters from fine-tuning with ?'s peft package. ; The model was fine-tuned in 8-bit precision using ? peft adapters, transformers, and bitsandbytes. Training relied on a method called ""Low Rank Adapters"" (LoRA), specifically the QLoRA variant. The run took approximately 6.25 hours and was executed on a workstation with a single A100-SXM NVIDIA GPU with 37 GB of available memory. See attached Colab Notebook for the code and hyperparams used to train the model. ; May 30, 2023; To prompt the chat model, use the following format:; Prompter:",Natural Language Processing
WizardLM-Uncensored-SuperCOT-StoryTelling-30B-GPTQ,Text Generation,Transformers,,other,,54,,547,17307.96606,,https://huggingface.co/TheBloke/WizardLM-Uncensored-SuperCOT-StoryTelling-30B-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for Monero's WizardLM-Uncensored-SuperCOT-Storytelling-30B.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; These models were quantised using hardware kindly provided by Latitude.sh.",Natural Language Processing
Replit-v2-CodeInstruct-3B,Text Generation,PyTorch; Transformers,code,cc-by-sa-4.0,,45,bigcode/the-stack-dedup; sahil2801/CodeAlpaca-20k; teknium/GPTeacher-CodeInstruct,995,10639.33032,5,https://huggingface.co/teknium/Replit-v2-CodeInstruct-3B,"Base Model: replit/replit-code-v1-3b; This is version 2 of the Replit Code Instruct fine tune model.; This model is fine tuned on both Sahil2801's CodeAlpaca & Teknium's GPTeacher Code-Instruct to give Replit's Code model instruct capabilities.; Try this model on it's HuggingFace demo Spaces: https://huggingface.co/spaces/teknium/Replit-v2-CodeInstruct-3B; Dataset links:
CodeAlpaca: https://huggingface.co/datasets/sahil2801/CodeAlpaca-20k
GPTeacher subset - Code Instruct: https://github.com/teknium1/GPTeacher",Natural Language Processing
falcon-40b-sft-top1-560,Text Generation,PyTorch; Transformers,4 languages,apache-2.0,,38,OpenAssistant/oasst1,8871,85670.67281,3,https://huggingface.co/OpenAssistant/falcon-40b-sft-top1-560,"This model is a fine-tuning of TII's Falcon 40B LLM. 
It was trained with top-1 (high-quality) demonstrations of the OASST data set (exported on May 6, 2023) with an effective batch size of 144 for ~7.5 epochs with LIMA style dropout (p=0.3) and a context-length of 2048 tokens.; Two special tokens are used to mark the beginning of user and assistant turns:
<|prompter|> and <|assistant|>. Each turn ends with a <|endoftext|> token.; Input prompt example:; The input ends with the <|assistant|> token to signal that the model should 
start generating the assistant reply.; Model:",Natural Language Processing
gpt4all-falcon,Text Generation,PyTorch; Transformers,English,apache-2.0,,14,nomic-ai/gpt4all-j-prompt-generations,2163,28265.20511,2,https://huggingface.co/nomic-ai/gpt4all-falcon,"An Apache-2 licensed chatbot trained over a massive curated corpus of assistant interactions including word problems, multi-turn dialogue, code, poems, songs, and stories.; This model has been finetuned from Falcon; To download a model with a specific revision run ; Downloading without specifying revision defaults to main/v1.0.; To use it for inference with Cuda, run",Natural Language Processing
SantaCoder-1B,Text Generation,PyTorch; Safetensors; Transformers,code,openrail,,9,bigcode/the-stack,1505,4610.08919,,https://huggingface.co/TabbyML/SantaCoder-1B,"; Play with the model on the SantaCoder Space Demo.; This is the Megatron-version of SantaCoder.
We refer the reader to the SantaCoder model page for full documentation about this model; There are two versions (branches) of the model:; The model was trained on GitHub code. As such it is not an instruction model and commands like ""Write a function that computes the square root."" do not work well.
You should phrase commands like they occur in source code such as comments (e.g. # the following function computes the sqrt) or write a function signature and docstring and let the model complete the function body.",Natural Language Processing
inswapper,,ONNX,,,,9,,0,554.0014453,,https://huggingface.co/deepinsight/inswapper,"No model card; New: Create and edit this model card directly on the website!; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
WizardLM-Uncensored-Falcon-40b,Text Generation,PyTorch; Transformers,,apache-2.0,,80,,2163,85660.46175,3,https://huggingface.co/ehartford/WizardLM-Uncensored-Falcon-40b,"This is WizardLM trained on top of tiiuae/falcon-40b, with a subset of the dataset - responses that contained alignment / moralizing were removed. The intent is to train a WizardLM that doesn't have alignment built-in, so that alignment (of any sort) can be added separately with for example with a RLHF LoRA.; Shout out to the open source AI/ML community, and everyone who helped me out.; Note:
An uncensored model has no guardrails.
You are responsible for anything you do with the model, just as you are responsible for anything you do with any dangerous object such as a knife, gun, lighter, or car. Publishing anything this model generates is the same as publishing it yourself. You are responsible for the content you publish, and you cannot blame the model any more than you can blame the knife, gun, lighter, or car for what you do with it.; Prompt format is WizardLM.; Thank you chirper.ai for sponsoring some of my compute!",Natural Language Processing
Nous-Hermes-13B-GGML,,,,other,,71,,0,118896.654,2,https://huggingface.co/TheBloke/Nous-Hermes-13B-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for NousResearch's Nous-Hermes-13B.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; The model follows the Alpaca prompt format:",
Nous-Hermes-13B-GPTQ,Text Generation,Transformers,English,other,,133,,11007,7631.140514,1,https://huggingface.co/TheBloke/Nous-Hermes-13B-GPTQ,Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ 4bit model files for NousResearch's Nous-Hermes-13B.; It is the result of quantising to 4bit using GPTQ-for-LLaMa.; The model follows the Alpaca prompt format:,Natural Language Processing
instructblip-vicuna-13b,Image-to-Text,PyTorch; Transformers,English,other,https://arxiv.org/pdf/2305.06500.pdf,17,,1154,58134.93168,3,https://huggingface.co/Salesforce/instructblip-vicuna-13b,InstructBLIP model using Vicuna-13b as language model. InstructBLIP was introduced in the paper InstructBLIP: Towards General-purpose Vision-Language Models with Instruction Tuning by Dai et al.; Disclaimer: The team releasing InstructBLIP did not write a model card for this model so this model card has been written by the Hugging Face team.; InstructBLIP is a visual instruction tuned version of BLIP-2. Refer to the paper for details.; ; Usage is as follows:,Multimodel
medguanaco-lora-65b-GPTQ,Text Generation,Transformers,English,cc,https://arxiv.org/pdf/2106.09685.pdf; https://arxiv.org/pdf/2303.14070.pdf,8,,0,336.0055392,,https://huggingface.co/nmitchko/medguanaco-lora-65b-GPTQ,"Model Description ; nmitchko/medguanaco-lora-65b-GPTQ is a large language model specifically fine-tuned for medical domain tasks.
It is based on the Guanaco LORA of LLaMA weighing in at 65B parameters. 
The primary goal of this model is to improve question-answering and medical dialogue tasks.
It was trained using LoRA and quantized, to reduce memory footprint. ; Steps to load this model:; The following README is taken from the source page medalpaca; The training data for this project was sourced from various resources. 
Firstly, we used Anki flashcards to automatically generate questions, 
from the front of the cards and anwers from the back of the card. 
Secondly, we generated medical question-answer pairs from Wikidoc. 
We extracted paragraphs with relevant headings, and used Chat-GPT 3.5 
to generate questions from the headings and using the corresponding paragraphs 
as answers. This dataset is still under development and we believe 
that approximately 70% of these question answer pairs are factual correct. 
Thirdly, we used StackExchange to extract question-answer pairs, taking the 
top-rated question from five categories: Academia, Bioinformatics, Biology, 
Fitness, and Health. Additionally, we used a dataset from ChatDoctor 
consisting of 200,000 question-answer pairs, available at https://github.com/Kent0n-Li/ChatDoctor.",Natural Language Processing
falcon-40b-sft-mix-1226,Text Generation,PyTorch; Transformers,4 languages,apache-2.0,,30,OpenAssistant/oasst1; databricks/databricks-dolly-15k,5334,85670.67358,2,https://huggingface.co/OpenAssistant/falcon-40b-sft-mix-1226,"This model is a fine-tuning of TII's Falcon 40B LLM. 
It was trained on a mixture of OASST top-2 threads (exported on June 2, 2023), Dolly-15k and synthetic instruction datasets (see dataset configuration below).; Two special tokens are used to mark the beginning of user and assistant turns:
<|prompter|> and <|assistant|>. Each turn ends with a <|endoftext|> token.; Input prompt example:; The input ends with the <|assistant|> token to signal that the model should 
start generating the assistant reply.; Model:",Natural Language Processing
chronos-33b,Text Generation,PyTorch; Transformers,,other,,22,,187,66849.10937,3,https://huggingface.co/elinas/chronos-33b,"This is the fp16 PyTorch / HF version of chronos-33b - if you need another version, GGML and GPTQ versions are linked below.; This model is primarily focused on chat, roleplay, and storywriting, but can accomplish other tasks such as simple reasoning and coding.; Chronos generates very long outputs with coherent text, largely due to the human inputs it was trained on.; This model uses Alpaca formatting, so for optimal model performance, use:; GGML Version provided by @TheBloke",Natural Language Processing
open_llama_3b,Text Generation,PyTorch; Transformers,,apache-2.0,,85,togethercomputer/RedPajama-Data-1T,82668,7014.934677,8,https://huggingface.co/openlm-research/open_llama_3b,"In this repo, we present a permissively licensed open source reproduction of Meta AI's LLaMA large language model. We are releasing a 7B and 3B model trained on 1T tokens, as well as the preview of a 13B model trained on 600B tokens. We provide PyTorch and JAX weights of pre-trained OpenLLaMA models, as well as evaluation results and comparison against the original LLaMA models. Please see the project homepage of OpenLLaMA for more details.; We release the weights in two formats: an EasyLM format to be use with our EasyLM framework, and a PyTorch format to be used with the Hugging Face transformers library. Both our training framework EasyLM and the checkpoint weights are licensed permissively under the Apache 2.0 license.; Preview checkpoints can be directly loaded from Hugging Face Hub. Please note that it is advised to avoid using the Hugging Face fast tokenizer for now, as we¡¯ve observed that the auto-converted fast tokenizer sometimes gives incorrect tokenizations. This can be achieved by directly using the LlamaTokenizer class, or passing in the use_fast=False option for the AutoTokenizer class. See the following example for usage.; For more advanced usage, please follow the transformers LLaMA documentation.; The model can be evaluated with lm-eval-harness. However, due to the aforementioned tokenizer issue, we need to avoid using the fast tokenizer to obtain the correct results. This can be achieved by passing in use_fast=False to this part of lm-eval-harness, as shown in the example below:",Natural Language Processing
Photon_v1,Text-to-Image,Diffusers,,other,,8,,3920,2181.122305,2,https://huggingface.co/digiplay/Photon_v1,Model info: https://civitai.com/models/84728/photon; ,Multimodel
falcon-7b-instruct-sharded,Text Generation,Safetensors; Transformers,English,apache-2.0,https://arxiv.org/pdf/2205.14135.pdf; https://arxiv.org/pdf/1911.02150.pdf; https://arxiv.org/pdf/2005.14165.pdf; https://arxiv.org/pdf/2104.09864.pdf; https://arxiv.org/pdf/2306.01116.pdf,10,tiiuae/falcon-refinedweb,15069,28345.70302,,https://huggingface.co/vilsonrodrigues/falcon-7b-instruct-sharded,"Resharded version of https://huggingface.co/tiiuae/falcon-7b-instruct for low RAM enviroments (e.g. Colab, Kaggle) in safetensors; Tutorial: https://medium.com/@vilsonrodrigues/run-your-private-llm-falcon-7b-instruct-with-less-than-6gb-of-gpu-using-4-bit-quantization-ff1d4ffbabcc; Falcon-7B-Instruct is a 7B parameters causal decoder-only model built by TII based on Falcon-7B and finetuned on a mixture of chat/instruct datasets. It is made available under the Apache 2.0 license.; Paper coming soon ?.; ? To get started with Falcon (inference, finetuning, quantization, etc.), we recommend reading this great blogpost fron HF!",Natural Language Processing
Nous-Hermes-13b-Chinese,Text Generation,PyTorch; Transformers,Chinese; English,,,10,,49,27044.61608,,https://huggingface.co/Bandifishing/Nous-Hermes-13b-Chinese,½«Chinese-alpaca-13bµÄLoraÈ¨ÖØÓëNous-Hermes-13bºÏ²¢£¬µÃµ½Ö§³ÖÖÐÎÄµÄHermes-13bÄ£ÐÍ¡£; Chinese-alpaca-13b:https://huggingface.co/ziqingyang/chinese-alpaca-lora-13b; Nous-Hermes-13b:https://huggingface.co/NousResearch/Nous-Hermes-13b; ½ö¹©Ñ§ÊõÑÐ¾¿Ê¹ÓÃ£¬Ê¹ÓÃÊ±Çë×ñÊØÏàÓ¦¿ªÔ´Ð­Òé¡£,Natural Language Processing
Nous-Hermes-13b-Chinese-GGML,Text Generation,Transformers,Chinese; English,apache-2.0,,14,,0,84408.32262,,https://huggingface.co/coyude/Nous-Hermes-13b-Chinese-GGML,"Ô­Ê¼Ä£ÐÍ£ºhttps://huggingface.co/NousResearch/Nous-Hermes-13b ; lora£ºhttps://huggingface.co/ziqingyang/chinese-alpaca-lora-13b ; ½«Nous-Hermes-13bÓëchinese-alpaca-lora-13b½øÐÐºÏ²¢£¬ÔöÇ¿Ä£ÐÍµÄÖÐÎÄÄÜÁ¦£¬²»¹ý´æÔÚ·­ÒëÇ»; Ê¹ÓÃÏîÄ¿£º
https://github.com/ymcui/Chinese-LLaMA-Alpacahttps://github.com/ggerganov/llama.cpp; ÍÆ¼öq5_k_m»òq4_k_m   ¸Ã²Ö¿âÄ£ÐÍ¾ùÎªggmlv3Ä£ÐÍ ",Natural Language Processing
majicMIX_realistic_v6,Text-to-Image,Diffusers,,other,,13,,3259,2457.602186,,https://huggingface.co/digiplay/majicMIX_realistic_v6,Model info :; https://civitai.com/models/43331?modelVersionId=94640,Multimodel
mms-lid-126,Audio Classification,PyTorch; Safetensors; Transformers,158 languages,cc-by-nc-4.0,https://arxiv.org/pdf/2305.13516.pdf,5,google/fleurs,4533,7905.293472,1,https://huggingface.co/facebook/mms-lid-126,"This checkpoint is a model fine-tuned for speech language identification (LID) and part of Facebook's Massive Multilingual Speech project.
This checkpoint is based on the Wav2Vec2 architecture and classifies raw audio input to a probability distribution over 126 output classes (each class representing a language).
The checkpoint consists of 1 billion parameters and has been fine-tuned from facebook/mms-1b on 126 languages.; This MMS checkpoint can be used with Transformers to identify
the spoken language of an audio. It can recognize the following 126 languages.; Let's look at a simple example.; First, we install transformers and some other libraries; Note: In order to use MMS you need to have at least transformers >= 4.30 installed. If the 4.30 version
is not yet available on PyPI make sure to install transformers from 
source:",Audio
WizardCoder-15B-1.0-GGML,,Transformers,,bigcode-openrail-m,,87,,429,71782.417,7,https://huggingface.co/TheBloke/WizardCoder-15B-1.0-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for WizardLM's WizardCoder 15B 1.0.; Please note that these GGMLs are not compatible with llama.cpp, or currently with text-generation-webui. Please see below for a list of tools known to work with these model files.; Matt Hoeffner has put up a live Space with a demo of this model:",
controlnet_qrcode-control_v11p_sd21,Image-to-Image,Diffusers,English,openrail++,,34,,5975,5942.129243,6,https://huggingface.co/DionTimmer/controlnet_qrcode-control_v11p_sd21,"; This repo holds the safetensors & diffusers versions of the QR code conditioned ControlNet for Stable Diffusion v2.1.
The Stable Diffusion 2.1 version is marginally more effective, as it was developed to address my specific needs. However, a 1.5 version model was also trained on the same dataset for those who are using the older version.; These models perform quite well in most cases, but please note that they are not 100% accurate. In some instances, the QR code shape might not come through as expected. You can increase the ControlNet weight to emphasize the QR code shape. However, be cautious as this might negatively impact the style of your output.To optimize for scanning, please generate your QR codes with correction mode 'H' (30%).; To balance between style and shape, a gentle fine-tuning of the control weight might be required based on the individual input and the desired output, aswell as the correct prompt. Some prompts do not work until you increase the weight by a lot. The process of finding the right balance between these factors is part art and part science. For the best results, it is recommended to generate your artwork at a resolution of 768. This allows for a higher level of detail in the final product, enhancing the quality and effectiveness of the QR code-based artwork.; The simplest way to use this is to place the .safetensors model and its .yaml config file in the folder where your other controlnet models are installed, which varies per application. 
For usage in auto1111 they can be placed in the webui/models/ControlNet folder. They can be loaded using the controlnet webui extension which you can install through the extensions tab in the webui (https://github.com/Mikubill/sd-webui-controlnet). Make sure to enable your controlnet unit and set your input image as the QR code. Set the model to either the SD2.1 or 1.5 version depending on your base stable diffusion model, or it will error. No pre-processor is needed, though you can use the invert pre-processor for a different variation of results. 768 is the preferred resolution for generation since it allows for more detail.
Make sure to look up additional info on how to use controlnet if you get stuck, once you have the webui up and running its really easy to install the controlnet extension aswell.",Computer Vision
roop,,ONNX,,,,10,,0,1932,5,https://huggingface.co/henryruhs/roop,"No model card; New: Create and edit this model card directly on the website!; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
baichuan-vicuna-7B-GGML,,,,other,https://arxiv.org/pdf/2306.04751.pdf,14,,0,64512.02453,,https://huggingface.co/TheBloke/baichuan-vicuna-7B-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Fire Balloon's Baichuan Vicuna 7B.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; I have quantized these 'original' quantisation methods using an older version of llama.cpp so that they remain compatible with llama.cpp as of May 19th, commit 2d5db48.",
airoboros-13b-gpt4-1.4,Text Generation,PyTorch; Transformers,,cc-by-nc-4.0,,15,jondurbin/airoboros-gpt4-1.4,2537,53320.34312,,https://huggingface.co/jondurbin/airoboros-13b-gpt4-1.4,"update 2023-06-25 - re-uploaded with a slightly earlier checkpoint, which seems perhaps a little less overfit than the full 3-epochs version initially uploaded; This is a full (not qlora) fine-tune 13b parameter LlaMa model, using completely synthetic training data created gpt4 via https://github.com/jondurbin/airoboros; This is mostly an extension of the previous gpt-4 series, with a few extras:; This model was fine-tuned with a fork of FastChat; The prompt it was trained with was:",Natural Language Processing
airoboros-7b-gpt4-1.4,Text Generation,PyTorch; Transformers,,cc-by-nc-4.0,,5,jondurbin/airoboros-gpt4-1.4,175,27597.42522,,https://huggingface.co/jondurbin/airoboros-7b-gpt4-1.4,"mostly untested, use if you want, or wait for some validation; This is a full (not qlora) fine-tune 7b parameter LlaMa model, using completely synthetic training data created gpt4 via https://github.com/jondurbin/airoboros; This is mostly an extension of the previous gpt-4 series, with a few extras:; This model was fine-tuned with a fork of FastChat; The prompt it was trained with was:",Natural Language Processing
airoboros-7B-gpt4-1.4-GGML,,,,other,,10,,0,61870.09936,,https://huggingface.co/TheBloke/airoboros-7B-gpt4-1.4-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Jon Durbin's Airoboros 7B GPT4 1.4.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; I have quantized these 'original' quantisation methods using an older version of llama.cpp so that they remain compatible with llama.cpp as of May 19th, commit 2d5db48.",
LLaMA_65B_0bit,,,,mit,,5,,0,0.00258625,,https://huggingface.co/qq67878980/LLaMA_65B_0bit,"Converted with https://github.com/notepad-plus-plus/notepad-plus-plus All models tested on A100-80G *Conversion may require lot of RAM, LLaMA-7b takes ~0 GB, 13b around 0 GB, 30b around 0 and 65b takes more than 0 GB of RAM.; Installation instructions as mentioned in above repo:; Additional training was done on the MSPaint_Blank dataset and 2,000,000T+ tokens on 50,000+ blank notepad files.; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
PULSE-7bv5,Text Generation,PyTorch; Transformers,Chinese,agpl-3.0,,16,,271,16603.3381,,https://huggingface.co/OpenMEDLab/PULSE-7bv5,"
; ÓÉÓÚÄ£ÐÍ²ÎÊýÁ¿½ÏÐ¡ºÍ×Ô»Ø¹éÉú³É·¶Ê½£¬¾¡¹ÜÄ£ÐÍÌá¹©ÁËÓÐ¹Ø¼²²¡Õï¶ÏºÍÖÎÁÆµÄÍÆÀí½á¹û£¬µ«ÕâÐ©½á¹û²»ÄÜ´úÌæÏßÏÂÖ°ÒµÒ½ÉúµÄ½¨ÒéºÍÖÎÁÆ·½°¸¡£ËùÓÐ»Ø´ð½ö¹©²Î¿¼£¬²»Ó¦×÷ÎªÕï¶Ï»òÖÎÁÆµÄÒÀ¾Ý¡£ÎÒÃÇÇ¿ÁÒ½¨ÒéÓÃ»§ÔÚÐèÒªÕï¶Ï»òÖÎÁÆ¼²²¡Ê±£¬Ñ°Çó×¨ÒµÒ½ÉúµÄ°ïÖúºÍ½¨Òé¡£; ÏÂ±íÌá¹©ÁËÒ»¸öbatch size=1Ê±±¾µØ²¿ÊðPULSE½øÐÐÍÆÀíËùÐèµÄÏÔ´æ´óÐ¡¡£; ÆäÖÐtorchºÍtransformers°æ±¾²»½¨ÒéµÍÓÚÍÆ¼ö°æ±¾¡£; Gradio",Natural Language Processing
UltraLM-13b,Text Generation,PyTorch; Transformers,,,https://arxiv.org/pdf/2305.14233.pdf,60,stingning/ultrachat,236,53322.04567,1,https://huggingface.co/openbmb/UltraLM-13b,"This is UltraLM-13b delta weights, a chat language model trained upon UltraChat; The model is fine-tuned based on LLaMA-13b with a multi-turn chat-format template as below; To use this model, you need to recover the full model from the delta weights and perform inference following the template below:",Natural Language Processing
mpt-30b-peft-compatible,Text Generation,PyTorch; Transformers,,apache-2.0,https://arxiv.org/pdf/2108.12409.pdf; https://arxiv.org/pdf/2302.13971.pdf; https://arxiv.org/pdf/2205.14135.pdf; https://arxiv.org/pdf/2010.04245.pdf; https://arxiv.org/pdf/1909.08053.pdf; https://arxiv.org/pdf/2302.06675.pdf,7,allenai/c4; mc4; togethercomputer/RedPajama-Data-1T; bigcode/the-stack-dedup; allenai/s2orc,1770,61363.15159,,https://huggingface.co/eluzhnica/mpt-30b-peft-compatible,"This is the MPT-30B but with added support to finetune using peft (tested with qlora). It is not finetuned further, the weights are the same as the original MPT-30b.; I have not traced through the whole huggingface stack to see if this is working correctly but it does finetune with qlora and outputs are reasonable.
Inspired by implementations here https://huggingface.co/cekal/mpt-7b-peft-compatible/commits/main
https://huggingface.co/mosaicml/mpt-7b/discussions/42.; The original description for MosaicML team below:; MPT-30B is a decoder-style transformer pretrained from scratch on 1T tokens of English text and code.
This model was trained by MosaicML.; MPT-30B is part of the family of Mosaic Pretrained Transformer (MPT) models, which use a modified transformer architecture optimized for efficient training and inference.",Natural Language Processing
Chronos-Hermes-13B-SuperHOT-8K-GPTQ,Text Generation,Transformers,,other,,20,,967,7631.183488,,https://huggingface.co/TheBloke/Chronos-Hermes-13B-SuperHOT-8K-GPTQ,Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ 4bit model files for Austism's Chronos Hermes 13B merged with Kaio Ken's SuperHOT 8K.; It is the result of quantising to 4bit using GPTQ-for-LLaMa.; This is an experimental new GPTQ which offers up to 8K context size,Natural Language Processing
Pygmalion-13B-SuperHOT-8K-GPTQ,Text Generation,Transformers,,other,,36,,3542,7631.186771,,https://huggingface.co/TheBloke/Pygmalion-13B-SuperHOT-8K-GPTQ,Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ 4bit model files for TehVenom's merge of PygmalionAI's Pygmalion 13B merged with Kaio Ken's SuperHOT 8K.; It is the result of quantising to 4bit using GPTQ-for-LLaMa.; This is an experimental new GPTQ which offers up to 8K context size,Natural Language Processing
xgen-7b-8k-inst,Text Generation,PyTorch; Transformers,,,,78,,982183,28252.19997,4,https://huggingface.co/Salesforce/xgen-7b-8k-inst,"Official research release for the family of XGen models (7B) by Salesforce AI Research:; Title: Long Sequence Modeling with XGen: A 7B LLM Trained on 8K Input Sequence Length; Authors: Erik Nijkamp*, Tian Xie*, Hiroaki Hayashi*, Bo Pang*, Congying Xia*, Chen Xing, Jesse Vig, Semih Yavuz, Philippe Laban, Ben Krause, Senthil Purushwalkam, Tong Niu, Wojciech Kryscinski, Lidiya Murakhovs'ka, Prafulla Kumar Choubey, Alex Fabbri, Ye Liu, Rui Meng, Lifu Tu, Meghana Bhat, Chien-Sheng Wu, Silvio Savarese, Yingbo Zhou, Shafiq Rayhan Joty, Caiming Xiong.; (* indicates equal contribution); Correspondence to: Shafiq Rayhan Joty, Caiming Xiong",Natural Language Processing
longchat-7b-16k,Text Generation,PyTorch; Transformers,,,,35,,11767,13804.03943,1,https://huggingface.co/lmsys/longchat-7b-16k,"Please use load_model from FastChat or LongChat repo to load the model (or chatting API from FastChat). There is a monkey patch needed to use the model.
Usage referece:; (LongChat) python3 eval.py --model-name-or-path  lmsys/longchat-7b-16k --task topics ; (FastChat) python3 -m fastchat.serve.cli --model-path lmsys/longchat-7b-16k; Under the hood, the monkey patch is added in:; https://github.com/lm-sys/FastChat/blob/da0641e567cf93756b0978ab5a6b092e96f06240/fastchat/model/model_adapter.py#L429",Natural Language Processing
WizardLM-Uncensored-SuperCOT-StoryTelling-30B-SuperHOT-8K-GPTQ,Text Generation,Transformers,,other,,19,,2320,17307.98422,,https://huggingface.co/TheBloke/WizardLM-Uncensored-SuperCOT-StoryTelling-30B-SuperHOT-8K-GPTQ,Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ 4bit model files for Monero's WizardLM Uncensored SuperCOT Storytelling 30B merged with Kaio Ken's SuperHOT 8K.; It is the result of quantising to 4bit using GPTQ-for-LLaMa.; This is an experimental new GPTQ which offers up to 8K context size,Natural Language Processing
airoboros-65B-gpt4-1.4-GPTQ,Text Generation,Transformers,,other,,10,,383,34306.35064,,https://huggingface.co/TheBloke/airoboros-65B-gpt4-1.4-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for Jon Durbin's Airoboros 65B GPT4 1.4.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; These models were quantised using hardware kindly provided by Latitude.sh.",Natural Language Processing
WizardLM-Uncensored-SuperCOT-StoryTelling-30B-SuperHOT-8K-GGML,,,,other,,12,,0,122880.0107,,https://huggingface.co/TheBloke/WizardLM-Uncensored-SuperCOT-StoryTelling-30B-SuperHOT-8K-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Monero's WizardLM Uncensored SuperCOT Storytelling 30B.; These are SuperHOT GGMLs with an increased context length. SuperHOT is a new system that employs RoPE to expand context beyond what was originally possible for a model. It was discovered and developed by kaiokendev.; In order to use the increased context length, you can presently use:",
Chinese-Alpaca-33B-SuperHOT-8K-GGML,,,,other,,5,,0,123699.2119,,https://huggingface.co/TheBloke/Chinese-Alpaca-33B-SuperHOT-8K-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Minlik's Chinese Alpaca 33B Merged.; These are SuperHOT GGMLs with an increased context length. SuperHOT is a new system that employs RoPE to expand context beyond what was originally possible for a model. It was discovered and developed by kaiokendev.; In order to use the increased context length, you can presently use:",
vicuna-33B-GPTQ,Text Generation,Transformers,,other,https://arxiv.org/pdf/2302.13971.pdf; https://arxiv.org/pdf/2306.05685.pdf,8,,1169,17307.94314,,https://huggingface.co/TheBloke/vicuna-33B-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for LmSys' Vicuna 33B 1.3.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; These models were quantised using hardware kindly provided by Latitude.sh.",Natural Language Processing
Vicuna-33B-1-3-SuperHOT-8K-GPTQ,Text Generation,Transformers,,other,https://arxiv.org/pdf/2302.13971.pdf; https://arxiv.org/pdf/2306.05685.pdf,21,,1435,17307.98438,,https://huggingface.co/TheBloke/Vicuna-33B-1-3-SuperHOT-8K-GPTQ,Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ 4bit model files for LmSys' Vicuna 33B 1.3 (final) merged with Kaio Ken's SuperHOT 8K.; It is the result of quantising to 4bit using GPTQ-for-LLaMa.; This is an experimental new GPTQ which offers up to 8K context size,Natural Language Processing
OPI_full_Galactica-6.7B,Text Generation,PyTorch; Transformers,English,apache-2.0,,3,BAAI/OPI,0,27553.53556,,https://huggingface.co/BAAI/OPI_full_Galactica-6.7B,"; This repo is for the Open Protein Instructions (OPI) project, aiming to build and release a protein instruction dataset as well as propose to explore and benckmark LLMs for protein modeling in protein biology.
For more details of training and testing, please visit https://github.com/baaihealth/opi.; ; Usage and License Notices: LLaMA and Galactica are intended and licensed for research use only. The dataset is CC BY NC 4.0 (allowing only non-commercial use) and models trained using the dataset should not be used outside of research purposes. The weight diff for Stanford Alpaca is also CC BY NC 4.0 (allowing only non-commercial use).; For OPI-instruction tuning, we adopt the training script of Stanford Alpaca. ",Natural Language Processing
SadTalker-V002rc,,,,mit,,4,,0,1942.001761,5,https://huggingface.co/vinthony/SadTalker-V002rc,"The new released model of https://github.com/OpenTalker/SadTalker.; The file of https://huggingface.co/vinthony/SadTalker-V002rc/blob/main/epoch_00190_iteration_000400000_checkpoint.pt comes from https://github.com/RenYurui/PIRender.; Thanks for their wonderful work!; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
rvc_models_that_Pika_use,,,,,,11,,0,28226.08205,,https://huggingface.co/pika724/rvc_models_that_Pika_use,"No model card; New: Create and edit this model card directly on the website!; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
zeroscope_v2_1111models,,,,cc-by-nc-4.0,,11,,0,2672.642881,,https://huggingface.co/cerspense/zeroscope_v2_1111models,"
example outputs (courtesy of dotsimulate); A collection of watermark-free Modelscope-based video models capable of generating high quality video at 448x256, 576x320 and 1024 x 576. These models were trained from the original weights with offset noise using 9,923 clips and 29,769 tagged frames.
This collection makes it easy to switch between models with the new dropdown menu in the 1111 extension.; Simply download the contents of this repo to 'stable-diffusion-webui\models\text2video'
Or, manually download the model folders you want, along with VQGAN_autoencoder.pth.; Thanks to dotsimulate for the config files.; Thanks to camenduru, kabachuha, ExponentialML, VANYA, polyware, tin2tin",
nsql-6B,Text Generation,PyTorch; Transformers,,bsd-3-clause,,25,,1191,29054.24645,1,https://huggingface.co/NumbersStation/nsql-6B,"NSQL is a family of autoregressive open-source large foundation models (FMs) designed specifically for SQL generation tasks.; The checkpoint included in this repository is based on CodeGen-Multi 6B from Salesforce and further pre-trained on a dataset of general SQL queries and then fine-tuned on a dataset composed of text-to-SQL pairs.; The general SQL queries are the SQL subset from The Stack, containing 1M training samples. The labeled text-to-SQL pairs come from more than 20 public sources across the web from standard datasets. We hold out Spider and GeoQuery datasets for use in evaluation.; We evaluate our models on two text-to-SQL benchmarks: Spider and GeoQuery.; NSQL was trained using cross-entropy loss to maximize the likelihood of sequential inputs. For finetuning on text-to-SQL pairs, we only compute the loss over the SQL portion of the pair. The family of models is trained using 80GB A100s, leveraging data and model parallelism. We pre-trained for 3 epochs and fine-tuned for 10 epochs.",Natural Language Processing
shap-e,Text-to-Image,Diffusers,,mit,https://arxiv.org/pdf/2305.02463.pdf,8,,1465,0.005680923,7,https://huggingface.co/openai/shap-e,"Shap-E introduces a diffusion process that can generate a 3D image from a text prompt. It was introduced in Shap-E: Generating Conditional 3D Implicit Functions by Heewoo Jun and Alex Nichol from OpenAI. ; Original repository of Shap-E can be found here: https://github.com/openai/shap-e. ; The authors of Shap-E didn't author this model card. They provide a separate model card here.; The abstract of the Shap-E paper:; We present Shap-E, a conditional generative model for 3D assets. Unlike recent work on 3D generative models which produce a single output representation, Shap-E directly generates the parameters of implicit functions that can be rendered as both textured meshes and neural radiance fields. We train Shap-E in two stages: first, we train an encoder that deterministically maps 3D assets into the parameters of an implicit function; second, we train a conditional diffusion model on outputs of the encoder. When trained on a large dataset of paired 3D and text data, our resulting models are capable of generating complex and diverse 3D assets in a matter of seconds. When compared to Point-E, an explicit generative model over point clouds, Shap-E converges faster and reaches comparable or better sample quality despite modeling a higher-dimensional, multi-representation output space. We release model weights, inference code, and samples at this https URL.",Multimodel
falcon-40b-sft-mix-1226-GGML,,Transformers,4 languages,apache-2.0,,9,OpenAssistant/oasst1; databricks/databricks-dolly-15k,1,279244.8114,,https://huggingface.co/TheBloke/falcon-40b-sft-mix-1226-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGCC format model files for Open Assistant's Falcon 40B SFT MIX.; These files will not work in llama.cpp, text-generation-webui or KoboldCpp.; GGCC is a new format created in a new fork of llama.cpp that introduced this new Falcon GGML-based support: cmp-nc/ggllm.cpp.",
replit-openorca,Text Generation,PyTorch; Transformers,,,,5,Open-Orca/OpenOrca,360,5325.616556,1,https://huggingface.co/matorus/replit-openorca,replit/replit-code-v1-3b finetuned on Open-Orca/OpenOrca.,Natural Language Processing
genz-7b,Text Generation,PyTorch; Transformers,,apache-2.0,,4,,44,0,,https://huggingface.co/budecosystem/genz-7b,"This repository is publicly accessible, but
			you have to accept the conditions to access its files and content.
		; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		; The most capable commercially usable Instruct Finetuned LLM yet with 8K input token length, latest information & better coding.; Use following prompt template; Check the GitHub for the code -> GenZ",Natural Language Processing
codegen25-7b-mono,Text Generation,PyTorch; Transformers,code,apache-2.0,https://arxiv.org/pdf/2305.02309.pdf,15,bigcode/starcoderdata,1561,28252.20218,,https://huggingface.co/Salesforce/codegen25-7b-mono,"Title: CodeGen2.5: Small, but mighty; Authors: Erik Nijkamp*, Hiroaki Hayashi*, Yingbo Zhou, Caiming Xiong; (* equal contribution); CodeGen2.5 is a family of autoregressive language models for program synthesis.; Building upon CodeGen2, the model is trained on StarCoderData for 1.4T tokens, achieving competitive results compared to StarCoderBase-15.5B with less than half the size.",Natural Language Processing
Vicuna-7B-v1-3-SuperHOT-8K-GPTQ,Text Generation,Transformers,,other,https://arxiv.org/pdf/2302.13971.pdf; https://arxiv.org/pdf/2306.05685.pdf,3,,14,4096.545248,,https://huggingface.co/TheBloke/Vicuna-7B-v1-3-SuperHOT-8K-GPTQ,Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ 4bit model files for LmSys' Vicuna 7B v1.3 merged with Kaio Ken's SuperHOT 8K.; It is the result of quantising to 4bit using GPTQ-for-LLaMa.; This is an experimental new GPTQ which offers up to 8K context size,Natural Language Processing
13B-BlueMethod,Text Generation,PyTorch; Transformers,,,,4,,11,33751.00555,,https://huggingface.co/CalderaAI/13B-BlueMethod,"BlueMethod is a bit of a convoluted experiment in tiered merging.
Furthering the experimental nature of the merge, the models combined
were done so with a custom script that randomized the percent of each
layer merged from one model to the next. This is a warmup for a larger
project.
[Tier One and Two Merges not released; internal naming convention]; Tier One Merges:; 13B-Metharme+13B-Nous-Hermes=13B-Methermes; 13B-Vicuna-cocktail+13B-Manticore=13B-Vicortia; 13B-HyperMantis+13B-Alpacino=13B-PsychoMantis",Natural Language Processing
BanglaConformer,Automatic Speech Recognition,NeMo,Bengali,mit,https://arxiv.org/pdf/2305.09688.pdf,3,,166,510.0057422,,https://huggingface.co/bengaliAI/BanglaConformer,"Conformer-CTC model trained on the OOD-Speech dataset to transcribe speech from Bangla audio. This is a large variant of the model, with ~121M parameters. To know more about the model architecture see the NeMo Documentation here.;  The training split contains 1100+ hours of audio data crowdsoruced from native Bangla speakers. We trained on this split for 164 epochs , then the model was evaluated on23+ hours of audio across 17 diverse domains .; The model can be used as a pretrained checkpoint for inference or for fine-tuning on another dataset through the NVIDIA NeMo toolkit. It is recommended to install the toolkit, after installing the pyTorch package. ; After installing the required dependencies, download the .nemo file or the pretrained model to your local directory. you can instantiate the pretrained model like following: ; Prior to feeding the input audio to the pretrained model for training or inference, we need to resample the audio to 16KHz. We can achieve that using the sox library :",Audio
Evol-Replit-v1,Text Generation,PyTorch; Transformers,,cc-by-sa-4.0,,4,nickrosh/Evol-Instruct-Code-80k-v1,7,10642.81593,,https://huggingface.co/nickrosh/Evol-Replit-v1,"This model uses the Evol-Instruct-Code-80k-v1 dataset generated using the Evol-Teacher repo. Currently, WizardCoder is one the most performant Code Generation models, being beaten only by ChatGPT. This takes the Code Alpaca 20k dataset and evolves each instruction through a randomly chosen evolution prompt to increase instruction complexity. These prompts range from increase time/space complexity, to increasing requirements, to adding erroneus code to improve robustness, etc. This is done three times with pruning and post processing to remove unwanted instructions and responses. The iterative addition of more complexity gives higher quality and more in-depth instructions than what is ususally generated in Alpaca methods. This, like in the case of WizardCoder and WizardLM, can lead to strong performance that gets very close to RLHF model performance.; This model uses ReplitLM fine tuned with the following parameters:",Natural Language Processing
sdxl-0.9-usage,Text-to-Image,Diffusers,English,apache-2.0,,9,,0,0.020298347,,https://huggingface.co/NathMath/sdxl-0.9-usage,"This repo is a tutorial intended to help beginners use the new released model, stable-diffusion-xl-0.9 in ComfyUI, with both the base and refiner models together to achieve a magnificent quality of image generation.; With usable demo interfaces for ComfyUI to use the models (see below)!; Here is a full tutorial to use stable-diffusion-xl-0.9 FROM ZERO!; When you have loaded into the ComfyUI, it will display this default interface shown below:
; Then, find out the ""load"" button on a floating panel, click, and choose the "".json"" file download from THIS REPO, it will quickly load a friendly interface to use the stable-diffusion-xl-0.9 series.
",Multimodel
Slider,,,Japanese,creativeml-openrail-m,,5,,0,128.1672355,,https://huggingface.co/TomyAI/Slider,"ÈéÊ×¤ÎÉ«¡¢¥µ¥¤¥º¡¢¤ª¤Ã¤Ñ¤¤¤Î¼Ä¤ê¾ßºÏ¡¢¸ß¤µ¤òÕ{Õû¤¹¤ë¥¹¥é¥¤¥À©`LoRA¤Ç¤¹¡£
e¤Ë¥À¥¦¥ó¥í©`¥É¤¹¤ë¤«OppaiSliderPack.zip¤ò¥À¥¦¥ó¥í©`¥É¤·¤Æ½âö¤·¤Æ¤¯¤À¤µ¤¤¡£; ; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
Emu,,,,,https://arxiv.org/pdf/2307.05222.pdf,13,,0,58265.6044,,https://huggingface.co/BAAI/Emu,"Quan Sun1*, Qiying Yu2,1*, Yufeng Cui1*, Fan Zhang1*, Xiaosong Zhang1*, Yueze Wang1, Hongcheng Gao1, Jingjing Liu2, Tiejun Huang1,3, Xinlong Wang1; 1 BAAI, 2 THU, 3 PKU * Equal Contribution; |  Paper | Demo(tmp) |; Emu is a Large Multimodal Model (LMM) trained with a unified autoregressive objective, i.e., predict-the-next-element, including both visual embeddings and textual tokens. Trained under this objective, Emu can serve as a generalist interface for diverse multimodal tasks, such as image captioning, image/video question answering, and text-to-image generation, together with new abilities like in-context text and image generation, and image blending.; Clone the github repository and install required packages:",
brav6,Text-to-Image,Diffusers,,creativeml-openrail-m,,3,,358,0.004404373,,https://huggingface.co/stablediffusionapi/brav6,"; Get API key from Stable Diffusion API, No Payment needed. ; Replace Key in below code, change model_id  to ""brav6""; Coding in PHP/Node/Java etc? Have a look at docs for more code examples: View docs; Try model for free: Generate Images",Multimodel
mblip-mt0-xl,Image-to-Text,PyTorch; Transformers,English; multilingual,mit,https://arxiv.org/pdf/2307.06930.pdf; https://arxiv.org/pdf/2301.12597.pdf,5,Gregor/mblip-train,90,17797.39054,,https://huggingface.co/Gregor/mblip-mt0-xl,"This is the model checkpoint for our work mBLIP: Efficient Bootstrapping of Multilingual Vision-LLMs.; mBLIP is a BLIP-2 model which consists of 3 sub-models: a Vision Transformer (ViT), a Query-Transformer (Q-Former) and a large language model (LLM).; The Q-Former and ViT have both been initialized by an English BLIP-2 checkpoint (blip2-flan-t5-xl) and then re-aligned 
to the multilingual LLM (mt0-xl) using a multilingual task mixture.;  ; This allows the model to be used for tasks like:",Multimodel
AnimateDiff,,Diffusers,,,,7,,0,31374.84148,,https://huggingface.co/camenduru/AnimateDiff,"No model card; New: Create and edit this model card directly on the website!; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
WizardCoder-Guanaco-15B-V1.1,Text Generation,PyTorch; Transformers,English,apache-2.0,,3,guanaco,73,31747.26141,,https://huggingface.co/LoupGarou/WizardCoder-Guanaco-15B-V1.1,"The WizardCoder-Guanaco-15B-V1.1 is a language model that combines the strengths of the WizardCoder base model and the openassistant-guanaco dataset for finetuning. The openassistant-guanaco dataset was further trimmed to within 2 standard deviations of token size for input and output pairs and all non-english data has been removed to reduce training size requirements.; Version 1.1 showcases notable enhancements, employing a modified version of the previous openassistant-guanaco dataset. This dataset underwent a comprehensive revision, replacing every single answer with those generated by GPT-4.; The volume of the datasets has also been augmented by approximately 50%, with a particular focus on high school and abstract algebra. This expansion leveraged the combined capabilities of GPT-4 and GPT-3.5-Turbo. The initial evaluation of algebraic functions over 12 epochs indicated promising results from this enriched dataset. However, this is just the beginning; further refinements are in the pipeline, aiming to optimize the dataset quality and subsequently decrease the number of epochs required to achieve comparable results.; Considering the need to curtail memory consumption during training, this dataset was tailored to consist solely of English language questions and answers. Consequently, the model's performance in language translation may not be up to par. Nevertheless, the focus remains on enhancing the model's proficiency and efficiency within its defined scope.; This model is designed to be used for a wide array of text generation tasks that require understanding and generating English text. The model is expected to perform well in tasks such as answering questions, writing essays, summarizing text, translation, and more. However, given the specific data processing and finetuning done, it might be particularly effective for tasks related to English language question-answering systems.",Natural Language Processing
ziya-llama-13b-medical-merged,Text Generation,PyTorch; Transformers,Chinese; English,apache-2.0,,5,,64,26809.62356,,https://huggingface.co/shibing624/ziya-llama-13b-medical-merged,»ùÓÚLLaMA-13BµÄÖÐÓ¢Ò½ÁÆÎÊ´ðÄ£ÐÍ; shibing624/ziya-llama-13b-medical-merged evaluate test data£º; The overall performance of model on QA test:; ÔÚÖÐÎÄ¿ª·Å²âÊÔ¼¯ÖÐµÄ±íÏÖÓÅÒì£¬¼Ì³ÐÁËÁ½·½ÃæµÄÓÅÊÆ£º1£©Î¢µ÷ÑµÁ·µÄµ××ùÊÇZiya-LLaMA-13BÄ£ÐÍ£¬ÊÇ½ÏÇ¿µÄÖÐÓ¢ÎÄµ××ùÄ£ÐÍ£¬2£©Î¢µ÷Ê¹ÓÃµÄÊÇ¸ßÖÊÁ¿240ÍòÌõÖÐÓ¢ÎÄÒ½ÁÆÖ¸ÁîÊý¾Ý¼¯£¬ºÍ¶àÖÖÍ¨ÓÃÖ¸ÁîÊý¾Ý¼¯£¬Î¢µ÷ºóµÄÄ£ÐÍÔÚÒ½ÁÆÐÐÒµ´ð¸´ÄÜÁ¦´ïµ½ÁìÏÈË®Æ½£¬ÔÚÍ¨ÓÃÎÊÌâÉÏµÄ´ð¸´ÄÜÁ¦²»ÈõÓÚLLaMA-13B¡£; training args:,Natural Language Processing
RedPajama-INCITE-Base-3B-v1-paraphrase-tone,Text Generation,PEFT,English,wtfpl,,3,,122,21.15580833,,https://huggingface.co/llm-toys/RedPajama-INCITE-Base-3B-v1-paraphrase-tone,"The togethercomputer/RedPajama-INCITE-Base-3B-v1 model finetuned for Paraphrasing and Changing the Tone of the input sentence(to casual/professional/witty). Training data was generated using gpt-35-turbo.; Look at the repo llm-toys for usage and other details.; Try in colab:


; ; The following bitsandbytes quantization config was used during training:",Natural Language Processing
ChromaFT,,,,,,7,,0,12247.04578,,https://huggingface.co/zzzAI19/ChromaFT,"This model was created through fine tuning.
There are two versions: an all-ages depiction-oriented version and an NSFW-enhanced version.; All-ages depiction-oriented version£ºChromaFT_v1-pruned.safetensors; NSFW-enhanced version£ºChromaNeoFT_v1-pruned.safetensors; (NEO£ºNsfw Erotic Option); For sample illustrations, please visit my blog.
https://ai-drawing.net/en/2023/07/15/introducing-of-chroma-ft-v1-0/",
BadAnime_v1,Text-to-Image,Diffusers,,other,,6,,554,2181.122551,3,https://huggingface.co/digiplay/BadAnime_v1,Model info :; https://civitai.com/models/107703?modelVersionId=115852; Sample image I made thru Huggingface's API :; ; Original Author's DEMO image :,Multimodel
RedPajama-INCITE-Base-3B-v1-dialogue-summary-topic,Text Generation,PEFT,English,wtfpl,,3,,90,21.14681755,,https://huggingface.co/llm-toys/RedPajama-INCITE-Base-3B-v1-dialogue-summary-topic,"The togethercomputer/RedPajama-INCITE-Base-3B-v1 model finetuned for Summary and Topic generation from a dailogue. We use a sample of roughly 1000 data points from the
Dialogsum dataset for fine-tuning.; Look at the repo llm-toys for usage and other details.; Try in colab:


; ; The following bitsandbytes quantization config was used during training:",Natural Language Processing
BuboGPT-ckpt,,,,apache-2.0,,3,,0,747.0015111,,https://huggingface.co/magicr/BuboGPT-ckpt,"Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
Unreal_V4.1,Text-to-Image,Diffusers,English,creativeml-openrail-m,,3,,436,0.003472099,2,https://huggingface.co/Meina/Unreal_V4.1,"MeinaUnreal objetive is to be able to do anime art with a 2.5d feeling.
( the VAE is already baked in the model ); For examples and prompts, please checkout: https://civitai.com/models/18798/meinaunreal
I have a discord server where you can post images that you generated, discuss prompt and/or ask for help.; https://discord.gg/XC9nGZNDUd If you like one of my models and want to support their updates; I've made a ko-fi page; https://ko-fi.com/meina where you can pay me a coffee <3; And a Patreon page; https://www.patreon.com/MeinaMix where you can support me and get acess to beta of my models!",Multimodel
falcon-7b-paraphrase-tone-dialogue-summary-topic,Text Generation,PEFT,English,wtfpl,,3,,20,19.05810921,,https://huggingface.co/llm-toys/falcon-7b-paraphrase-tone-dialogue-summary-topic,"The tiiuae/falcon-7b model finetuned for Paraphrasing, Changing the Tone of the input sentence(to casual/professional/witty), 
Summary and Topic generation from a dialogue. Data for Paraphrasing and Changing the Tone was generated using gpt-35-turbo and a sample of roughly 1000 data points from the
Dialogsum dataset was used for Summary and Topic generation.; Look at the repo llm-toys for usage and other details.; Try in colab (you might need the pro version):


; ; The following bitsandbytes quantization config was used during training:",Natural Language Processing
lora_diffusion,Text-to-Image,Diffusers,,creativeml-openrail-m,,3,,233,0.003413506,2,https://huggingface.co/Andyrasika/lora_diffusion,"The model is created using the following steps:; Since this is only the first official release, I believe there are still many, many imperfections. 
Please provide feedback in time, and I will continuously make corrections, thank you!",Multimodel
OnlyAnime_v2.3,Text-to-Image,Diffusers,,other,,3,,382,2608.602846,3,https://huggingface.co/digiplay/OnlyAnime_v2.3,"Model info:
https://civitai.com/models/105955/onlyanime; Sample image I made thru Huggingface's API :
; Original Author's DEMO images :; ; *This image using LORA file ? FilmVelvia3.safetensors 
you can also download here: ",Multimodel
HIMAWARI_v1,Text-to-Image,Diffusers,,other,,3,,404,5806.082903,3,https://huggingface.co/digiplay/HIMAWARI_v1,"Model info :; https://civitai.com/models/103018/himawari?modelVersionId=110254; More models from the Author: (he made a lot of useful LORAs, pls check it out ^^); https://civitai.com/user/KimTarou/models; Sample image I made thru Huggingface's API :",Multimodel
Llama-2-7B-ggml,,,,,,3,,0,61870.09112,,https://huggingface.co/localmodels/Llama-2-7B-ggml,"From: https://huggingface.co/meta-llama/Llama-2-7b-hf; Quantized using an older version of llama.cpp and compatible with llama.cpp from May 19, commit 2d5db48.; Quantization methods compatible with latest llama.cpp from June 6, commit 2d43387.; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
llama-2-7b-chat-guanaco-hf-4bit,Text Generation,TensorBoard; PyTorch,English,other,,3,,0,135.852984,,https://huggingface.co/quantumaikr/llama-2-7b-chat-guanaco-hf-4bit,"We are unlocking the power of large language models. Our latest version of Llama is now accessible to individuals, creators, researchers and businesses of all sizes so that they can experiment, innovate and scale their ideas responsibly. ; This release includes model weights and starting code for pretrained and fine-tuned Llama language models ¡ª ranging from 7B to 70B parameters.; This repository is intended as a minimal example to load Llama 2 models and run inference. For more detailed examples leveraging HuggingFace, see llama-recipes.; In order to download the model weights and tokenizer, please visit the Meta AI website and accept our License.; Once your request is approved, you will receive a signed URL over email. Then run the download.sh script, passing the URL provided when prompted to start the download. Make sure that you copy the URL text itself, do not use the 'Copy link address' option when you right click the URL. If the copied URL text starts with: https://download.llamameta.net, you copied it correctly. If the copied URL text starts with: https://l.facebook.com, you copied it the wrong way.",Natural Language Processing
mlc-chat-Llama-2-7b-chat-hf-q3f16_1,,,,,,3,,0,1423.327014,,https://huggingface.co/mlc-ai/mlc-chat-Llama-2-7b-chat-hf-q3f16_1,"No model card; New: Create and edit this model card directly on the website!; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
mlc-chat-Llama-2-7b-chat-hf-q4f32_1,,,,,,3,,0,1500.432806,,https://huggingface.co/mlc-ai/mlc-chat-Llama-2-7b-chat-hf-q4f32_1,"No model card; New: Create and edit this model card directly on the website!; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
Llama-2-70B-Chat-GPTQ,Text Generation,Transformers,,,,3,,215,36149.55265,,https://huggingface.co/localmodels/Llama-2-70B-Chat-GPTQ,"From: https://huggingface.co/meta-llama/Llama-2-70b-chat-hf; Llama 2 is a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. This is the repository for the 70B fine-tuned model, optimized for dialogue use cases and converted for the Hugging Face Transformers format. Links to other models can be found in the index at the bottom.; Note: Use of this model is governed by the Meta license. In order to download the model weights and tokenizer, please visit the website and accept our License before requesting access here.; Meta developed and publicly released the Llama 2 family of large language models (LLMs), a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. Our fine-tuned LLMs, called Llama-2-Chat, are optimized for dialogue use cases. Llama-2-Chat models outperform open-source chat models on most benchmarks we tested, and in our human evaluations for helpfulness and safety, are on par with some popular closed-source models like ChatGPT and PaLM.; Model Developers Meta",Natural Language Processing
Llama-2-7B-bf16-sharded,Text Generation,PyTorch; Transformers,,,,3,,933,13480.3577,,https://huggingface.co/TinyPixel/Llama-2-7B-bf16-sharded,No model card; New: Create and edit this model card directly on the website!,Natural Language Processing
Llama-2-70b-chat-hf,Text Generation,Safetensors; Transformers; PyTorch,English,,,3,,58,141284.8751,,https://huggingface.co/4bit/Llama-2-70b-chat-hf,"Llama 2 is a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. This is the repository for the 70B fine-tuned model, optimized for dialogue use cases and converted for the Hugging Face Transformers format. Links to other models can be found in the index at the bottom.; Note: Use of this model is governed by the Meta license. In order to download the model weights and tokenizer, please visit the website and accept our License before requesting access here.; Meta developed and publicly released the Llama 2 family of large language models (LLMs), a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. Our fine-tuned LLMs, called Llama-2-Chat, are optimized for dialogue use cases. Llama-2-Chat models outperform open-source chat models on most benchmarks we tested, and in our human evaluations for helpfulness and safety, are on par with some popular closed-source models like ChatGPT and PaLM.; Model Developers Meta; Variations Llama 2 comes in a range of parameter sizes ¡ª 7B, 13B, and 70B ¡ª as well as pretrained and fine-tuned variations.",Natural Language Processing
llama-2-7b-guanaco-fp16,Text Classification,PyTorch; Transformers,English,,,3,,33,13805.87871,,https://huggingface.co/Mikael110/llama-2-7b-guanaco-fp16,This is a Llama-2 version of Guanaco. It was finetuned from the base Llama-7b model using the official training scripts found in the QLoRA repo. I wanted it to be as faithful as possible and therefore changed nothing in the training script beyond the model it was pointing to. The model prompt is therefore also the same as the original Guanaco model.; This repo contains the merged f16 model. The QLoRA adaptor can be found here.; A 13b version of the model can be found here.; Legal Disclaimer: This model is bound by the usage restrictions of the original Llama-2 model. And comes with no warranty or gurantees of any kind.,Natural Language Processing
llava-v1-0719-336px-lora-vicuna-13b-v1.3,Text Generation,Transformers,,,,3,,0,511.5782145,,https://huggingface.co/liuhaotian/llava-v1-0719-336px-lora-vicuna-13b-v1.3,"Model type:
LLaVA is an open-source chatbot trained by fine-tuning LLaMA/Vicuna on GPT-generated multimodal instruction-following data.
It is an auto-regressive language model, based on the transformer architecture.; Model date:
LLaVA-v1-0719-336px-LoRA-Vicuna-13B-v1.3 was trained in July 2023.; Paper or resources for more information:
https://llava-vl.github.io/; Non-commerical Use.; Where to send questions or comments about the model:
https://github.com/haotian-liu/LLaVA/issues",Natural Language Processing
falcon-7b-qlora-chat-airbird-v2,Question Answering,Transformers,English,apache-2.0,,3,,0,18.9020232,,https://huggingface.co/tostcorp/falcon-7b-qlora-chat-airbird-v2,Falcon-7b finetuned with Airbird Questions & Answers,Natural Language Processing
FishMix_v1.1,Text-to-Image,Diffusers,,other,,3,,291,2181.123193,3,https://huggingface.co/digiplay/FishMix_v1.1,"Model info :; https://civitai.com/models/15745?modelVersionId=27424; Original Author's DEMO images :; 


",Multimodel
Luna-AI-Llama2-Uncensored-FP16,Text Generation,PyTorch; Transformers,,cc-by-sa-4.0,,3,,56,13803.55047,,https://huggingface.co/Tap-M/Luna-AI-Llama2-Uncensored-FP16,"Model Description; ¡°Tap-M/Luna-AI-Llama2-Uncensored¡± is a latest chat language model which is fine-tuned on llama2 7b with custom datasets of multiple rounds of chats between Human & AI. This model was fine-tuned by Tap, the creator of Luna AI. The result is an enhanced Uncensored Llama2 7b Chat model that rivals many Open Source Chat Models in performance across a variety of tasks.
This model stands out for its long responses, low hallucination rate, and absence of censorship mechanisms.; Model Training; The fine-tuning process was performed on an 8x a100 80GB machine. The model was trained almost entirely on synthetic outputs. This includes data from diverse sources which we included to create our custom dataset, it includes multiple rounds of chats between Human & AI.; Prompt Format",Natural Language Processing
llama-2-13b-guanaco-qlora,Text Classification,,English,,,3,,0,501.0029006,,https://huggingface.co/Mikael110/llama-2-13b-guanaco-qlora,"This is a Llama-2 version of Guanaco. It was finetuned from the base Llama-13b model using the official training scripts found in the QLoRA repo. I wanted it to be as faithful as possible and therefore changed nothing in the training script beyond the model it was pointing to. The model prompt is therefore also the same as the original Guanaco model.; This repo contains the QLoRA adapter. A merged f16 model can be found here.; A 7b version of the adapter can be found here.; Legal Disclaimer: This model is bound by the usage restrictions of the original Llama-2 model. And comes with no warranty or gurantees of any kind.; Unable to determine this model¡¯s library. Check the
								docs 
.
							",Natural Language Processing
mlc-chat-Llama-2-70b-chat-hf-q4f16_1,,,,,,3,,0,3484.851559,,https://huggingface.co/mlc-ai/mlc-chat-Llama-2-70b-chat-hf-q4f16_1,"No model card; New: Create and edit this model card directly on the website!; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
chinese-alpaca-pro-33b-merged,Text Generation,PyTorch; Transformers,,,,3,,0,67379.99206,,https://huggingface.co/minlik/chinese-alpaca-pro-33b-merged,No model card; New: Create and edit this model card directly on the website!,Natural Language Processing
meta_llama_2finetuned,Text Generation,PyTorch; TensorBoard; Transformers,,,,3,,1,0,,https://huggingface.co/Sakil/meta_llama_2finetuned,"This repository is publicly accessible, but
			you have to accept the conditions to access its files and content.
		; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		",Natural Language Processing
yayi-7b-llama2,Text Generation,PyTorch; Transformers,Chinese; English,,,3,,0,13804.03964,,https://huggingface.co/wenge-research/yayi-7b-llama2,ÑÅÒâ´óÄ£ÐÍÔÚ°ÙÍò¼¶ÈË¹¤¹¹ÔìµÄ¸ßÖÊÁ¿ÁìÓòÊý¾ÝÉÏ½øÐÐÖ¸ÁîÎ¢µ÷µÃµ½£¬ÑµÁ·Êý¾Ý¸²¸ÇÃ½ÌåÐû´«¡¢ÓßÇé·ÖÎö¡¢¹«¹²°²È«¡¢½ðÈÚ·ç¿Ø¡¢³ÇÊÐÖÎÀíµÈÎå´óÁìÓò£¬ÉÏ°ÙÖÖ×ÔÈ»ÓïÑÔÖ¸ÁîÈÎÎñ¡£ÑÅÒâ´óÄ£ÐÍ´ÓÔ¤ÑµÁ·³õÊ¼»¯È¨ÖØµ½ÁìÓòÄ£ÐÍµÄµü´ú¹ý³ÌÖÐ£¬ÎÒÃÇÖð²½ÔöÇ¿ÁËËüµÄÖÐÎÄ»ù´¡ÄÜÁ¦ºÍÁìÓò·ÖÎöÄÜÁ¦£¬²¢Ôö¼ÓÁË¶àÂÖ¶Ô»°ºÍ²¿·Ö²å¼þÄÜÁ¦¡£Í¬Ê±£¬¾­¹ýÊý°ÙÃûÓÃ»§ÄÚ²â¹ý³ÌÖÐ³ÖÐø²»¶ÏµÄÈË¹¤·´À¡ÓÅ»¯£¬ÎÒÃÇ½øÒ»²½ÌáÉýÁËÄ£ÐÍÐÔÄÜºÍ°²È«ÐÔ¡£; Í¨¹ýÑÅÒâ´óÄ£ÐÍµÄ¿ªÔ´Îª´Ù½øÖÐÎÄÔ¤ÑµÁ·´óÄ£ÐÍ¿ªÔ´ÉçÇøµÄ·¢Õ¹£¬¹±Ï××Ô¼ºµÄÒ»·ÝÁ¦Á¿£¬Í¨¹ý¿ªÔ´£¬ÓëÃ¿Ò»Î»ºÏ×÷»ï°é¹²½¨ÑÅÒâ´óÄ£ÐÍÉúÌ¬¡£; News: ? ÑÅÒâ´óÄ£ÐÍÒÑ¿ªÔ´»ùÓÚ LLaMA 2 µÄÖÐÎÄÓÅ»¯Ä£ÐÍ°æ±¾£¬Ì½Ë÷ÊÊÓÃÓÚÖÐÎÄ¶àÁìÓòÈÎÎñµÄ×îÐÂÊµ¼ù¡£; ÏêÇéÇë²Î¿¼ÎÒÃÇµÄ ?Github Repo¡£; Comming Soon~,Natural Language Processing
Chinese-Llama-2-7b-4bit,Text Generation,PyTorch; Transformers,,llama2,,3,,0,13804.03817,,https://huggingface.co/soulteary/Chinese-Llama-2-7b-4bit,¿ìËÙÉÏÊÖ & Ê¹ÓÃ£¬¿ÉÒÔÊÔÊÔ soulteary/docker-llama2-chat/¡£; Ïà¹Ø²©¿Í£ºÊ¹ÓÃ Transformers Á¿»¯ Meta AI LLaMA2 ÖÐÎÄ°æ´óÄ£ÐÍ; »ùÓÚÖÐÎÄ LLaMA2 7B Ä£ÐÍÏîÄ¿£ºLinkSoul-AI/Chinese-Llama-2-7b,Natural Language Processing
MythoBoros-13B-GPTQ,Text Generation,Transformers,English,other,,3,,6,7436.583231,,https://huggingface.co/TheBloke/MythoBoros-13B-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; This repo contains GPTQ model files for Gryphe's MythoBoros 13B.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; Multiple quantisation parameters are provided, to allow you to choose the best one for your hardware and requirements.",Natural Language Processing
MythoBoros-13B-GGML,,Transformers,English,other,,3,,0,119316.4932,,https://huggingface.co/TheBloke/MythoBoros-13B-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; This repo contains GGML format model files for Gryphe's MythoBoros 13B.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; These are guaranteed to be compatible with any UIs, tools and libraries released since late May. They may be phased out soon, as they are largely superseded by the new k-quant methods.",
Llama2-chat-13B-Chinese-50W,Text Generation,PyTorch; Transformers,Chinese; English,,,3,,0,27044.62804,,https://huggingface.co/RicardoLee/Llama2-chat-13B-Chinese-50W,"ÓÉÓÚÄ¿Ç°µÄLLama2-chatÄ£ÐÍºÜÄÑÔ¼ÊøÆäÒÔÖÐÎÄ½øÐÐÎÊÌâ»Ø¸´£¬Òò´Ë¸ÃÄ£ÐÍÖ¼ÔÚÌá¹©Ò»¸öÄÜÒÔÖÐÎÄ½øÐÐÎÊ´ðµÄLLama2-chat 13B Ä£ÐÍ¹©´ó¼ÒÑÐ¾¿Ê¹ÓÃ¡£; ¸ÃÄ£ÐÍÊ¹ÓÃLLama2-chat 13B ×÷Îª»ùµ×Ä£ÐÍ£¬Ê¹ÓÃ´øembedding ºÍ LM head µÄLoraÑµÁ··½Ê½ÑµÁ·¡£Ä£ÐÍÒÑÍê³É²ÎÊýºÏ²¢£¬¿ÉÖ±½ÓÊ¹ÓÃ¡£Ò²¿ÉÒÔÊÖ¶¯½«sft_lora_modelÍ¬Llama2-chat 13B ½øÐÐºÏ²¢¡£; ÑµÁ·Êý¾ÝÊ¹ÓÃBELLEÏîÄ¿ÖÐ²ÉÑùµÄ50ÍòSFTÊý¾Ý½øÐÐSFTÑµÁ·¡£; Since the LLama2-chat model struggles to confine its responses to Chinese language when prompted with Chinese questions, the primary objective of this model is to provide a LLama2-chat 13B model that can engage in question and answer interactions in Chinese.; The model utilizes LLama2-chat 13B as its base model and is trained using the Lora training approach with the embedding and LM head. The model has undergone the Lora param merge and is now ready for direct use. It is also possible to manually merge the ./sft_lora_model with the Llama2-chat 13B model to obtain the combined model. ",Natural Language Processing
Llama2-base-7B-Chinese-50W-pre_release,Text Generation,PyTorch; Transformers,Chinese; English,,,3,,0,28201.7843,,https://huggingface.co/RicardoLee/Llama2-base-7B-Chinese-50W-pre_release,"ÔÚÍê³ÉÁËLlama2-chat 7B Chinese ºÍ Llama2-chat 13B Chinese µÄÑµÁ·ºó£¬ÎÒ·Ç³£ºÃÆæÄÜ·ñÖ±½Ó»ùÓÚLlama2-base ÏµÁÐÖ±½Ó½øÐÐSFTÑµÁ·¡£ÕâÒ²ÊÇ±¾Ä£ÐÍ²Ö¿âµÄ³õÖÔ¡£; µ«ÊÇÔÚÊµ¼Ê²Ù×÷ÖÐ£¬ÔÚÓÃÁËÔ­ÏÈchatÄ£ÐÍµÄLoRAÑµÁ·¿ò¼Üºó£¬ÎÒ·¢ÏÖ»ùÓÚLlama2 baseµÄ LoRA ÑµÁ··Ç³£ÄÑÒÔÊÕÁ²£¬ËæÊ±´¦ÓÚÌÝ¶È±¬Õ¨µÄ±ßÔµ¡£DeepSpeed »áÆµ·±´¥·¢reduce scale ²Ù×÷£¬×îÖÕscaleÌ«Ð¡Ô½½çµ¼ÖÂÑµÁ·±ÀÀ£¡£ÎÒ±éÀúÁËLR 1e-5 - 2e-4£¬LoRA rank [4, 8, 64]£¬LoRA Alpha [1,4,8,16,32]£¬LoRA Dropout [0.05, 0.1] £¬Warmup Ratio [0.01, 0.03, 0.05]µÈ³¬²ÎÊý£¬¾ùÎÞ·¨ÎÈ¶¨ÑµÁ·¡£Òò´Ë£¬±¾Ä£ÐÍÖØÐÂ»Ø¹éÁËÈ«²ÎÊýSFTÑµÁ·¡£ÆäÄÑÒÔ½øÐÐLoRAÑµÁ·µÄÔ­Òò»¹´ý·ÖÎö¡£; ÓÉÓÚÍøÉÏ´æÔÚÊ¹ÓÃLoRA ÔÚÓ¢ÎÄSFTÊý¾Ý¼¯ÉÏ»ùÓÚLlama2-base ½øÐÐSFTÑµÁ·³É¹¦µÄÑùÀý£¬Òò´ËÎÒ»³ÒÉÄÑÒÔÑµÁ·µÄÔ­Òò¿ÉÄÜÊÇÀ©ÖÐÎÄ´Ê±íembeddingµ¼ÖÂÑµÁ·ÄÑ¶È´ó·ù¶ÈÌáÉý¡£; ÎªÁË·½±ãºóÀ´ÈËÒ»Æð·ÖÎö£¬±¾Ä£ÐÍ²Ö¿âÌØµØ½«ÑµÁ·µÄÈ«²¿loss/LRÐÅÏ¢¸½ÔÚMaterialÖÐ¡£; ÑµÁ·Êý¾ÝÊ¹ÓÃBELLEÏîÄ¿ÖÐ²ÉÑùµÄ50ÍòSFTÊý¾Ý½øÐÐSFTÑµÁ·¡£",Natural Language Processing
bwx-13B-hf,Text Generation,PyTorch; Transformers,Chinese,apache-2.0,,3,BAAI/COIG-PC,0,27331.34015,,https://huggingface.co/BlueWhaleX/bwx-13B-hf,"This is an experimental product that can be used to create new LLM bassed on Chinese language.; You can use the raw model for next sentence prediction, but it's mostly intended to be fine-tuned on a downstream task.
Note that this model is primarily aimed at being fine-tuned on tasks that use the whole sentence (potentially masked) to make decisions, such as sequence classification, token classification or question answering.; Even if the training data used for this model could be characterized as fairly neutral, this model can have biased predictions.
It also inherits some of the bias of its dataset model.; Users (both direct and downstream) should be made aware of the risks, biases and limitations of the model. More information needed for further recommendations.; Use the code below to get started with the model.",Natural Language Processing
albert-base-v2,Fill-Mask,PyTorch; TensorFlow; JAX; Rust; Safetensors; Transformers,English,apache-2.0,https://arxiv.org/pdf/1909.11942.pdf,55,bookcorpus; wikipedia,7588276,330.4627857,20,https://huggingface.co/albert-base-v2,"Pretrained model on English language using a masked language modeling (MLM) objective. It was introduced in
this paper and first released in
this repository. This model, as all ALBERT models, is uncased: it does not make a difference
between english and English.; Disclaimer: The team releasing ALBERT did not write a model card for this model so this model card has been written by
the Hugging Face team.; ALBERT is a transformers model pretrained on a large corpus of English data in a self-supervised fashion. This means it
was pretrained on the raw texts only, with no humans labelling them in any way (which is why it can use lots of
publicly available data) with an automatic process to generate inputs and labels from those texts. More precisely, it
was pretrained with two objectives:; This way, the model learns an inner representation of the English language that can then be used to extract features
useful for downstream tasks: if you have a dataset of labeled sentences for instance, you can train a standard
classifier using the features produced by the ALBERT model as inputs.; ALBERT is particular in that it shares its layers across its Transformer. Therefore, all layers have the same weights. Using repeating layers results in a small memory footprint, however, the computational cost remains similar to a BERT-like architecture with the same number of hidden layers as it has to iterate through the same number of (repeating) layers.",Natural Language Processing
bert-base-multilingual-cased,Fill-Mask,PyTorch; TensorFlow; JAX; Safetensors; Transformers,104 languages,apache-2.0,https://arxiv.org/pdf/1810.04805.pdf,194,wikipedia,3305409,3248.860638,58,https://huggingface.co/bert-base-multilingual-cased,"Pretrained model on the top 104 languages with the largest Wikipedia using a masked language modeling (MLM) objective.
It was introduced in this paper and first released in
this repository. This model is case sensitive: it makes a difference
between english and English.; Disclaimer: The team releasing BERT did not write a model card for this model so this model card has been written by
the Hugging Face team.; BERT is a transformers model pretrained on a large corpus of multilingual data in a self-supervised fashion. This means
it was pretrained on the raw texts only, with no humans labelling them in any way (which is why it can use lots of
publicly available data) with an automatic process to generate inputs and labels from those texts. More precisely, it
was pretrained with two objectives:; This way, the model learns an inner representation of the languages in the training set that can then be used to
extract features useful for downstream tasks: if you have a dataset of labeled sentences for instance, you can train a
standard classifier using the features produced by the BERT model as inputs.; You can use the raw model for either masked language modeling or next sentence prediction, but it's mostly intended to
be fine-tuned on a downstream task. See the model hub to look for
fine-tuned versions on a task that interests you.",Natural Language Processing
roberta-large-mnli,Text Classification,PyTorch; TensorFlow; JAX; Safetensors; Transformers,English,mit,https://arxiv.org/pdf/1907.11692.pdf; https://arxiv.org/pdf/1806.02847.pdf; https://arxiv.org/pdf/1804.07461.pdf; https://arxiv.org/pdf/1704.05426.pdf; https://arxiv.org/pdf/1508.05326.pdf; https://arxiv.org/pdf/1809.05053.pdf; https://arxiv.org/pdf/1910.09700.pdf,75,multi_nli; wikipedia; bookcorpus,141571,5849.734772,15,https://huggingface.co/roberta-large-mnli,"Model Description: roberta-large-mnli is the RoBERTa large model fine-tuned on the Multi-Genre Natural Language Inference (MNLI) corpus. The model is a pretrained model on English language text using a masked language modeling (MLM) objective.; Use the code below to get started with the model. The model can be loaded with the zero-shot-classification pipeline like so:; You can then use this pipeline to classify sequences into any of the class names you specify. For example:; This fine-tuned model can be used for zero-shot classification tasks, including zero-shot sentence-pair classification (see the GitHub repo for examples) and zero-shot sequence classification.; The model should not be used to intentionally create hostile or alienating environments for people. In addition, the model was not trained to be factual or true representations of people or events, and therefore using the model to generate such content is out-of-scope for the abilities of this model.",Natural Language Processing
t5-large,Translation,PyTorch; TensorFlow; JAX; Safetensors; Transformers,5 languages,apache-2.0,https://arxiv.org/pdf/1805.12471.pdf; https://arxiv.org/pdf/1708.00055.pdf; https://arxiv.org/pdf/1704.05426.pdf; https://arxiv.org/pdf/1606.05250.pdf; https://arxiv.org/pdf/1808.09121.pdf; https://arxiv.org/pdf/1810.12885.pdf; https://arxiv.org/pdf/1905.10044.pdf; https://arxiv.org/pdf/1910.09700.pdf,78,c4,1253184,12085.37346,130,https://huggingface.co/t5-large,"; The developers of the Text-To-Text Transfer Transformer (T5) write: ; With T5, we propose reframing all NLP tasks into a unified text-to-text-format where the input and output are always text strings, in contrast to BERT-style models that can only output either a class label or a span of the input. Our text-to-text framework allows us to use the same model, loss function, and hyperparameters on any NLP task.; T5-Large is the checkpoint with 770 million parameters. ; The developers write in a blog post that the model: ",Natural Language Processing
gpt-neo-1.3B,Text Generation,PyTorch; JAX; Rust; Safetensors; Transformers,English,mit,,188,EleutherAI/pile,150568,21699.7915,108,https://huggingface.co/EleutherAI/gpt-neo-1.3B,"GPT-Neo 1.3B is a transformer model designed using EleutherAI's replication of the GPT-3 architecture. GPT-Neo refers to the class of models, while 1.3B represents the number of parameters of this particular pre-trained model.; GPT-Neo 1.3B was trained on the Pile, a large scale curated dataset created by EleutherAI for the purpose of training this model.; This model was trained on the Pile for 380 billion tokens over 362,000 steps. It was trained as a masked autoregressive language model, using cross-entropy loss.; This way, the model learns an inner representation of the English language that can then be used to extract features useful for downstream tasks. The model is best at what it was pretrained for however, which is generating texts from a prompt.; You can use this model directly with a pipeline for text generation. This example generates a different sequence each time it's run:",Natural Language Processing
opus-mt-en-fr,Translation,PyTorch; TensorFlow; JAX; Transformers,English; French,apache-2.0,,16,,108063,903.8862295,31,https://huggingface.co/Helsinki-NLP/opus-mt-en-fr,source languages: en; target languages: fr; OPUS readme: en-fr; dataset: opus; model: transformer-align,Natural Language Processing
gpt-neo-small-portuguese,Text Generation,PyTorch; Transformers,,,,4,,66,528.5910394,,https://huggingface.co/HeyLucasLeao/gpt-neo-small-portuguese,"This is a finetuned version from GPT-Neo 125M by EletheurAI to Portuguese language. ; It was trained from 227,382 selected texts from a PTWiki Dump. You can found all the data from here: https://archive.org/details/ptwiki-dump-20210520; Every text was passed through a GPT2-Tokenizer with bos and eos tokens to separate them, with max sequence length that the GPT-Neo could support. It was finetuned using the default metrics of the Trainer Class, available on the Hugging Face library.; My true intention was totally educational, thus making available a Portuguese version of this model.; How to use",Natural Language Processing
roberta-large-ner-english,Token Classification,PyTorch; TensorFlow; ONNX; Safetensors; Transformers,English,mit,,49,conll2003,241991,5817.550886,4,https://huggingface.co/Jean-Baptiste/roberta-large-ner-english,"[roberta-large-ner-english] is an english NER model that was fine-tuned from roberta-large on conll2003 dataset. 
Model was validated on emails/chat data and outperformed other models on this type of data specifically. 
In particular the model seems to work better on entity that don't start with an upper case.; Training data was classified as follow:; In order to simplify, the prefix B- or I- from original conll2003 was removed.
I used the train and test dataset from original conll2003 for training and the ""validation"" dataset for validation. This resulted in a dataset of size:; Model performances computed on conll2003 validation dataset (computed on the tokens predictions); On private dataset (email, chat, informal discussion), computed on word predictions:",Natural Language Processing
roberta_toxicity_classifier,Text Classification,PyTorch; Transformers,English,,https://arxiv.org/pdf/1907.11692.pdf,19,,2050,502.228382,1,https://huggingface.co/s-nlp/roberta_toxicity_classifier,"This model is trained for toxicity classification task. The dataset used for training is the merge of the English parts of the three datasets by Jigsaw (Jigsaw 2018, Jigsaw 2019, Jigsaw 2020), containing around 2 million examples. We split it into two parts and fine-tune a RoBERTa model (RoBERTa: A Robustly Optimized BERT Pretraining Approach) on it. The classifiers perform closely on the test set of the first Jigsaw competition, reaching the AUC-ROC of 0.98 and F1-score of 0.76.; Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.; ",Natural Language Processing
CPM-Generate,Text Generation,PyTorch; TensorFlow; Transformers,Chinese,mit,https://arxiv.org/pdf/2012.00413.pdf,33,100GB Chinese corpus,436,21301.17335,,https://huggingface.co/TsinghuaAI/CPM-Generate,"CPM (Chinese Pre-trained Language Model) is a Transformer-based autoregressive language model, with 2.6 billion parameters and 100GB Chinese training data. To the best of our knowledge, CPM is the largest Chinese pre-trained language model, which could facilitate downstream Chinese NLP tasks, such as conversation, essay generation, cloze test, and language understanding. [Project] [Model] [Paper]; The text generated by CPM is automatically generated by a neural network model trained on a large number of texts, which does not represent the authors' or their institutes' official attitudes and preferences. The text generated by CPM is only used for technical and scientific purposes. If it infringes on your rights and interests or violates social morality, please do not propagate it, but contact the authors and the authors will deal with it promptly.; We collect different kinds of texts in our pre-training, including encyclopedia, news, novels, and Q&A. The details of our training data are shown as follows.; Based on the hyper-parameter searching on the learning rate and batch size, we set the learning rate as 1.5¡Á10?41.5\times10^{-4}1.5¡Á10?4 and the batch size as 3,0723,0723,072, which makes the model training more stable. In the first version, we still adopt the dense attention and the max sequence length is 1,0241,0241,024. We will implement sparse attention in the future. We pre-train our model for 20,00020,00020,000 steps, and the first 5,0005,0005,000 steps are for warm-up. The optimizer is Adam. It takes two weeks to train our largest model using 646464 NVIDIA V100.; We evaluate CPM with different numbers of parameters (the details are shown above) on various Chinese NLP tasks in the few-shot (even zero-shot) settings. With the increase of parameters, CPM performs better on most datasets, indicating that larger models are more proficient at language generation and language understanding. We provide results of text classification, chinese idiom cloze test, and short text conversation generation as follows. Please refer to our paper for more detailed results.",Natural Language Processing
longformer-base-4096,,PyTorch; TensorFlow; Rust; Transformers,English,apache-2.0,https://arxiv.org/pdf/2004.05150.pdf,86,,2832199,2116.685454,5,https://huggingface.co/allenai/longformer-base-4096,"Longformer is a transformer model for long documents. ; longformer-base-4096 is a BERT-like model started from the RoBERTa checkpoint and pretrained for MLM on long documents. It supports sequences of length up to 4,096. ; Longformer uses a combination of a sliding window (local) attention and global attention. Global attention is user-configured based on the task to allow the model to learn task-specific representations.
Please refer to the examples in modeling_longformer.py and the paper for more details on how to set global attention.; If you use Longformer in your research, please cite Longformer: The Long-Document Transformer.; Longformer is an open-source project developed by the Allen Institute for Artificial Intelligence (AI2).
AI2 is a non-profit institute with the mission to contribute to humanity through high-impact AI research and engineering.",
KeyBART,Text2Text Generation,PyTorch; Transformers,,apache-2.0,,18,,555,1671.81558,4,https://huggingface.co/bloomberg/KeyBART,"KeyBART as described in ""Learning Rich Representations of Keyphrase from Text"" published in the Findings of NAACL 2022 (https://aclanthology.org/2022.findings-naacl.67.pdf), pre-trains a BART-based architecture to produce a concatenated sequence of keyphrases in the CatSeqD format.; We provide some examples on Downstream Evaluations setups and and also how it can be used for Text-to-Text Generation in a zero-shot setting.; Reported Results:; Reported Results:; Alternatively use the Hosted Inference API console provided in https://huggingface.co/bloomberg/KeyBART",Natural Language Processing
camembert-base,Fill-Mask,PyTorch; Transformers,French,,https://arxiv.org/pdf/1911.03894.pdf,3,,2271,445.7989687,1,https://huggingface.co/camembert/camembert-base,"CamemBERT is a state-of-the-art language model for French based on the RoBERTa model. ; It is now available on Hugging Face in 6 different versions with varying number of parameters, amount of pretraining data and pretraining data source domains. ; For further information or requests, please go to Camembert Website; CamemBERT was trained and evaluated by Louis Martin*, Benjamin Muller*, Pedro Javier Ortiz Su¨¢rez*, Yoann Dupont, Laurent Romary, ¨¦ric Villemonte de la Clergerie, Djam¨¦ Seddah and Beno?t Sagot.; If you use our work, please cite:",Natural Language Processing
sentence-camembert-large,Sentence Similarity,PyTorch; TensorFlow; Transformers,French,apache-2.0,https://arxiv.org/pdf/1908.10084.pdf,25,stsb_multi_mt,14412,2765.597661,3,https://huggingface.co/dangvantuan/sentence-camembert-large,"Sentence-CamemBERT-Large is the Embedding Model for French developed by La Javaness. The purpose of this embedding model is to represent the content and semantics of a French sentence in a mathematical vector which allows it to understand the meaning of the text-beyond individual words in queries and documents, offering a powerful semantic search.; The model is Fine-tuned using pre-trained facebook/camembert-large and
Siamese BERT-Networks with 'sentences-transformers' on dataset stsb; The model can be used directly (without a language model) as follows:; The model can be evaluated as follows on the French test data of stsb.; Test Result: 
The performance is measured using Pearson and Spearman correlation:",Natural Language Processing
bert-base-turkish-cased,,PyTorch; TensorFlow; JAX; Transformers,Turkish,mit,,32,,22370,1432.248737,4,https://huggingface.co/dbmdz/bert-base-turkish-cased,"In this repository the MDZ Digital Library team (dbmdz) at the Bavarian State
Library open sources a cased model for Turkish ?; BERTurk is a community-driven cased BERT model for Turkish.; Some datasets used for pretraining and evaluation are contributed from the
awesome Turkish NLP community, as well as the decision for the model name: BERTurk.; The current version of the model is trained on a filtered and sentence
segmented version of the Turkish OSCAR corpus,
a recent Wikipedia dump, various OPUS corpora and a
special corpus provided by Kemal Oflazer.; The final training corpus has a size of 35GB and 44,04,976,662 tokens.",
tinyroberta-squad2,Question Answering,PyTorch; Safetensors; Transformers,English,cc-by-4.0,https://arxiv.org/pdf/1909.10351.pdf,44,squad_v2,1430902,654.5932547,18,https://huggingface.co/deepset/tinyroberta-squad2,"This is the distilled version of the deepset/roberta-base-squad2 model. This model has a comparable prediction quality and runs at twice the speed of the base model.; Language model: tinyroberta-squad2Language: EnglishDownstream-task: Extractive QATraining data: SQuAD 2.0Eval data: SQuAD 2.0Code: See an example QA pipeline on HaystackInfrastructure: 4x Tesla v100; This model was distilled using the TinyBERT approach described in this paper and implemented in haystack.
Firstly, we have performed intermediate layer distillation with roberta-base as the teacher which resulted in deepset/tinyroberta-6l-768d.
Secondly, we have performed task-specific distillation with deepset/roberta-base-squad2 as the teacher for further intermediate layer distillation on an augmented version of SQuADv2 and then with deepset/roberta-large-squad2 as the teacher for prediction layer distillation. ; Haystack is an NLP framework by deepset. You can use this model in a Haystack pipeline to do question answering at scale (over many documents). To load the model in Haystack:; Evaluated on the SQuAD 2.0 dev set with the official eval script.",Natural Language Processing
mt5-small-sum-de-mit-v1,Summarization,PyTorch; Safetensors; Transformers,German,mit,,5,swiss_text_2019,211,2462.596445,,https://huggingface.co/deutsche-telekom/mt5-small-sum-de-mit-v1,"This is a German summarization model. It is based on the multilingual T5 model google/mt5-small. The special characteristic of this model is that, unlike many other models, it is licensed under a permissive open source license (MIT). Among other things, this license allows commercial use.; 
This model is provided by the One Conversation
team of Deutsche Telekom AG.; The training was conducted with the following hyperparameters:; The datasets were preprocessed as follows:; The summary was tokenized with the google/mt5-small tokenizer. Then only the records with no more than 94 summary tokens were selected.",Natural Language Processing
kan-bayashi_ljspeech_vits,Text-to-Speech,ESPnet,English,cc-by-4.0,https://arxiv.org/pdf/1804.00015.pdf,148,ljspeech,2284,0.003322754,103,https://huggingface.co/espnet/kan-bayashi_ljspeech_vits,?? Imported from https://zenodo.org/record/5443814/; This model was trained by kan-bayashi using ljspeech/tts1 recipe in espnet.; or arXiv:,Audio
detr-resnet-50,Object Detection,PyTorch; Transformers,,apache-2.0,https://arxiv.org/pdf/2005.12872.pdf,200,coco,650109,167.0110463,54,https://huggingface.co/facebook/detr-resnet-50,"DEtection TRansformer (DETR) model trained end-to-end on COCO 2017 object detection (118k annotated images). It was introduced in the paper End-to-End Object Detection with Transformers by Carion et al. and first released in this repository. ; Disclaimer: The team releasing DETR did not write a model card for this model so this model card has been written by the Hugging Face team.; The DETR model is an encoder-decoder transformer with a convolutional backbone. Two heads are added on top of the decoder outputs in order to perform object detection: a linear layer for the class labels and a MLP (multi-layer perceptron) for the bounding boxes. The model uses so-called object queries to detect objects in an image. Each object query looks for a particular object in the image. For COCO, the number of object queries is set to 100. ; The model is trained using a ""bipartite matching loss"": one compares the predicted classes + bounding boxes of each of the N = 100 object queries to the ground truth annotations, padded up to the same length N (so if an image only contains 4 objects, 96 annotations will just have a ""no object"" as class and ""no bounding box"" as bounding box). The Hungarian matching algorithm is used to create an optimal one-to-one mapping between each of the N queries and each of the N annotations. Next, standard cross-entropy (for the classes) and a linear combination of the L1 and generalized IoU loss (for the bounding boxes) are used to optimize the parameters of the model.; ",Computer Vision
m2m100_418M,Text2Text Generation,PyTorch; Rust; Transformers,101 languages,mit,https://arxiv.org/pdf/2010.11125.pdf,101,,248327,3979.257621,23,https://huggingface.co/facebook/m2m100_418M,"M2M100 is a multilingual encoder-decoder (seq-to-seq) model trained for Many-to-Many multilingual translation.
It was introduced in this paper and first released in this repository.; The model that can directly translate between the 9,900 directions of 100 languages.
To translate into a target language, the target language id is forced as the first generated token.
To force the target language id as the first generated token, pass the forced_bos_token_id parameter to the generate method.; Note: M2M100Tokenizer depends on sentencepiece, so make sure to install it before running the example.; To install sentencepiece run pip install sentencepiece; See the model hub to look for more fine-tuned versions.",Natural Language Processing
tts_transformer-zh-cv7_css10,Text-to-Speech,Fairseq,Chinese,,https://arxiv.org/pdf/1809.08895.pdf; https://arxiv.org/pdf/2109.06912.pdf,67,common_voice; css10,1848,831.5411987,15,https://huggingface.co/facebook/tts_transformer-zh-cv7_css10,Transformer text-to-speech model from fairseq S^2 (paper/code):; See also fairseq S^2 example.,Audio
hubert-dementia-screening,Feature Extraction,JAX; Transformers,,,,3,,2,418.0086514,,https://huggingface.co/flax-community/hubert-dementia-screening,No model card; New: Create and edit this model card directly on the website!,Multimodel
all_datasets_v4_MiniLM-L6,Sentence Similarity,PyTorch; Sentence Transformers,English,,https://arxiv.org/pdf/2104.08727.pdf; https://arxiv.org/pdf/1810.09305.pdf; https://arxiv.org/pdf/2102.07033.pdf; https://arxiv.org/pdf/1904.06472.pdf,22,,13138,91.64247566,3,https://huggingface.co/flax-sentence-embeddings/all_datasets_v4_MiniLM-L6,"The project aims to train sentence embedding models on very large sentence level datasets using a self-supervised 
contrastive learning objective. We used the pretrained 'MiniLM-L6-H384-uncased' model and fine-tuned in on a 
1B sentence pairs dataset. We use a contrastive learning objective: given a sentence from the pair, the model should predict which out of a set of randomly sampled other sentences, was actually paired with it in our dataset.; We developped this model during the 
Community week using JAX/Flax for NLP & CV, 
organized by Hugging Face. We developped this model as part of the project:
Train the Best Sentence Embedding Model Ever with 1B Training Pairs. We benefited from efficient hardware infrastructure to run the project: 7 TPUs v3-8, as well
as intervention from Google¡¯s Flax, JAX, and Cloud team member about efficient deep learning frameworks.; Our model is intented to be used as a sentence encoder. Given an input sentence, it ouptuts a vector which captures 
the sentence semantic information. The sentence vector may be used for information retrieval, clustering or sentence 
similarity tasks.; Here is how to use this model to get the features of a given text using SentenceTransformers library:; We use the pretrained 'MiniLM-L6-H384-uncased' which is a 6 layer version of 
'microsoft/MiniLM-L12-H384-uncased' by keeping only every second layer. 
Please refer to the model card for more detailed information about the pre-training procedure.",Natural Language Processing
mt5-base,Text2Text Generation,PyTorch; TensorFlow; JAX; Transformers,102 languages,apache-2.0,https://arxiv.org/pdf/2010.11934.pdf,86,mc4,42162,7162.074367,5,https://huggingface.co/google/mt5-base,"Google's mT5; mT5 is pretrained on the mC4 corpus, covering 101 languages:; Afrikaans, Albanian, Amharic, Arabic, Armenian, Azerbaijani, Basque, Belarusian, Bengali, Bulgarian, Burmese, Catalan, Cebuano, Chichewa, Chinese, Corsican, Czech, Danish, Dutch, English, Esperanto, Estonian, Filipino, Finnish, French, Galician, Georgian, German, Greek, Gujarati, Haitian Creole, Hausa, Hawaiian, Hebrew, Hindi, Hmong, Hungarian, Icelandic, Igbo, Indonesian, Irish, Italian, Japanese, Javanese, Kannada, Kazakh, Khmer, Korean, Kurdish, Kyrgyz, Lao, Latin, Latvian, Lithuanian, Luxembourgish, Macedonian, Malagasy, Malay, Malayalam, Maltese, Maori, Marathi, Mongolian, Nepali, Norwegian, Pashto, Persian, Polish, Portuguese, Punjabi, Romanian, Russian, Samoan, Scottish Gaelic, Serbian, Shona, Sindhi, Sinhala, Slovak, Slovenian, Somali, Sotho, Spanish, Sundanese, Swahili, Swedish, Tajik, Tamil, Telugu, Thai, Turkish, Ukrainian, Urdu, Uzbek, Vietnamese, Welsh, West Frisian, Xhosa, Yiddish, Yoruba, Zulu.; Note: mT5 was only pre-trained on mC4 excluding any supervised training. Therefore, this model has to be fine-tuned before it is useable on a downstream task.; Pretraining Dataset: mC4",Natural Language Processing
chinese-roberta-wwm-ext-large,Fill-Mask,PyTorch; TensorFlow; JAX; Transformers,Chinese,apache-2.0,https://arxiv.org/pdf/1906.08101.pdf; https://arxiv.org/pdf/2004.13922.pdf,47,,36588,4004.213296,2,https://huggingface.co/hfl/chinese-roberta-wwm-ext-large,"For further accelerating Chinese natural language processing, we provide Chinese pre-trained BERT with Whole Word Masking. ; Pre-Training with Whole Word Masking for Chinese BERTYiming Cui, Wanxiang Che, Ting Liu, Bing Qin, Ziqing Yang, Shijin Wang, Guoping Hu; This repository is developed based on£ºhttps://github.com/google-research/bert; You may also interested in,; More resources by HFL: https://github.com/ymcui/HFL-Anthology",Natural Language Processing
ko-sroberta-multitask,Sentence Similarity,PyTorch; TensorFlow; Sentence Transformers; Transformers,Korean,,,26,,60963,886.7335748,1,https://huggingface.co/jhgan/ko-sroberta-multitask,"This is a sentence-transformers model: It maps sentences & paragraphs to a 768 dimensional dense vector space and can be used for tasks like clustering or semantic search.; Using this model becomes easy when you have sentence-transformers installed:; Then you can use the model like this:; Without sentence-transformers, you can use the model like this: First, you pass your input through the transformer model, then you have to apply the right pooling-operation on-top of the contextualized word embeddings.; KorSTS, KorNLI ?? ?????? ?? ??? ??? ??? ? KorSTS ?? ?????? ??? ?????.",Natural Language Processing
manga-ocr-base,Image-to-Text,PyTorch; Transformers,Japanese,apache-2.0,,41,manga109s,33169,444.1018312,5,https://huggingface.co/kha-white/manga-ocr-base,"Optical character recognition for Japanese text, with the main focus being Japanese manga.; It uses Vision Encoder Decoder framework.; Manga OCR can be used as a general purpose printed Japanese OCR, but its main goal was to provide a high quality
text recognition, robust against various scenarios specific to manga:; Code is available here.",Multimodel
t5-base-japanese-web,Text2Text Generation,PyTorch; Transformers,Japanese,apache-2.0,https://arxiv.org/pdf/1910.10683.pdf,13,mc4; wiki40b,751,990.7867343,,https://huggingface.co/megagonlabs/t5-base-japanese-web,"megagonlabs/t5-base-japanese-web is a T5 (Text-to-Text Transfer Transformer) model pre-trained on Japanese web texts.Training codes are available on GitHub.; The vocabulary size of this model is 32K.
8K version is also available.; We used following corpora for pre-training.; We used Japanese Wikipedia to train SentencePiece.; It took about 126 hours with TPU v3-8",Natural Language Processing
trocr-large-stage1,Image-to-Text,PyTorch; Transformers,,,https://arxiv.org/pdf/2109.10282.pdf,8,,2580,2491.763635,,https://huggingface.co/microsoft/trocr-large-stage1,"TrOCR pre-trained only model. It was introduced in the paper TrOCR: Transformer-based Optical Character Recognition with Pre-trained Models by Li et al. and first released in this repository. ; Disclaimer: The team releasing TrOCR did not write a model card for this model so this model card has been written by the Hugging Face team.; The TrOCR model is an encoder-decoder model, consisting of an image Transformer as encoder, and a text Transformer as decoder. The image encoder was initialized from the weights of BEiT, while the text decoder was initialized from the weights of RoBERTa.; Images are presented to the model as a sequence of fixed-size patches (resolution 16x16), which are linearly embedded. One also adds absolute position embeddings before feeding the sequence to the layers of the Transformer encoder. Next, the Transformer text decoder autoregressively generates tokens.; You can use the raw model for optical character recognition (OCR) on single text-line images. See the model hub to look for fine-tuned versions on a task that interests you.",Multimodel
t5-base-finetuned-wikiSQL,Text2Text Generation,PyTorch; JAX; Transformers,English,apache-2.0,https://arxiv.org/pdf/1910.10683.pdf,35,wikisql,3847,2111.341735,1,https://huggingface.co/mrm8488/t5-base-finetuned-wikiSQL,"Google's T5 fine-tuned on WikiSQL for English to SQL translation.; The T5 model was presented in Exploring the Limits of Transfer Learning with a Unified Text-to-Text Transformer by Colin Raffel, Noam Shazeer, Adam Roberts, Katherine Lee, Sharan Narang, Michael Matena, Yanqi Zhou, Wei Li, Peter J. Liu in Here the abstract:; Transfer learning, where a model is first pre-trained on a data-rich task before being fine-tuned on a downstream task, has emerged as a powerful technique in natural language processing (NLP). The effectiveness of transfer learning has given rise to a diversity of approaches, methodology, and practice. In this paper, we explore the landscape of transfer learning techniques for NLP by introducing a unified framework that converts every language problem into a text-to-text format. Our systematic study compares pre-training objectives, architectures, unlabeled datasets, transfer approaches, and other factors on dozens of language understanding tasks. By combining the insights from our exploration with scale and our new ¡°Colossal Clean Crawled Corpus¡±, we achieve state-of-the-art results on many benchmarks covering summarization, question answering, text classification, and more. To facilitate future work on transfer learning for NLP, we release our dataset, pre-trained models, and code.; ; Dataset ID: wikisql from  Huggingface/NLP",Natural Language Processing
vit-age-classifier,Image Classification,PyTorch; Transformers,,,,27,fairface,2539259,343.0026054,4,https://huggingface.co/nateraw/vit-age-classifier,A vision transformer finetuned to classify the age of a given person's face. ,Computer Vision
dpt-large,Depth Estimation,PyTorch; Transformers,,apache-2.0,https://arxiv.org/pdf/2103.13413.pdf,79,,166271,1402.889637,144,https://huggingface.co/Intel/dpt-large,"Dense Prediction Transformer (DPT) model trained on 1.4 million images for monocular depth estimation. 
It was introduced in the paper Vision Transformers for Dense Prediction by Ranftl et al. (2021) and first released in this repository. 
DPT uses the Vision Transformer (ViT) as backbone and adds a neck + head on top for monocular depth estimation.
; The model card has been written in combination by the Hugging Face team and Intel.; Here is how to use this model for zero-shot depth estimation on an image:; For more code examples, we refer to the documentation.; Table 1. Comparison to the state of the art on monocular depth estimation. We evaluate zero-shot cross-dataset transfer according to the
protocol defined in [30]. Relative performance is computed with respect to the original MiDaS model [30]. Lower is better for all metrics. (Ranftl et al., 2021)",Computer Vision
wenyanwen-ancient-translate-to-modern,Translation,PyTorch; Transformers,Chinese; Chinese,,,20,,124,961.3806678,2,https://huggingface.co/raynardj/wenyanwen-ancient-translate-to-modern,"This model translate Classical(ancient) Chinese to Modern Chinese, so I guess who's interested in the problemset can speak at least modern Chinese, hence... let me continue the documentation in Chinese; Õâ¸öÄ£ÐÍÒÑÓÐ×ö³ÉÓ¦ÓÃ£¬ ¡¾ËæÎÞÑÄ¡¿ÊÇÒ»¸öhuggingface spaces + streamlit µÄ¹ÅÎÄÔÄ¶ÁÓ¦ÓÃ£¨º¬º£Á¿Êé¼®£©£¬ ¿ÉÒÔÔÚÔÄ¶ÁÊ±·­Òë
ÊäÈëÎÄÑÔÎÄ£¬ ¿ÉÒÔÊÇ¶Ï¾ä »òÕß Î´¶Ï¾äµÄÎÄÑÔÎÄ£¬ Ä£ÐÍ»áÔ¤²âÏÖ´úÎÄµÄ±íÊö¡£ ÆäËûÄ£ÐÍ£º; ´ÓÎÄÑÔÎÄµ½ÏÖ´úÎÄµÄ·­ÒëÆ÷, »¶Ó­Ç°ÍùÎÒµÄgithubÎÄÑÔÊ«´ÊÏîÄ¿Ò³ÃæÌ½ÌÖ¡¢¼Ó?? ; ÑµÁ·ÓïÁÏÊÇ¾ÍÊÇ¾ÅÊ®¶àÍò¾ä¾ä¶Ô£¬ Êý¾Ý¼¯Á´½Ó?¡£ ÑµÁ·Ê±sourceÐòÁÐ£¨¹ÅÎÄÐòÁÐ£©£¬ °´ÕÕ50%µÄ¸ÅÂÊÕû¾äÈ¥³ýËùÓÐ±êµã·ûºÅ¡£; ×¢Òâ",Natural Language Processing
wenyanwen-chinese-translate-to-ancient,Translation,PyTorch; Transformers,Chinese; Chinese,apache-2.0,,21,,203,961.3798768,2,https://huggingface.co/raynardj/wenyanwen-chinese-translate-to-ancient,"This model translate modern Chinese to Classical Chinese, so I guess who's interested in the problemset can speak at least modern Chinese, so... let me continue the documentation in Chinese; ´ÓÏÖ´úÎÄµ½ÎÄÑÔÎÄµÄ·­ÒëÆ÷, »¶Ó­Ç°ÍùgithubÎÄÑÔÊ«´ÊÏîÄ¿Ò³Ãæ:Ô¨, ÌÖÂÛ&¼Ó?? ; »¹ÓÐÍ¬¿îµÄ?ÎÄÑÔÎÄµ½ÏÖ´úÎÄÄ£ÐÍ£¬Ô­ÎÄÊäÈë¿ÉÒÔ¶Ï¾ä Ò²¿ÉÒÔÊÇÎ´¶Ï¾äµÄÅ¶; ÑµÁ·ÓïÁÏÊÇ¾ÍÊÇ¾ÅÊ®¶àÍò¾ä¾ä¶Ô£¬ Êý¾Ý¼¯Á´½Ó?¡£; ×¢Òâ£¬ Äã±ØÐë½«generateº¯ÊýµÄeos_token_idÉèÖÃÎª102¾Í¿ÉÒÔ·­Òë³öÍêÕûµÄÓï¾ä£¬ ²»È»·­ÒëÍêÁË»áÓÐ²ÐÁôµÄÓï¾ä(ÒòÎª×öìØµÄÊ±ºòÓÃpad±êÇ©=-100µ¼ÖÂ)¡£",Natural Language Processing
distiluse-base-multilingual-cased-v2,Sentence Similarity,PyTorch; TensorFlow; Sentence Transformers; Transformers,multilingual,apache-2.0,https://arxiv.org/pdf/1908.10084.pdf,75,,66315,1080.937326,269,https://huggingface.co/sentence-transformers/distiluse-base-multilingual-cased-v2,"This is a sentence-transformers model: It maps sentences & paragraphs to a 512 dimensional dense vector space and can be used for tasks like clustering or semantic search.; Using this model becomes easy when you have sentence-transformers installed:; Then you can use the model like this:; For an automated evaluation of this model, see the Sentence Embeddings Benchmark: https://seb.sbert.net; This model was trained by sentence-transformers. ",Natural Language Processing
gtr-t5-large,Sentence Similarity,PyTorch; Sentence Transformers; Transformers,English,apache-2.0,https://arxiv.org/pdf/2112.07899.pdf,24,,2057,672.1720226,6,https://huggingface.co/sentence-transformers/gtr-t5-large,"This is a sentence-transformers model: It maps sentences & paragraphs to a 768 dimensional dense vector space. The model was specifically trained for the task of sematic search.; This model was converted from the Tensorflow model gtr-large-1 to PyTorch. When using this model, have a look at the publication: Large Dual Encoders Are Generalizable Retrievers. The tfhub model and this PyTorch model can produce slightly different embeddings, however, when run on the same benchmarks, they produce identical results.; The model uses only the encoder from a T5-large model. The weights are stored in FP16.  ; Using this model becomes easy when you have sentence-transformers installed:; Then you can use the model like this:",Natural Language Processing
paraphrase-mpnet-base-v2,Sentence Similarity,PyTorch; TensorFlow; Sentence Transformers; Transformers,,apache-2.0,https://arxiv.org/pdf/1908.10084.pdf,24,,102467,876.6882537,3,https://huggingface.co/sentence-transformers/paraphrase-mpnet-base-v2,"This is a sentence-transformers model: It maps sentences & paragraphs to a 768 dimensional dense vector space and can be used for tasks like clustering or semantic search.; Using this model becomes easy when you have sentence-transformers installed:; Then you can use the model like this:; Without sentence-transformers, you can use the model like this: First, you pass your input through the transformer model, then you have to apply the right pooling-operation on-top of the contextualized word embeddings.; For an automated evaluation of this model, see the Sentence Embeddings Benchmark: https://seb.sbert.net",Natural Language Processing
emotion-recognition-wav2vec2-IEMOCAP,Audio Classification,speechbrain; PyTorch,English,apache-2.0,https://arxiv.org/pdf/2106.04624.pdf,39,iemocap,76820,378.5712413,4,https://huggingface.co/speechbrain/emotion-recognition-wav2vec2-IEMOCAP,"This repository provides all the necessary tools to perform emotion recognition with a fine-tuned wav2vec2 (base) model using SpeechBrain. 
It is trained on IEMOCAP training data.; For a better experience, we encourage you to learn more about
SpeechBrain. The model performance on IEMOCAP test set is:; This system is composed of an wav2vec2 model. It is a combination of convolutional and residual blocks. The embeddings are extracted using attentive statistical pooling. The system is trained with Additive Margin Softmax Loss.  Speaker Verification is performed using cosine distance between speaker embeddings.; The system is trained with recordings sampled at 16kHz (single channel).
The code will automatically normalize your audio (i.e., resampling + mono channel selection) when calling classify_file if needed.; First of all, please install the development version of SpeechBrain with the following command:",Audio
distilbart-cnn-12-6,Summarization,PyTorch; JAX; Rust; Transformers,English,apache-2.0,,143,cnn_dailymail; xsum,553894,4169.007068,108,https://huggingface.co/sshleifer/distilbart-cnn-12-6,This checkpoint should be loaded into BartForConditionalGeneration.from_pretrained. See the BART docs for more information.,Natural Language Processing
sbert-base-chinese-nli,Sentence Similarity,PyTorch; Sentence Transformers; Transformers,Chinese,apache-2.0,https://arxiv.org/pdf/1909.05658.pdf,59,,6654,409.1117651,4,https://huggingface.co/uer/sbert-base-chinese-nli,"This is the sentence embedding model pre-trained by UER-py, which is introduced in this paper.; ChineseTextualInference is used as training data. ; The model is fine-tuned by UER-py on Tencent Cloud. We fine-tune five epochs with a sequence length of 128 on the basis of the pre-trained model chinese_roberta_L-12_H-768. At the end of each epoch, the model is saved when the best performance on development set is achieved.; Finally, we convert the pre-trained model into Huggingface's format:",Natural Language Processing
finbert-tone,Text Classification,PyTorch; TensorFlow; Transformers,English,,,94,,1212563,878.2238088,20,https://huggingface.co/yiyanghkust/finbert-tone,"FinBERT is a BERT model pre-trained on financial communication text. The purpose is to enhance financial NLP research and practice. It is trained on the following three financial communication corpus. The total corpora size is 4.9B tokens.; More technical details on FinBERT: Click Link; This released finbert-tone model is the FinBERT model fine-tuned on 10,000 manually annotated (positive, negative, neutral) sentences from analyst reports. This model achieves superior performance on financial tone analysis task. If you are simply interested in using FinBERT for financial tone analysis, give it a try.; If you use the model in your academic work, please cite the following paper:; Huang, Allen H., Hui Wang, and Yi Yang. ""FinBERT: A Large Language Model for Extracting Information from Financial Text."" Contemporary Accounting Research (2022).",Natural Language Processing
tapex-large-sql-execution,Table Question Answering,PyTorch; Transformers,English,mit,https://arxiv.org/pdf/2107.07653.pdf,7,,645,1670.449845,,https://huggingface.co/microsoft/tapex-large-sql-execution,"TAPEX was proposed in TAPEX: Table Pre-training via Learning a Neural SQL Executor by Qian Liu, Bei Chen, Jiaqi Guo, Morteza Ziyadi, Zeqi Lin, Weizhu Chen, Jian-Guang Lou. The original repo can be found here.; TAPEX (Table Pre-training via Execution) is a conceptually simple and empirically powerful pre-training approach to empower existing models with table reasoning skills. TAPEX realizes table pre-training by learning a neural SQL executor over a synthetic corpus, which is obtained by automatically synthesizing executable SQL queries.; TAPEX is based on the BART architecture, the transformer encoder-encoder (seq2seq) model with a bidirectional (BERT-like) encoder and an autoregressive (GPT-like) decoder.; You can use the raw model for simulating neural SQL execution, i.e., employ TAPEX to execute a SQL query on a given table. However, the model is mostly meant to be fine-tuned on a supervised dataset. Currently TAPEX can be fine-tuned to tackle table question answering tasks and table fact verification tasks. See the model hub to look for fine-tuned versions on a task that interests you.; Here is how to use this model in transformers:",Natural Language Processing
xlm-roberta-base-conll2003-ner,Token Classification,PyTorch; Transformers,,mit,,2,conll2003,924,1158.820206,,https://huggingface.co/Yaxin/xlm-roberta-base-conll2003-ner,"This model is a fine-tuned version of xlm-roberta-base on the conll2003 dataset.
It achieves the following results on the evaluation set:; More information needed; More information needed; More information needed; The following hyperparameters were used during training:",Natural Language Processing
tapex-base-finetuned-wtq,Table Question Answering,PyTorch; Safetensors; Transformers,English,mit,https://arxiv.org/pdf/2107.07653.pdf,8,wikitablequestions,4553,1117.379806,,https://huggingface.co/microsoft/tapex-base-finetuned-wtq,"TAPEX was proposed in TAPEX: Table Pre-training via Learning a Neural SQL Executor by Qian Liu, Bei Chen, Jiaqi Guo, Morteza Ziyadi, Zeqi Lin, Weizhu Chen, Jian-Guang Lou. The original repo can be found here.; TAPEX (Table Pre-training via Execution) is a conceptually simple and empirically powerful pre-training approach to empower existing models with table reasoning skills. TAPEX realizes table pre-training by learning a neural SQL executor over a synthetic corpus, which is obtained by automatically synthesizing executable SQL queries.; TAPEX is based on the BART architecture, the transformer encoder-encoder (seq2seq) model with a bidirectional (BERT-like) encoder and an autoregressive (GPT-like) decoder.; This model is the tapex-base model fine-tuned on the WikiTableQuestions dataset.; You can use the model for table question answering on complex questions. Some solveable questions are shown below (corresponding tables now shown):",Natural Language Processing
wav2vec2-large-robust-12-ft-emotion-msp-dim,Audio Classification,PyTorch; Transformers,English,cc-by-nc-sa-4.0,https://arxiv.org/pdf/2203.07378.pdf,31,msp-podcast,49043,661.0072177,7,https://huggingface.co/audeering/wav2vec2-large-robust-12-ft-emotion-msp-dim,"The model expects a raw audio signal as input and outputs predictions for arousal, dominance and valence in a range of approximately 0...1. In addition, it also provides the pooled states of the last transformer layer. The model was created by fine-tuning 
Wav2Vec2-Large-Robust on MSP-Podcast (v1.7). The model was pruned from 24 to 12 transformer layers before fine-tuning. An ONNX export of the model is available from doi:10.5281/zenodo.6221127. Further details are given in the associated paper and tutorial.",Audio
codegen-350M-mono,Text Generation,PyTorch; Transformers,,bsd-3-clause,https://arxiv.org/pdf/2203.13474.pdf,55,,236397,800.3409549,17,https://huggingface.co/Salesforce/codegen-350M-mono,"CodeGen is a family of autoregressive language models for program synthesis from the paper: A Conversational Paradigm for Program Synthesis by Erik Nijkamp, Bo Pang, Hiroaki Hayashi, Lifu Tu, Huan Wang, Yingbo Zhou, Silvio Savarese, Caiming Xiong. The models are originally released in this repository, under 3 pre-training data variants (NL, Multi, Mono) and 4 model size variants (350M, 2B, 6B, 16B).; The checkpoint included in this repository is denoted as CodeGen-Mono 350M in the paper, where ""Mono"" means the model is initialized with CodeGen-Multi 350M and further pre-trained on a Python programming language dataset, and ""350M"" refers to the number of trainable parameters.; This checkpoint (CodeGen-Mono 350M) was firstly initialized with CodeGen-Multi 350M, and then pre-trained on BigPython dataset. The data consists of 71.7B tokens of Python programming language. See Section 2.1 of the paper for more details.; CodeGen was trained using cross-entropy loss to maximize the likelihood of sequential inputs.
The family of models are trained using multiple TPU-v4-512 by Google, leveraging data and model parallelism.
See Section 2.3 of the paper for more details.; We evaluate our models on two code generation benchmark: HumanEval and MTPB. Please refer to the paper for more details.",Natural Language Processing
layoutlmv3-base,,PyTorch; TensorFlow; ONNX; Transformers,English,cc-by-nc-sa-4.0,https://arxiv.org/pdf/2204.08387.pdf,176,,6337042,1506.328256,26,https://huggingface.co/microsoft/layoutlmv3-base,"Microsoft Document AI | GitHub; LayoutLMv3 is a pre-trained multimodal Transformer for Document AI with unified text and image masking. The simple unified architecture and training objectives make LayoutLMv3 a general-purpose pre-trained model. For example, LayoutLMv3 can be fine-tuned for both text-centric tasks, including form understanding, receipt understanding, and document visual question answering, and image-centric tasks such as document image classification and document layout analysis.; LayoutLMv3: Pre-training for Document AI with Unified Text and Image Masking
Yupan Huang, Tengchao Lv, Lei Cui, Yutong Lu, Furu Wei, ACM Multimedia 2022.; If you find LayoutLM useful in your research, please cite the following paper:; The content of this project itself is licensed under the Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0).
Portions of the source code are based on the transformers project.
Microsoft Open Source Code of Conduct",
bart-sci-definition,Text2Text Generation,PyTorch; Transformers,,,,3,,26,1669.127236,,https://huggingface.co/talaugust/bart-sci-definition,"This is a finetuned BART Large model from the paper:; ""Generating Scientific Definitions with Controllable Complexity"" ; By Tal August, Katharina Reinecke, and Noah A. Smith; Abstract: Unfamiliar terminology and complex language can present barriers to understanding science. Natural language processing stands to help address these issues by automatically defining unfamiliar terms. We introduce a new task and dataset for defining scientific terms and controlling the complexity of gen- erated definitions as a way of adapting to a specific reader¡¯s background knowledge. We test four definition generation methods for this new task, finding that a sequence-to-sequence approach is most successful. We then explore the version of the task in which definitions are generated at a target complexity level. We in- troduce a novel reranking approach and find in human evaluations that it offers superior fluency while also controlling complexity, compared to several controllable generation baselines.; The model is finetuned on the task of generating definitions of scientific terms. We frame our task as generating an answer to the question ¡°What is (are) X?¡± Along with the question, the model takes a support document of scientific abstracted related to the term being defined. ",Natural Language Processing
opt-1.3b,Text Generation,PyTorch; TensorFlow; JAX; Transformers,English,other,https://arxiv.org/pdf/2205.01068.pdf; https://arxiv.org/pdf/2005.14165.pdf,98,,125507,8080.705655,49,https://huggingface.co/facebook/opt-1.3b,"OPT was first introduced in Open Pre-trained Transformer Language Models and first released in metaseq's repository on May 3rd 2022 by Meta AI.; Disclaimer: The team releasing OPT wrote an official model card, which is available in Appendix D of the paper. 
Content from this model card has been written by the Hugging Face team.; To quote the first two paragraphs of the official paper; Large language models trained on massive text collections have shown surprising emergent
capabilities to generate text and perform zero- and few-shot learning. While in some cases the public
can interact with these models through paid APIs, full model access is currently limited to only a
few highly resourced labs. This restricted access has limited researchers¡¯ ability to study how and
why these large language models work, hindering progress on improving known challenges in areas
such as robustness, bias, and toxicity.; We present Open Pretrained Transformers (OPT), a suite of decoder-only pre-trained transformers ranging from 125M
to 175B parameters, which we aim to fully and responsibly share with interested researchers. We train the OPT models to roughly match 
the performance and sizes of the GPT-3 class of models, while also applying the latest best practices in data
collection and efficient training. Our aim in developing this suite of OPT models is to enable reproducible and responsible research at scale, and
to bring more voices to the table in studying the impact of these LLMs. Definitions of risk, harm, bias, and toxicity, etc., should be articulated by the
collective research community as a whole, which is only possible when models are available for study.",Natural Language Processing
entity-extraction,Token Classification,PyTorch; TensorBoard; Transformers,,apache-2.0,,9,conll2003; autoevaluate/conll2003-sample,580,266.9284776,,https://huggingface.co/autoevaluate/entity-extraction,"This model is a fine-tuned version of distilbert-base-uncased on the conll2003 dataset.
It achieves the following results on the evaluation set:; More information needed; More information needed; More information needed; The following hyperparameters were used during training:",Natural Language Processing
bert-keyword-extractor,Token Classification,PyTorch; Transformers,English,apache-2.0,,10,,619,431.8708522,,https://huggingface.co/yanekyuk/bert-keyword-extractor,"This model is a fine-tuned version of bert-base-cased on an unknown dataset.
It achieves the following results on the evaluation set:; More information needed; More information needed; More information needed; The following hyperparameters were used during training:",Natural Language Processing
DeBERTa-v3-large-mnli-fever-anli-ling-wanli,Zero-Shot Classification,PyTorch; Safetensors; Transformers,English,mit,https://arxiv.org/pdf/2104.07179.pdf; https://arxiv.org/pdf/2111.09543.pdf,40,multi_nli; anli; fever; lingnli; alisawuffles/WANLI,35215,1751.123912,3,https://huggingface.co/MoritzLaurer/DeBERTa-v3-large-mnli-fever-anli-ling-wanli,"This model was fine-tuned on the MultiNLI, Fever-NLI, Adversarial-NLI (ANLI), LingNLI and WANLI datasets, which comprise 885 242 NLI hypothesis-premise pairs. This model is the best performing NLI model on the Hugging Face Hub as of 06.06.22 and can be used for zero-shot classification. It significantly outperforms all other large models on the ANLI benchmark.; The foundation model is DeBERTa-v3-large from Microsoft. DeBERTa-v3 combines several recent innovations compared to classical Masked Language Models like BERT, RoBERTa etc., see the paper; DeBERTa-v3-large-mnli-fever-anli-ling-wanli was trained on the MultiNLI, Fever-NLI, Adversarial-NLI (ANLI), LingNLI and WANLI datasets, which comprise 885 242 NLI hypothesis-premise pairs. Note that SNLI was explicitly excluded due to quality issues with the dataset. More data does not necessarily make for better NLI models. ; DeBERTa-v3-large-mnli-fever-anli-ling-wanli was trained using the Hugging Face trainer with the following hyperparameters. Note that longer training with more epochs hurt performance in my tests (overfitting).; The model was evaluated using the test sets for MultiNLI, ANLI, LingNLI, WANLI and the dev set for Fever-NLI. The metric used is accuracy.
The model achieves state-of-the-art performance on each dataset. Surprisingly, it outperforms the previous state-of-the-art on ANLI (ALBERT-XXL) by 8,3%. I assume that this is because ANLI was created to fool masked language models like RoBERTa (or ALBERT), while DeBERTa-v3 uses a better pre-training objective (RTD), disentangled attention and I fine-tuned it on higher quality NLI data. ",Natural Language Processing
yalm-100b,,TensorBoard,English; Russian,apache-2.0,,104,,0,0.001870193,,https://huggingface.co/yandex/yalm-100b,"https://github.com/yandex/YaLM-100B; YaLM 100B is a GPT-like neural network for generating and processing text. It can be used freely by developers and researchers from all over the world.; The model leverages 100 billion parameters. It took 65 days to train the model on a cluster of 800 A100 graphics cards and 1.7 TB of online texts, books, and countless other sources in both English and Russian.; Training details and best practices on acceleration and stabilizations can be found on Medium (English) and Habr (Russian) articles.; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
Randeng-Pegasus-523M-Summary-Chinese,Summarization,PyTorch; Transformers,Chinese,,https://arxiv.org/pdf/1912.08777.pdf; https://arxiv.org/pdf/2209.02970.pdf,34,,2367,1075.606762,1,https://huggingface.co/IDEA-CCNL/Randeng-Pegasus-523M-Summary-Chinese,"ÉÆÓÚ´¦ÀíÕªÒªÈÎÎñ£¬ÔÚÊý¸öÖÐÎÄÕªÒªÊý¾Ý¼¯ÉÏÎ¢µ÷ºóµÄ£¬ÖÐÎÄ°æµÄPAGASUS-large¡£; Good at solving text summarization tasks, after fine-tuning on multiple Chinese text summarization datasets, Chinese PAGASUS-large.; ²Î¿¼ÂÛÎÄ£ºPEGASUS: Pre-training with Extracted Gap-sentences for Abstractive Summarization; »ùÓÚRandeng-Pegasus-523M-Chinese£¬ÎÒÃÇÔÚÊÕ¼¯µÄ7¸öÖÐÎÄÁìÓòµÄÎÄ±¾ÕªÒªÊý¾Ý¼¯£¨Ô¼4M¸öÑù±¾£©ÉÏÎ¢µ÷ÁËËü£¬µÃµ½ÁËsummary°æ±¾¡£Õâ7¸öÊý¾Ý¼¯Îª£ºeducation, new2016zh, nlpcc, shence, sohu, thucnewsºÍweibo¡£; Based on Randeng-Pegasus-523M-Chinese, we fine-tuned a text summarization version (summary) on 7 Chinese text summarization datasets, with totaling around 4M samples. The datasets include: education, new2016zh, nlpcc, shence, sohu, thucnews and weibo.",Natural Language Processing
face-parsing,Image Segmentation,PyTorch; Safetensors; Transformers,English,cc0-1.0,,30,celebamaskhq,520,678.0034863,1,https://huggingface.co/jonathandinu/face-parsing,,Computer Vision
nllb-200-distilled-1.3B,Translation,PyTorch; Transformers,196 languages,cc-by-nc-4.0,,44,flores-200,40925,5633.683618,20,https://huggingface.co/facebook/nllb-200-distilled-1.3B,"This is the model card of NLLB-200's distilled 1.3B variant.; Here are the metrics for that particular checkpoint.; ? Model performance measures: NLLB-200 model was evaluated using BLEU, spBLEU, and chrF++ metrics widely adopted by machine translation community. Additionally, we performed human evaluation with the XSTS protocol and measured the toxicity of the generated translations.; ? We used parallel multilingual data from a variety of sources to train the model. We provide detailed report on data selection and construction process in Section 5 in the paper. We also used monolingual data constructed from Common Crawl. We provide more details in Section 5.2.; ? In this work, we took a reflexive approach in technological development to ensure that we prioritize human users and minimize risks that could be transferred to them. While we reflect on our ethical considerations throughout the article, here are some additional points to highlight. For one, many languages chosen for this study are low-resource languages, with a heavy emphasis on African languages. While quality translation could improve education and information access in many in these communities, such an access could also make groups with lower levels of digital literacy more vulnerable to misinformation or online scams. The latter scenarios could arise if bad actors misappropriate our work for nefarious activities, which we conceive as an example of unintended use. Regarding data acquisition, the training data used for model development were mined from various publicly available sources on the web. Although we invested heavily in data cleaning, personally identifiable information may not be entirely eliminated. Finally, although we did our best to optimize for translation quality, mistranslations produced by the model could remain. Although the odds are low, this could have adverse impact on those who rely on these translations to make important decisions (particularly when related to health and safety).",Natural Language Processing
ruDialoGPT-medium,Conversational,PyTorch; Transformers,Russian,mit,https://arxiv.org/pdf/2001.09977.pdf,23,,1738,1559.644793,,https://huggingface.co/tinkoff-ai/ruDialoGPT-medium,This generation model is based on sberbank-ai/rugpt3medium_based_on_gpt2. It's trained on large corpus of dialog data and can be used for buildning generative conversational agents; The model was trained with context size 3; On a private validation set we calculated metrics introduced in this paper: ; How to use:,Natural Language Processing
text2image-prompt-generator,Text Generation,PyTorch; Transformers,English,cc-by-2.0,,207,succinctly/midjourney-prompts,34589,668.3419572,32,https://huggingface.co/succinctly/text2image-prompt-generator,"This is a GPT-2 model fine-tuned on the succinctly/midjourney-prompts dataset, which contains 250k text prompts that users issued to the Midjourney text-to-image service over a month period. For more details on how this dataset was scraped, see Midjourney User Prompts & Generated Images (250k).; This prompt generator can be used to auto-complete prompts for any text-to-image model (including the DALL¡¤E family):
; Note that, while this model can be used together with any text-to-image model, it occasionally produces Midjourney-specific tags. Users can specify certain requirements via double-dashed parameters (e.g. --ar 16:9 sets the aspect ratio to 16:9, and --no snake asks the model to exclude snakes from the generated image) or set the importance of various entities in the image via explicit weights (e.g. hot dog::1.5 food::-1 is likely to produce the image of an animal instead of a frankfurter).; When using this model, please attribute credit to Succinctly AI.",Natural Language Processing
xclip-base-patch32,Video Classification,PyTorch; Transformers,English,mit,https://arxiv.org/pdf/2208.02816.pdf,27,,10524,790.5847413,7,https://huggingface.co/microsoft/xclip-base-patch32,"X-CLIP model (base-sized, patch resolution of 32) trained fully-supervised on Kinetics-400. It was introduced in the paper Expanding Language-Image Pretrained Models for General Video Recognition by Ni et al. and first released in this repository.; This model was trained using 8 frames per video, at a resolution of 224x224.; Disclaimer: The team releasing X-CLIP did not write a model card for this model so this model card has been written by the Hugging Face team.; X-CLIP is a minimal extension of CLIP for general video-language understanding. The model is trained in a contrastive way on (video, text) pairs. ; ",Computer Vision
OPT-13B-Erebus,Text Generation,PyTorch; Transformers,English,other,https://arxiv.org/pdf/2205.01068.pdf,116,,22382,26318.2383,1,https://huggingface.co/KoboldAI/OPT-13B-Erebus,"This is the second generation of the original Shinen made by Mr. Seeker. The full dataset consists of 6 different sources, all surrounding the ""Adult"" theme. The name ""Erebus"" comes from the greek mythology, also named ""darkness"". This is in line with Shin'en, or ""deep abyss"". For inquiries, please contact the KoboldAI community. Warning: THIS model is NOT suitable for use by minors. The model will output X-rated content.; The data can be divided in 6 different datasets:; The dataset uses [Genre: <comma-separated list of genres>] for tagging.; You can use this model directly with a pipeline for text generation. This example generates a different sequence each time it's run:; Based on known problems with NLP technology, potential relevant factors include bias (gender, profession, race and religion). Warning: This model has a very strong NSFW bias!",Natural Language Processing
sd-image-variations-diffusers,Image-to-Image,Diffusers,,creativeml-openrail-m,,255,ChristophSchuhmann/improved_aesthetics_6plus,27209,1.611437721,113,https://huggingface.co/lambdalabs/sd-image-variations-diffusers,"? V2 model released, and blurriness issues fixed! ?; ?? Image Variations is now natively supported in ? Diffusers! ??; ; This version of Stable Diffusion has been fine tuned from CompVis/stable-diffusion-v1-4-original to accept CLIP image embedding rather than text embeddings. This allows the creation of ""image variations"" similar to DALLE-2 using Stable Diffusion. This version of the weights has been ported to huggingface Diffusers, to use this with the Diffusers library requires the Lambda Diffusers repo.; This model was trained in two stages and longer than the original variations model and gives better image quality and better CLIP rated similarity compared to the original version",Computer Vision
CLIP-ViT-B-32-laion2B-s34B-b79K,Zero-Shot Image Classification,PyTorch; OpenCLIP,,mit,https://arxiv.org/pdf/1910.04867.pdf,28,,786378,1213.589493,7,https://huggingface.co/laion/CLIP-ViT-B-32-laion2B-s34B-b79K,"A CLIP ViT-B/32 model trained with the LAION-2B English subset of LAION-5B (https://laion.ai/blog/laion-5b/) using OpenCLIP (https://github.com/mlfoundations/open_clip).; Model training done by Romain Beaumont on the stability.ai cluster. ; As per the original OpenAI CLIP model card, this model is intended as a research output for research communities. We hope that this model will enable researchers to better understand and explore zero-shot, arbitrary image classification. We also hope it can be used for interdisciplinary studies of the potential impact of such model. ; The OpenAI CLIP paper includes a discussion of potential downstream impacts to provide an example for this sort of analysis. Additionally, the LAION-5B blog (https://laion.ai/blog/laion-5b/) and upcoming paper include additional discussion as it relates specifically to the training dataset. ; Zero-shot image classification, image and text retrieval, among others.",Computer Vision
CLIP-ViT-g-14-laion2B-s12B-b42K,,PyTorch; OpenCLIP,,mit,https://arxiv.org/pdf/1910.04867.pdf,24,,5711,11206.14976,5,https://huggingface.co/laion/CLIP-ViT-g-14-laion2B-s12B-b42K,"A CLIP ViT-g/14 model trained with the LAION-2B English subset of LAION-5B (https://laion.ai/blog/laion-5b/) using OpenCLIP (https://github.com/mlfoundations/open_clip).; Model training done by Romain Beaumont on the stability.ai cluster. ; As per the original OpenAI CLIP model card, this model is intended as a research output for research communities. We hope that this model will enable researchers to better understand and explore zero-shot, arbitrary image classification. We also hope it can be used for interdisciplinary studies of the potential impact of such model. ; The OpenAI CLIP paper includes a discussion of potential downstream impacts to provide an example for this sort of analysis. Additionally, the LAION-5B blog (https://laion.ai/blog/laion-5b/) and upcoming paper include additional discussion as it relates specifically to the training dataset. ; Zero-shot image classification, image and text retrieval, among others.",
OPT-6.7B-Erebus,Text Generation,PyTorch; Transformers,English,other,https://arxiv.org/pdf/2205.01068.pdf,70,,41789,13620.63828,,https://huggingface.co/KoboldAI/OPT-6.7B-Erebus,"This is the second generation of the original Shinen made by Mr. Seeker. The full dataset consists of 6 different sources, all surrounding the ""Adult"" theme. The name ""Erebus"" comes from the greek mythology, also named ""darkness"". This is in line with Shin'en, or ""deep abyss"". For inquiries, please contact the KoboldAI community. Warning: THIS model is NOT suitable for use by minors. The model will output X-rated content.; The data can be divided in 6 different datasets:; The dataset uses [Genre: <comma-separated list of genres>] for tagging.; You can use this model directly with a pipeline for text generation. This example generates a different sequence each time it's run:; Based on known problems with NLP technology, potential relevant factors include bias (gender, profession, race and religion). Warning: This model has a very strong NSFW bias!",Natural Language Processing
RuLeanALBERT,Fill-Mask,Transformers,Russian,apache-2.0,,21,,100,1832.962426,1,https://huggingface.co/yandex/RuLeanALBERT,"RuLeanALBERT is a pretrained masked language model for the Russian language using a memory-efficient architecture.; Read more about the model in this blog post (in Russian).; See its implementation, as well as the pretraining and finetuning code, at https://github.com/yandex-research/RuLeanALBERT.",Natural Language Processing
whisper-base,Automatic Speech Recognition,PyTorch; TensorFlow; JAX; Transformers,99 languages,apache-2.0,https://arxiv.org/pdf/2212.04356.pdf,103,,73220,874.9854593,124,https://huggingface.co/openai/whisper-base,"Whisper is a pre-trained model for automatic speech recognition (ASR) and speech translation. Trained on 680k hours 
of labelled data, Whisper models demonstrate a strong ability to generalise to many datasets and domains without the need 
for fine-tuning.; Whisper was proposed in the paper Robust Speech Recognition via Large-Scale Weak Supervision 
by Alec Radford et al from OpenAI. The original code repository can be found here.; Disclaimer: Content for this model card has partly been written by the Hugging Face team, and parts of it were 
copied and pasted from the original model card.; Whisper is a Transformer based encoder-decoder model, also referred to as a sequence-to-sequence model. 
It was trained on 680k hours of labelled speech data annotated using large-scale weak supervision. ; The models were trained on either English-only data or multilingual data. The English-only models were trained 
on the task of speech recognition. The multilingual models were trained on both speech recognition and speech 
translation. For speech recognition, the model predicts transcriptions in the same language as the audio. 
For speech translation, the model predicts transcriptions to a different language to the audio.",Audio
whisper-small,Automatic Speech Recognition,PyTorch; TensorFlow; JAX; Transformers,99 languages,apache-2.0,https://arxiv.org/pdf/2212.04356.pdf,64,,42652,2904.985842,66,https://huggingface.co/openai/whisper-small,"Whisper is a pre-trained model for automatic speech recognition (ASR) and speech translation. Trained on 680k hours 
of labelled data, Whisper models demonstrate a strong ability to generalise to many datasets and domains without the need 
for fine-tuning.; Whisper was proposed in the paper Robust Speech Recognition via Large-Scale Weak Supervision 
by Alec Radford et al from OpenAI. The original code repository can be found here.; Disclaimer: Content for this model card has partly been written by the Hugging Face team, and parts of it were 
copied and pasted from the original model card.; Whisper is a Transformer based encoder-decoder model, also referred to as a sequence-to-sequence model. 
It was trained on 680k hours of labelled speech data annotated using large-scale weak supervision. ; The models were trained on either English-only data or multilingual data. The English-only models were trained 
on the task of speech recognition. The multilingual models were trained on both speech recognition and speech 
translation. For speech recognition, the model predicts transcriptions in the same language as the audio. 
For speech translation, the model predicts transcriptions to a different language to the audio.",Audio
vlt5-base-keywords,Text2Text Generation,PyTorch; Safetensors; Transformers,Polish; English,cc-by-4.0,https://arxiv.org/pdf/2209.14008.pdf,16,posmac,10377,2253.933437,,https://huggingface.co/Voicelab/vlt5-base-keywords,"Our vlT5 model is a keyword generation model based on encoder-decoder architecture using Transformer blocks presented by Google (https://huggingface.co/t5-base). The vlT5 was trained on scientific articles corpus to predict a given set of keyphrases based on the concatenation of the article¡¯s abstract and title. It generates precise, yet not always complete keyphrases that describe the content of the article based only on the abstract.; Keywords generated with vlT5-base-keywords: encoder-decoder architecture, keyword generation; Results on demo model (different generation method, one model per language):; Our vlT5 model is a keyword generation model based on encoder-decoder architecture using Transformer blocks presented by Google (https://huggingface.co/t5-base). The vlT5 was trained on scientific articles corpus to predict a given set of keyphrases based on the concatenation of the article¡¯s abstract and title. It generates precise, yet not always complete keyphrases that describe the content of the article based only on the abstract.; Keywords generated with vlT5-base-keywords: encoder-decoder architecture, vlT5, keyword generation, scientific articles corpus",Natural Language Processing
robo-diffusion,Text-to-Image,Diffusers,English,creativeml-openrail-m,,345,,1592,0.472410469,150,https://huggingface.co/nousr/robo-diffusion,There is a new model based on stable-dffusion 2.0 (base) that can be found here!; A dreambooth-method finetune of stable diffusion that will output cool looking robots when prompted.; ; Github: https://github.com/nousr/robo-diffusion; Keep the words nousr robot towards the beginning of your prompt to invoke the finetuned style.,Multimodel
Arcane-Diffusion,Text-to-Image,Diffusers,,creativeml-openrail-m,,737,,9470,6545.923574,396,https://huggingface.co/nitrosocke/Arcane-Diffusion,"This is the fine-tuned Stable Diffusion model trained on images from the TV Show Arcane.
Use the tokens arcane style in your prompts for the effect.; If you enjoy my work, please consider supporting me
; This model can be used just like any other Stable Diffusion model. For more information,
please have a look at the Stable Diffusion.; You can also export the model to ONNX, MPS and/or FLAX/JAX.; We also support a Gradio Web UI and Colab with Diffusers to run fine-tuned Stable Diffusion models:

",Multimodel
clip-variants,,ONNX,English,mit,,6,,0,0.89351017,,https://huggingface.co/mlunar/clip-variants,"The CLIP model was developed by researchers at OpenAI to learn about what contributes to robustness in computer vision tasks. The model was also developed to test the ability of models to generalize to arbitrary image classification tasks in a zero-shot manner. It was not developed for general model deployment - to deploy models like CLIP, researchers will first need to carefully study their capabilities in relation to the specific context they¡¯re being deployed within.; See the original CLIP Model Card for more details on limitations and biases.; This repository holds OpenAI's CLIP models converted into many other variants, see below for more details.; I haven't done many tests on these conversions. I've briefly tried the float16 versions, which seem very similar to the original float32, however the similarity seems to drop more with the qint8/quint8 versions as expected. I couldn't try qint8 as it seemed unsupported for some operations, but I'm including it for completeness. From a brief test the quint8 version seemed to work fine.; The license for the conversion code is MIT, the license for the models is the same as the original license for the OpenAI models (??¡á?). I have no affiliation with OpenAI.",
bloomz-560m,Text Generation,PyTorch; TensorBoard; Safetensors; Transformers,46 languages,bigscience-bloom-rail-1.0,https://arxiv.org/pdf/2211.01786.pdf,66,bigscience/xP3,19417,2308.286453,4,https://huggingface.co/bigscience/bloomz-560m,"; We present BLOOMZ & mT0, a family of models capable of following human instructions in dozens of languages zero-shot. We finetune BLOOM & mT5 pretrained multilingual language models on our crosslingual task mixture (xP3) and find the resulting models capable of crosslingual generalization to unseen tasks & languages.; We recommend using the model to perform tasks expressed in natural language. For example, given the prompt ""Translate to English: Je t¡¯aime."", the model will most likely answer ""I love you."". Some prompt ideas from our paper: ; Feel free to share your generations in the Community tab!; Prompt Engineering: The performance may vary depending on the prompt. For BLOOMZ models, we recommend making it very clear when the input stops to avoid the model trying to continue it. For example, the prompt ""Translate to English: Je t'aime"" without the full stop (.) at the end, may result in the model trying to continue the French sentence. Better prompts are e.g. ""Translate to English: Je t'aime."", ""Translate to English: Je t'aime. Translation:"" ""What is ""Je t'aime."" in English?"", where it is clear for the model when it should answer. Further, we recommend providing the model as much context as possible. For example, if you want it to answer in Telugu, then tell the model, e.g. ""Explain in a sentence in Telugu what is backpropagation in neural networks."".",Natural Language Processing
bloomz-3b,Text Generation,PyTorch; TensorBoard; Safetensors; Transformers,46 languages,bigscience-bloom-rail-1.0,https://arxiv.org/pdf/2211.01786.pdf,60,bigscience/xP3,58097,12323.00652,,https://huggingface.co/bigscience/bloomz-3b,"; We present BLOOMZ & mT0, a family of models capable of following human instructions in dozens of languages zero-shot. We finetune BLOOM & mT5 pretrained multilingual language models on our crosslingual task mixture (xP3) and find the resulting models capable of crosslingual generalization to unseen tasks & languages.; We recommend using the model to perform tasks expressed in natural language. For example, given the prompt ""Translate to English: Je t¡¯aime."", the model will most likely answer ""I love you."". Some prompt ideas from our paper: ; Feel free to share your generations in the Community tab!; Prompt Engineering: The performance may vary depending on the prompt. For BLOOMZ models, we recommend making it very clear when the input stops to avoid the model trying to continue it. For example, the prompt ""Translate to English: Je t'aime"" without the full stop (.) at the end, may result in the model trying to continue the French sentence. Better prompts are e.g. ""Translate to English: Je t'aime."", ""Translate to English: Je t'aime. Translation:"" ""What is ""Je t'aime."" in English?"", where it is clear for the model when it should answer. Further, we recommend providing the model as much context as possible. For example, if you want it to answer in Telugu, then tell the model, e.g. ""Explain in a sentence in Telugu what is backpropagation in neural networks."".",Natural Language Processing
polyglot-ko-12.8b,Text Generation,PyTorch; Safetensors; Transformers,Korean,apache-2.0,https://arxiv.org/pdf/2104.09864.pdf; https://arxiv.org/pdf/2204.04541.pdf; https://arxiv.org/pdf/2306.02254.pdf,47,,14838,52815.72076,,https://huggingface.co/EleutherAI/polyglot-ko-12.8b,"Polyglot-Ko is a series of large-scale Korean autoregressive language models made by the EleutherAI polyglot team.; The model consists of 40 transformer layers with a model dimension of 5120, and a feedforward dimension of 20480. The model
dimension is split into 40 heads, each with a dimension of 128. Rotary Position Embedding (RoPE) is applied to 64
dimensions of each head. The model is trained with a tokenization vocabulary of 30003.; Polyglot-Ko-12.8B was trained on 863 GB of Korean language data (1.2TB before processing), a large-scale dataset curated by TUNiB. The data collection process has abided by South Korean laws. This dataset was collected for the purpose of training Polyglot-Ko models, so it will not be released for public use.  ; Furthermore, in order to avoid the model memorizing and generating personally identifiable information (PII) in the training data, we masked out the following sensitive information in the pre-processing stage:; Polyglot-Ko-12.8B was trained for 167 billion tokens over 301,000 steps on 256 A100 GPUs with the GPT-NeoX framework. It was trained as an autoregressive language model, using cross-entropy loss to maximize the likelihood of predicting the next token. ",Natural Language Processing
mt0-base,Text2Text Generation,PyTorch; Safetensors; Transformers,101 languages,apache-2.0,https://arxiv.org/pdf/2211.01786.pdf,19,bigscience/xP3; mc4,3012,4792.476076,2,https://huggingface.co/bigscience/mt0-base,"; We present BLOOMZ & mT0, a family of models capable of following human instructions in dozens of languages zero-shot. We finetune BLOOM & mT5 pretrained multilingual language models on our crosslingual task mixture (xP3) and find our resulting models capable of crosslingual generalization to unseen tasks & languages.; We recommend using the model to perform tasks expressed in natural language. For example, given the prompt ""Translate to English: Je t¡¯aime."", the model will most likely answer ""I love you."". Some prompt ideas from our paper: ; Feel free to share your generations in the Community tab!; Prompt Engineering: The performance may vary depending on the prompt. For BLOOMZ models, we recommend making it very clear when the input stops to avoid the model trying to continue it. For example, the prompt ""Translate to English: Je t'aime"" without the full stop (.) at the end, may result in the model trying to continue the French sentence. Better prompts are e.g. ""Translate to English: Je t'aime."", ""Translate to English: Je t'aime. Translation:"" ""What is ""Je t'aime."" in English?"", where it is clear for the model when it should answer. Further, we recommend providing the model as much context as possible. For example, if you want it to answer in Telugu, then tell the model, e.g. ""Explain in a sentence in Telugu what is backpropagation in neural networks."".",Natural Language Processing
mt0-large,Text2Text Generation,PyTorch; Safetensors; Transformers,101 languages,apache-2.0,https://arxiv.org/pdf/2211.01786.pdf,25,bigscience/xP3; mc4,4012,10096.79618,1,https://huggingface.co/bigscience/mt0-large,"; We present BLOOMZ & mT0, a family of models capable of following human instructions in dozens of languages zero-shot. We finetune BLOOM & mT5 pretrained multilingual language models on our crosslingual task mixture (xP3) and find our resulting models capable of crosslingual generalization to unseen tasks & languages.; We recommend using the model to perform tasks expressed in natural language. For example, given the prompt ""Translate to English: Je t¡¯aime."", the model will most likely answer ""I love you."". Some prompt ideas from our paper: ; Feel free to share your generations in the Community tab!; Prompt Engineering: The performance may vary depending on the prompt. For BLOOMZ models, we recommend making it very clear when the input stops to avoid the model trying to continue it. For example, the prompt ""Translate to English: Je t'aime"" without the full stop (.) at the end, may result in the model trying to continue the French sentence. Better prompts are e.g. ""Translate to English: Je t'aime."", ""Translate to English: Je t'aime. Translation:"" ""What is ""Je t'aime."" in English?"", where it is clear for the model when it should answer. Further, we recommend providing the model as much context as possible. For example, if you want it to answer in Telugu, then tell the model, e.g. ""Explain in a sentence in Telugu what is backpropagation in neural networks."".",Natural Language Processing
mt0-xxl-mt,Text2Text Generation,PyTorch; Transformers,101 languages,apache-2.0,https://arxiv.org/pdf/2211.01786.pdf,39,bigscience/xP3mt; mc4,1035,57149.64598,4,https://huggingface.co/bigscience/mt0-xxl-mt,"; We present BLOOMZ & mT0, a family of models capable of following human instructions in dozens of languages zero-shot. We finetune BLOOM & mT5 pretrained multilingual language models on our crosslingual task mixture (xP3) and find our resulting models capable of crosslingual generalization to unseen tasks & languages.; We recommend using the model to perform tasks expressed in natural language. For example, given the prompt ""Translate to English: Je t¡¯aime."", the model will most likely answer ""I love you."". Some prompt ideas from our paper: ; Feel free to share your generations in the Community tab!; Prompt Engineering: The performance may vary depending on the prompt. For BLOOMZ models, we recommend making it very clear when the input stops to avoid the model trying to continue it. For example, the prompt ""Translate to English: Je t'aime"" without the full stop (.) at the end, may result in the model trying to continue the French sentence. Better prompts are e.g. ""Translate to English: Je t'aime."", ""Translate to English: Je t'aime. Translation:"" ""What is ""Je t'aime."" in English?"", where it is clear for the model when it should answer. Further, we recommend providing the model as much context as possible. For example, if you want it to answer in Telugu, then tell the model, e.g. ""Explain in a sentence in Telugu what is backpropagation in neural networks."".",Natural Language Processing
OCR-Donut-CORD,Image-to-Text,PyTorch; Transformers,,mit,https://arxiv.org/pdf/2111.15664.pdf,18,,2606,814.3303005,2,https://huggingface.co/jinhybr/OCR-Donut-CORD,"Donut model fine-tuned on CORD. It was introduced in the paper OCR-free Document Understanding Transformer by Geewok et al. and first released in this repository.; Disclaimer: The team releasing Donut did not write a model card for this model so this model card has been written by the Hugging Face team.; Donut consists of a vision encoder (Swin Transformer) and a text decoder (BART). Given an image, the encoder first encodes the image into a tensor of embeddings (of shape batch_size, seq_len, hidden_size), after which the decoder autoregressively generates text, conditioned on the encoding of the encoder. ; ; This model is fine-tuned on CORD, a document parsing dataset.",Multimodel
ldm-super-resolution-4x-openimages,,Diffusers; PyTorch,,apache-2.0,https://arxiv.org/pdf/2112.10752.pdf,60,,4595,0.004445496,1,https://huggingface.co/CompVis/ldm-super-resolution-4x-openimages,"Paper: High-Resolution Image Synthesis with Latent Diffusion Models; Abstract:; By decomposing the image formation process into a sequential application of denoising autoencoders, diffusion models (DMs) achieve state-of-the-art synthesis results on image data and beyond. Additionally, their formulation allows for a guiding mechanism to control the image generation process without retraining. However, since these models typically operate directly in pixel space, optimization of powerful DMs often consumes hundreds of GPU days and inference is expensive due to sequential evaluations. To enable DM training on limited computational resources while retaining their quality and flexibility, we apply them in the latent space of powerful pretrained autoencoders. In contrast to previous work, training diffusion models on such a representation allows for the first time to reach a near-optimal point between complexity reduction and detail preservation, greatly boosting visual fidelity. By introducing cross-attention layers into the model architecture, we turn diffusion models into powerful and flexible generators for general conditioning inputs such as text or bounding boxes and high-resolution synthesis becomes possible in a convolutional manner. Our latent diffusion models (LDMs) achieve a new state of the art for image inpainting and highly competitive performance on various tasks, including unconditional image generation, semantic scene synthesis, and super-resolution, while significantly reducing computational requirements compared to pixel-based DMs.; Authors; Robin Rombach, Andreas Blattmann, Dominik Lorenz, Patrick Esser, Bj?rn Ommer",
galactica-6.7b,Text Generation,PyTorch; Transformers,,cc-by-nc-4.0,https://arxiv.org/pdf/1810.03993.pdf,79,,2782,14061.71406,1,https://huggingface.co/facebook/galactica-6.7b,"; Model card from the original repo ; Following Mitchell et al. (2018), this model card provides information about the GALACTICA model, how it was trained, and the intended use cases. Full details about how the model was trained and evaluated can be found in the release paper.; The GALACTICA models are trained on a large-scale scientific corpus. The models are designed to perform scientific tasks, including but not limited to citation prediction, scientific QA, mathematical reasoning, summarization, document generation, molecular property prediction and entity extraction. The models were developed by the Papers with Code team at Meta AI to study the use of language models for the automatic organization of science. We train models with sizes ranging from 125M to 120B parameters. Below is a summary of the released models:; November 2022",Natural Language Processing
artstation-diffusion,Text-to-Image,Diffusers,English,creativeml-openrail-m,,94,,310,0.004744453,3,https://huggingface.co/hakurei/artstation-diffusion,"artstation-diffusion is a latent text-to-image diffusion model that has been conditioned on high-quality Artstation images through fine-tuning.; Aspect Ratio Bucketing has been used during finetuning. This model can generate different aspect ratios VERY WELL.; knight, full body study, concept art, atmospheric; This model is open access and available to all, with a CreativeML OpenRAIL-M license further specifying rights and usage.
The CreativeML OpenRAIL License specifies: ; This model can be used for entertainment purposes and as a generative art assistant.",Multimodel
Future-Diffusion,Text-to-Image,Diffusers,English,openrail++,,388,,8716,2641.926116,31,https://huggingface.co/nitrosocke/Future-Diffusion,"This is the fine-tuned Stable Diffusion 2.0 model trained on high quality 3D images with a futuristic Sci-Fi theme.
Use the tokensfuture style in your prompts for the effect.
Trained on Stability.ai's  Stable Diffusion 2.0 Base with 512x512 resolution.; If you enjoy my work and want to test new models before release, please consider supporting me
; Disclaimer: The SD 2.0 model is just over 24h old at this point and we still need to figure out how it works exactly. Please view this as an early prototype and experiment with the model.; Characters rendered with the model:

Cars and Animals rendered with the model:

Landscapes rendered with the model:
; future style [subject] Negative Prompt: duplicate heads bad anatomy Steps: 20, Sampler: Euler a, CFG scale: 7, Size: 512x704",Multimodel
text-to-sql-with-table-schema,Text2Text Generation,PyTorch; Transformers,English,,,36,wikisql,3930,894.4288672,1,https://huggingface.co/juierror/text-to-sql-with-table-schema,"There are newer version of this using Flan-T5 as a based model. You can check out here; PS. From this discussion, I think the base model that I use for finetune did not support the token <, so this might not be a good model to do this tasks. ",Natural Language Processing
modelz_base,,ONNX,,,,4,,0,48506.88145,,https://huggingface.co/uwg/modelz_base,"No model card; New: Create and edit this model card directly on the website!; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
FinBERT-PT-BR,Text Classification,PyTorch; Transformers,Portuguese,apache-2.0,,8,,831,437.1662649,,https://huggingface.co/lucas-leme/FinBERT-PT-BR,"FinBERT-PT-BR is a pre-trained NLP model to analyze sentiment of Brazilian Portuguese financial texts.; The model was trained in two main stages: language modeling and sentiment modeling. In the first stage, a language model was trained with more than 1.4 million texts of financial news in Portuguese. 
From this first training, it was possible to build a sentiment classifier with few labeled texts (500) that presented a satisfactory convergence.; At the end of the work, a comparative analysis with other models and the possible applications of the developed model are presented. 
In the comparative analysis, it was possible to observe that the developed model presented better results than the current models in the state of the art. 
Among the applications, it was demonstrated that the model can be used to build sentiment indices, investment strategies and macroeconomic data analysis, such as inflation.; ; In order to use the model, you need to get the HuggingFace auth token. You can get it here.",Natural Language Processing
scientific_abstract_simplification,Text2Text Generation,PyTorch; Safetensors; Transformers,English,mit,,13,,234,6412.687333,1,https://huggingface.co/haining/scientific_abstract_simplification,"Scientific Abstract Simplification (SAS) is a tool designed to rewrite complex scientific abstracts into simpler, more comprehensible versions. Our objective is to make scientific knowledge universally accessible. If you have already experimented with our baseline model (sas_baseline), you will find that the current model surpasses its predecessor in terms of all evaluation metrics. Feel free to test it via the Hosted Inference API to your right. Simply select one of the provided examples or input your own scientific abstract. Just ensure to precede your text with the instruction, ""summarize, simplify, and contextualize: "", followed by a space. For local usage, refer to the Usage section.""; Open science has significantly reduced barriers to accessing scientific papers.
However, attainable research does not entail accessible knowledge.
Consequently, many individuals might prefer to rely on succinct social media narratives rather than endeavour to comprehend a scientific paper.
This preference is understandable as humans often favor narratives over dry, technical information. 
So, why not ""translate"" these intricate scientific abstracts into simpler, more accessible narratives? 
Several prestigious journals have already initiated steps towards enhancing accessibility. 
For instance, PNAS requires authors to submit Significance Statements understandable to an 'undergraduate-educated scientist', while Science includes an editor's abstract to provide a swift overview of the paper's salient points.; In this project, our objective is to employ AI to rewrite scientific abstracts into easily understandable scientific narratives.
To facilitate this, we have curated two new datasets: one containing PNAS abstract-significance pairs and the other encapsulating editor abstracts from Science.
We utilize a Transformer model (a variant known as Flan-T5) to fine-tune our model for the task of simplifying scientific abstracts.
Initially, the model is fine-tuned utilizing multiple discrete instructions by amalgamating four pertinent tasks in a challenge-proportional manner (a strategy we refer to as Multi-Instruction Pretuning).
Subsequently, we continue the fine-tuning process exclusively with the abstract-significance corpus. Our model can generate lay summaries that outperform models fine-tuned solely with the abstract-significance corpus and models fine-tuned with traditional task combinations.
We hope our work can foster a more comprehensive understanding of scientific research, enabling a larger audience to benefit from open science.; Use the code below to get started with the model. Remember to prepend the INSTRUCTION for best performance.; We finetuned the base model (flan-t5-large) on multiple relevant tasks with standard language modeling loss. During training, the source text of each task is prepended with an task-specific instruction and mapped to the corresponding target text. For example, ""simplify: "" is added before a wiki text, and the whole text is fed into the model to line up with the corresponding simple wiki text. The tuning process has two steps.",Natural Language Processing
whisper-medium-jp,Automatic Speech Recognition,PyTorch; TensorBoard; Transformers,Japanese,apache-2.0,,22,mozilla-foundation/common_voice_11_0,2421,4701.954075,15,https://huggingface.co/vumichien/whisper-medium-jp,"This model is a fine-tuned version of openai/whisper-medium on the common_voice_11_0 dataset.
It achieves the following results on the evaluation set:; More information needed; More information needed; More information needed; The following hyperparameters were used during training:",Audio
Analog-Diffusion,Text-to-Image,Diffusers; Safetensors,English,creativeml-openrail-m,,813,,19923,4362.248729,131,https://huggingface.co/wavymulder/Analog-Diffusion,"Analog Diffusion

CKPT DOWNLOAD LINK - This is a dreambooth model trained on a diverse set of analog photographs.; In your prompt, use the activation token: analog style; You may need to use the words blur haze naked in your negative prompts. My dataset did not include any NSFW material but the model seems to be pretty horny. Note that using blur and haze in your negative prompt can give a sharper image but also a less pronounced analog film effect.; Trained from 1.5 with VAE.; Please see this document where I share the parameters (prompt, sampler, seed, etc.) used for all example images.",Multimodel
bad-artist,Text-to-Image,,eng,cc0-1.0,,283,,0,0.016689453,,https://huggingface.co/nick-x-hacker/bad-artist,"; The images above were generated with only ""solo"" in the positive prompt, and ""sketch by bad-artist"" (this embedding) in the negative.

The embedding uses only 2 tokens.; Textual-inversion embedding for use in unconditional (negative) prompt.

Inspired partly by https://huggingface.co/datasets/Nerfgun3/bad_prompt.; There are currently 2 version:; I recommend using with 'by', so for example ""sketch by bad-artist"", or ""painting by bad-artist"", or ""photograph by bad-artist"", etc.",Multimodel
riffusion-model-v1,,Diffusers,,creativeml-openrail-m,https://arxiv.org/pdf/2112.10752.pdf; https://arxiv.org/pdf/2103.00020.pdf; https://arxiv.org/pdf/2205.11487.pdf; https://arxiv.org/pdf/2210.08402.pdf,463,,51438,14950.40681,37,https://huggingface.co/riffusion/riffusion-model-v1,"Riffusion is an app for real-time music generation with stable diffusion.; Read about it at https://www.riffusion.com/about and try it at https://www.riffusion.com/.; This repository contains the model files, including:; Riffusion is a latent text-to-image diffusion model capable of generating spectrogram images given any text input. These spectrograms can be converted into audio clips.; The model was created by Seth Forsgren and Hayk Martiros as a hobby project.",
GTA5_Artwork_Diffusion,Text-to-Image,Diffusers; Safetensors,English,creativeml-openrail-m,,99,,1718,4854.245072,33,https://huggingface.co/ItsJayQz/GTA5_Artwork_Diffusion,"This model was trained on the loading screens, gta storymode, and gta online DLCs artworks.
Which includes characters, background, chop, and some objects.
The model can do people and portrait pretty easily, as well as cars, and houses.
For some reasons, the model stills automatically include in some game footage, so landscapes tend to look a bit more game-like.
Please check out important informations on the usage of the model down bellow.; To reference the art style, use the token: gtav style; There is already an existing model that uses textual inversion. This is trained using Dreambooth instead, whether or not this method is better, I will let you judge.; We support a Gradio Web UI to run GTA5_Artwork_Diffusion:
; Here are some samples.",Multimodel
models,,,English; Chinese; Japanese,afl-3.0,,47,,0,141892.7964,,https://huggingface.co/emmajoanne/models,"Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
karlo-v1-alpha,Text-to-Image,Diffusers,,creativeml-openrail-m,,73,,3933,0.007838669,23,https://huggingface.co/kakaobrain/karlo-v1-alpha,"Karlo is a text-conditional image generation model based on OpenAI's unCLIP architecture with the improvement over the standard super-resolution model from 64px to 256px, recovering high-frequency details only in the small number of denoising steps.; Karlo is available in diffusers!; ; ; Karlo is a text-conditional diffusion model based on unCLIP, composed of prior, decoder, and super-resolution modules. In this repository, we include the improved version of the standard super-resolution module for upscaling 64px to 256px only in 7 reverse steps, as illustrated in the figure below:",Multimodel
dreambooth-avatar,Text-to-Image,Diffusers,English,,,39,,739,0.003612328,8,https://huggingface.co/lambdalabs/dreambooth-avatar,"Dreambooth finetuning of Stable Diffusion (v1.5.1) on Avatar art style by Lambda Labs.; This text-to-image stable diffusion model was trained with dreambooth.Put in a text prompt and generate your own Avatar style image!; ; To run model locally:; Base model is Stable Diffusion v1.5 and was trained using Dreambooth with 60 input images sized 512x512 displaying Avatar character images.
The model is learning to associate Avatar images with the style tokenized as 'avatarart style'.
Prior preservation was used during training using the class 'Person' to avoid training bleeding into the representations for that class.
Training ran on 2xA6000 GPUs on Lambda GPU Cloud for 700 steps, batch size 4 (a couple hours, at a cost of about $4).",Multimodel
instructor-base,Sentence Similarity,PyTorch; Sentence Transformers; Transformers,English,apache-2.0,https://arxiv.org/pdf/2212.09741.pdf,64,,4747,442.2661729,13,https://huggingface.co/hkunlp/instructor-base,"We introduce Instructor???, an instruction-finetuned text embedding model that can generate text embeddings tailored to any task (e.g., classification, retrieval, clustering, text evaluation, etc.) and domains (e.g., science, finance, etc.) by simply providing the task instruction, without any finetuning. Instructor?? achieves sota on 70 diverse embedding tasks!
The model is easy to use with our customized sentence-transformer library. For more details, check out our paper and project page! ; **************************** Updates ****************************; Then you can use the model like this to calculate domain-specific and task-aware embeddings:; If you want to calculate customized embeddings for specific sentences, you may follow the unified template to write instructions: ; ??????????????????????????Represent the domain text_type for task_objective:",Natural Language Processing
SkyPaint,,Diffusers,,,,19,,46,0.019444389,,https://huggingface.co/SkyWork/SkyPaint,"SkyPaint is a Chinese-English bilingual text-generated image project developed by Singularity-AI. It is still being updated and optimized.; The SkyPaint text generation image model is mainly composed of two parts, namely the prompt word text encoder model and the diffusion model. Therefore, our optimization is also divided into two steps. First, based on OpenAI-CLIP, we optimized the prompt word text encoder model to make SkyPaint have the ability to recognize Chinese and English, and then optimized the diffusion model, so that SkyPaint has modern artistic capabilities and can produce high-quality pictures.; Chinese and English mixed prompt word input.
Generating high-quality images in a modern art style.
English prompt words for stable_diffusion_1.x official model and related fine-tuning models.
Retain usage habits and methods of stable_diffusion prompt words.
Introduction to SkyCLIP Models
SkyCLIP is a CLIP model obtained by using an efficient method of training Chinese-English bilingual CLIP models. This method only needs to use text data to achieve efficient distillation of the OpenAI-CLIP model, which greatly reduces the data threshold. At the same time, training requires Compared with the original CLIP model, the computing power requirement is reduced by more than 90%, which is convenient for the open source community to reproduce/fine-tune. This method only changes the text encoder of OpenAI-CLIP, and can be used with the image encoder of OpenAI-CLIP to realize the image-text retrieval function.; »úÐµ¹·
; ³Ç±¤ ´óº£ Ï¦Ñô ¹¬Æé¿¥¶¯»­
",
furrydiffusion,Text-to-Image,Diffusers,,creativeml-openrail-m,,42,,2956,2181.123114,8,https://huggingface.co/lunarfish/furrydiffusion,"; FurryDiffusion is a model made to generate furry art, this model is very much in beta still and will keep improoving! To use this please make sure to include furry in your prompt and to make a specific breed add the breed name only.; Example Prompts:; Test the concept via A1111 Colab fast-Colab-A1111
Or you can run your new concept via diffusers Colab Notebook for Inference; NOTE: Its better to run it in Google Colab since you can use google's powerful gpu's for free. Go ahead try it now!",Multimodel
7th_Layer,,,,other,,579,,0,0.002607422,2,https://huggingface.co/syaimu/7th_Layer,"default CFG Scale : 7 ¡À5; default Sampler : DPM++ 2M Karras; default Steps : 25; Negative prompt : (worst quality:1.4), (low quality:1.4) , (monochrome:1.1),; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
stable-diffusion-logo-fine-tuned,Text-to-Image,Diffusers,,creativeml-openrail-m,,78,,4476,2672.642216,14,https://huggingface.co/nicky007/stable-diffusion-logo-fine-tuned,"this Stable diffusion model i have fine tuned on 1000 raw logo png/jpg images of of size 128x128 with augmentation ; Enjoy .create any type of logo; for examples:""Logo of a pirate"",""logo of a sunglass with girl"" or something complex like ""logo of a ice-cream with snake"" etc",Multimodel
CLIP-ViT-B-16-laion2B-s34B-b88K,Zero-Shot Image Classification,OpenCLIP,,mit,https://arxiv.org/pdf/1910.04867.pdf,13,,202680,1201.585182,6,https://huggingface.co/laion/CLIP-ViT-B-16-laion2B-s34B-b88K,"A CLIP ViT-B/16 model trained with the LAION-2B English subset of LAION-5B (https://laion.ai/blog/laion-5b/) using OpenCLIP (https://github.com/mlfoundations/open_clip).; Model training done by Mehdi Cherti on the JUWELS Booster supercomputer. See acknowledgements below.; As per the original OpenAI CLIP model card, this model is intended as a research output for research communities. We hope that this model will enable researchers to better understand and explore zero-shot, arbitrary image classification. We also hope it can be used for interdisciplinary studies of the potential impact of such model. ; The OpenAI CLIP paper includes a discussion of potential downstream impacts to provide an example for this sort of analysis. Additionally, the LAION-5B blog (https://laion.ai/blog/laion-5b/) and upcoming paper include additional discussion as it relates specifically to the training dataset. ; Zero-shot image classification, image and text retrieval, among others.",Computer Vision
graphormer-base-pcqm4mv2,Graph Machine Learning,PyTorch; Transformers,,mit,https://arxiv.org/pdf/2106.05234.pdf,24,,2520,191.0045703,9,https://huggingface.co/clefourrier/graphormer-base-pcqm4mv2,"The Graphormer is a graph classification model.; The Graphormer is a graph Transformer model, pretrained on PCQM4M-LSCv2.; This model should be used for graph classification tasks or graph representation tasks; the most likely associated task is molecule modeling. It can either be used as such, or finetuned on downstream tasks.; The Graphormer model is ressource intensive for large graphs, and might lead to OOM errors.; See the Graph Classification with Transformers tutorial.",Multimodel
pygmalion-2.7b,Conversational,PyTorch; TensorBoard; Transformers,English,creativeml-openrail-m,,44,,14864,5573.900613,6,https://huggingface.co/PygmalionAI/pygmalion-2.7b,"Pymalion 2.7B is a proof-of-concept dialogue model based on EleutherAI's gpt-neo-2.7B.; Warning: This model is NOT suitable for use by minors. It will output X-rated content under certain circumstances.; The fine-tuning dataset consisted of 56MB of dialogue data gathered from multiple sources, which includes both real and partially machine-generated conversations.; Model weights were initialized from the uft-2.7b ConvoGPT model made available in this commit.; The model was then further fine-tuned on ~48.5 million tokens for ~5k steps on 4 NVIDIA A40s using DeepSpeed.",Natural Language Processing
HassanBlend1.5.1.2,Text-to-Image,Diffusers,,creativeml-openrail-m,,207,,2049,49295.37083,39,https://huggingface.co/hassanblend/HassanBlend1.5.1.2,"I am hassan, I created HassansBlend, the latest version currently is 1.5.1.2 I continue to iterate and improve on this model over time. Feel free to check out our discord or rentry page for more examples with prompts and outputs generated.; This blend is finetuned over SD1.5 with thousands of images included in the dataset it was trained with. Along with that there are some minor merges added in just to soften it up and increase the creativity. 
I have also some custom created content such as enhancement hypernetworks/embeddings etc for patreons or KoFi subscribers only on my pages below
 Links 
Patreon

KoFi

Discord
; Model details and examples with sample prompts: https://rentry.org/sdhassan",Multimodel
SD_Photoreal_Merged_Models,Text-to-Image,,,cc0-1.0,,106,,0,16033.08803,,https://huggingface.co/deadman44/SD_Photoreal_Merged_Models,"for Stable Diffusion Webui Automatic1111
type: .safetensors(ckpt)
CFG Scale: middle-low; example.
low quality, worst quality, bad anatomy, bad proportions; UniPC, Dpm++ (2M/SDE) Karras, DDIM
Steps: 10¡«24; vae-ft-mse-840000-ema-pruned; -Mixed 5000+images",Multimodel
Trauter_LoRAs,,,,,,508,,0,0.033330078,1,https://huggingface.co/YoungMasterFromSect/Trauter_LoRAs,"NOTICE: My LoRAs require high amount of tags to look good, I will fix this later on and update all of my LoRAs if everything works out.; Welcome to the place where I host my LoRAs. In short, LoRA is just a checkpoint trained on specific artstyle/subject that you load into your WebUI, that can be used with other models.Although you can use it with any model, the effects of LoRA will vary between them.
Most of the previews use models that come from WarriorMama777 .For more information about them, you can visit the original LoRA repository: https://github.com/cloneofsimo/loraEvery images posted here, or on the other sites have metadata in them that you can use in PNG Info tab in your WebUI to get access to the prompt of the image.Everything I do here is for free of charge!I don't guarantee that my LoRAs will give you good results, if you think they are bad, don't use them.; To use them in your WebUI, please install the extension linked under, following the installation guide:https://github.com/kohya-ss/sd-webui-additional-networks#installation; All of my LoRAs are to be used with their original danbooru tag. For example:  ; My LoRAs will have sufixes that will tell you how much they were trained. Either by using words like ""soft"" and ""hard"",where soft stands for lower amount of training and hard for higher amount of training.  ",
AsiaFacemix,,,,openrail,,399,Gustavosta/Stable-Diffusion-Prompts,0,21067.60473,,https://huggingface.co/dcy/AsiaFacemix,"±¾ÈËÖ£ÖØÉùÃ÷£º±¾Ä£ÐÍÔ­ÔòÉÏ½ûÖ¹ÓÃÓÚÑµÁ·»ùÓÚÃ÷ÐÇ¡¢¹«ÖÚÈËÎïÐ¤ÏñµÄ·ç¸ñÄ£ÐÍÑµÁ·£¬ÒòÎªÕâ»á´øÀ´ÕùÒé£¬¶ÔAIÉçÇøµÄ·¢Õ¹Ôì³É²»Á¼µÄ¸ºÃæÓ°Ïì¡£ Èç¸÷Î»Ò»¶¨ÒªÎ¥·´ÒÔÉÏÉùÃ÷ÑµÁ·Ïà¹ØÄ£ÐÍ²¢¹«¿ª·¢²¼£¬ÇëÔÚÄúµÄ·¢²¼ËµÃ÷ÖÐÉ¾³ýÓë±¾Ä£ÐÍÓÐ¹ØµÄÒ»ÇÐÃèÊö¡£¸ÐÐ»¸÷Î»Ê¹ÓÃÕßµÄÖ§³ÖÓëÀí½â¡£; In principle, this model is prohibited from being used for training style models based on portraits of celebrities and public figures, because it will cause controversy and have a negative impact on the development of the AI community. If you must violate the above statement to train the relevant model and release it publicly, please delete all descriptions related to this model in your release notes. Thank you for your support and understanding.; ¸ÃÄ£ÐÍ»ùÓÚbasil mix,dreamlike,ProtoGenµÈÓÅÐãÄ£ÐÍÎ¢µ÷£¬ÈÚºÏ¶øÀ´¡£
ÓÃÓÚ½â¾öÉÏÊöÄ£ÐÍÔÚ»æÖÆÑÇÖÞ¡¢ÖÐ¹úÔªËØÄÚÈÝÊ±£¬Ö»ÄÜ»æÖÆ³óÂªµÄ¿Ì°åÓ¡ÏóÁ³µÄÎÊÌâ¡£
Í¬Ê±Ò²ÄÜ¸ÄÉÆºÍ¼õÉÙ»æÖÆÑÇÖÞ¡¢ÖÐ¹úÔªËØÄÚÈÝÊ±£¬µÃµ½¸ü½Ó½ütagsµÄ»æÖÆÄÚÈÝ¡£
This model based on basil mix,dreamlike,ProtoGen,etc. After finetune and merging, it solved the big problem that the other model can only draw ugly stereotyped woman faces from hundreds years ago When drawing Asian and Chinese elements.
This model can also improve the drawing content of Asian and Chinese elements to get closer to tags.; Based on dreamlike finetune example£º


; Based on Image to Image example£º

",
chatgpt-detector-roberta,Text Classification,PyTorch; Transformers,English,,https://arxiv.org/pdf/2301.07597.pdf,27,Hello-SimpleAI/HC3,185478,502.3388117,17,https://huggingface.co/Hello-SimpleAI/chatgpt-detector-roberta,"This model is trained on the mix of full-text and splitted sentences of answers from Hello-SimpleAI/HC3.; More details refer to arxiv: 2301.07597 and Gtihub project Hello-SimpleAI/chatgpt-comparison-detection.; The base checkpoint is roberta-base.
We train it with all Hello-SimpleAI/HC3 data (without held-out) for 1 epoch.; (1-epoch is consistent with the experiments in our paper.); Checkout this papaer arxiv: 2301.07597",Natural Language Processing
anything-v3.0,Text-to-Image,Diffusers,English,creativeml-openrail-m,,622,,28781,14438.40229,501,https://huggingface.co/Linaqruf/anything-v3.0,,Multimodel
yolov8m-scene-classification,Image Classification,TensorBoard; PyTorch,,,,6,keremberke/indoor-scene-classification,4011,33.22426708,,https://huggingface.co/keremberke/yolov8m-scene-classification,More models available at: awesome-yolov8-models; Inference API has been turned off for this model.,Computer Vision
yolov8m-table-extraction,Object Detection,TensorBoard; PyTorch,,,,11,keremberke/table-extraction,7269,52.45749638,1,https://huggingface.co/keremberke/yolov8m-table-extraction,More models available at: awesome-yolov8-models; Inference API has been turned off for this model.,Computer Vision
DucHaitenAnime,Text-to-Image,Diffusers,English,creativeml-openrail-m,,19,,5254,49111.04399,41,https://huggingface.co/DucHaiten/DucHaitenAnime,"DucHaitenAnime_v4.0: In this version i added a little 3D, a little realistic, improved the hand but not much, improved the color because i don't like to use vae; All images above are used only text to image, not edited or accompanying application software.; https://civitai.com/models/6634; please support me by becoming a patron:; https://www.patreon.com/duchaitenreal",Multimodel
reward-model-deberta-v3-large-v2,Text Classification,PyTorch; Transformers,English,mit,,85,openai/summarize_from_feedback; openai/webgpt_comparisons; Dahoas/instruct-synthetic-prompt-responses; Anthropic/hh-rlhf,62221,1792.890171,13,https://huggingface.co/OpenAssistant/reward-model-deberta-v3-large-v2,"Reward model (RM) trained to predict which generated answer is better judged by a human, given a question.; RM are useful in these domain:; QA model evaluation; serves as reward score in RLHF ; detect potential toxic response via ranking",Natural Language Processing
BioGPT-Large,Text Generation,PyTorch; Transformers,English,mit,,109,pubmed,5709,6442.758577,22,https://huggingface.co/microsoft/BioGPT-Large,"Pre-trained language models have attracted increasing attention in the biomedical domain, inspired by their great success in the general natural language domain. Among the two main branches of pre-trained language models in the general language domain, i.e. BERT (and its variants) and GPT (and its variants), the first one has been extensively studied in the biomedical domain, such as BioBERT and PubMedBERT. While they have achieved great success on a variety of discriminative downstream biomedical tasks, the lack of generation ability constrains their application scope. In this paper, we propose BioGPT, a domain-specific generative Transformer language model pre-trained on large-scale biomedical literature. We evaluate BioGPT on six biomedical natural language processing tasks and demonstrate that our model outperforms previous models on most tasks. Especially, we get 44.98%, 38.42% and 40.76% F1 score on BC5CDR, KD-DTI and DDI end-to-end relation extraction tasks, respectively, and 78.2% accuracy on PubMedQA, creating a new record. Our case study on text generation further demonstrates the advantage of BioGPT on biomedical literature to generate fluent descriptions for biomedical terms.; If you find BioGPT useful in your research, please cite the following paper:",Natural Language Processing
chilloutmix,,,,creativeml-openrail-m,,234,,,0,,https://huggingface.co/swl-models/chilloutmix,"This repository has been marked as containing sensitive content and may contain potentially harmful and sensitive
		information.
	",
pythia-2.8b-deduped,Text Generation,PyTorch; Safetensors; Transformers,English,apache-2.0,https://arxiv.org/pdf/2304.01373.pdf; https://arxiv.org/pdf/2101.00027.pdf; https://arxiv.org/pdf/2201.07311.pdf,12,EleutherAI/the_pile_deduplicated,4559,11634.76584,,https://huggingface.co/EleutherAI/pythia-2.8b-deduped,"The Pythia Scaling Suite is a collection of models developed to facilitate 
interpretability research (see paper). 
It contains two sets of eight models of sizes 
70M, 160M, 410M, 1B, 1.4B, 2.8B, 6.9B, and 12B. For each size, there are two 
models: one trained on the Pile, and one trained on the Pile after the dataset 
has been globally deduplicated. All 8 model sizes are trained on the exact 
same data, in the exact same order. We also provide 154 intermediate 
checkpoints per model, hosted on Hugging Face as branches.; The Pythia model suite was designed to promote scientific 
research on large language models, especially interpretability research. 
Despite not centering downstream performance as a design goal, we find the 
models match or exceed the performance of 
similar and same-sized models, such as those in the OPT and GPT-Neo suites.; Previously, we released an early version of the Pythia suite to the public. 
However, we decided to retrain the model suite to address a few hyperparameter 
discrepancies. This model card lists the changes; 
see appendix B in the Pythia paper for further discussion. We found no 
difference in benchmark performance between the two Pythia versions. 
The old models are 
still available, but we 
suggest the retrained suite if you are just starting to use Pythia.
This is the current release.; Please note that all models in the Pythia suite were renamed in January 
2023. For clarity, a table 
comparing the old and new names is provided in this model card, together 
with exact parameter counts.; The primary intended use of Pythia is research on the behavior, functionality, 
and limitations of large language models. This suite is intended to provide 
a controlled setting for performing scientific experiments. We also provide 
154 checkpoints per model: initial step0, 10 log-spaced checkpoints 
step{1,2,4...512}, and 143 evenly-spaced checkpoints from step1000 to 
step143000. These checkpoints are hosted on Hugging Face as branches. Note 
that branch 143000 corresponds exactly to the model checkpoint on the main 
branch of each model.",Natural Language Processing
OPT-13B-Nerybus-Mix,Text Generation,PyTorch; Transformers,English,other,https://arxiv.org/pdf/2205.01068.pdf,22,,8216,26871.24107,2,https://huggingface.co/KoboldAI/OPT-13B-Nerybus-Mix,"This is a merged (50/50) model of both Erebus 13B and Nerys V2 13B by Mr. Seeker.
Warning: THIS model is NOT suitable for use by minors. The model will output X-rated content.; For more information, check out the two source models:; Based on known problems with NLP technology, potential relevant factors include bias (gender, profession, race and religion).
Warning: This model has a very strong NSFW bias!; OPT-13B is licensed under the OPT-175B license, Copyright (c) Meta Platforms, Inc. All Rights Reserved.; Inference API has been turned off for this model.",Natural Language Processing
boring_e621,,,,apache-2.0,,38,,0,152.9958496,,https://huggingface.co/FoodDesert/boring_e621,"This embedding attempts to capture what it means for an image to be uninteresting.  It was trained as a negative embedding using e621 style tags as prompts during training.
If you're using the Automatic1111 Stable Diffusion WebUI, place the boring_e621_v4.pt file in 
stable-diffusion-webui\embeddings and add ""boring_e621_v4"" to your negative prompt for more interesting outputs.
; The motivation for boring_e621 is that negative embeddings like Bad Prompt, 
whose training is described here 
depend on manually curated lists of tags describing features people do not want their images to have, such as ""deformed hands"".  Some problems with this approach are:; To address these problems, boring_e621 employs textual inversion on a set of images automatically extracted from the art site 
e621.net, a rich resource of millions of hand-labeled artworks, each of which is both human-labeled topically and rated 
according to its quality.  E621.net allows users to express their approval of an artwork by either up-voting it, or marking it as a favorite.Boring_e621 was specifically trained on artworks automatically selected from the site according to the criteria 
that no user has ever Favorited or Up-Voted them.  boring_e621 thus learned to produce low-quality images, so when it is 
used in the negative prompt of a stable diffusion image generator, the model avoids making mistakes that would make the generation more boring.
; To qualitatively evaluate how well boring_e621 has learned to improve image quality, we apply it to 4 simple sample prompts using the base Stable Diffusion 1.5 model.; ",
NeverEnding_Dream-Feb19-2023,,,,,,170,,0,0,,https://huggingface.co/jomcs/NeverEnding_Dream-Feb19-2023,"No model card; New: Create and edit this model card directly on the website!; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
SteamSHP-flan-t5-xl,Text2Text Generation,PyTorch; Transformers,English,apache-2.0,,33,stanfordnlp/SHP,486,11674.44298,,https://huggingface.co/stanfordnlp/SteamSHP-flan-t5-xl,"SteamSHP-XL is a preference model trained to predict -- given some context and two possible responses -- which response humans will find more helpful.
It can be used for NLG evaluation or as a reward model for RLHF.; It is a FLAN-T5-xl model (3B parameters) finetuned on:; There is a smaller variant called SteamSHP-Large that was made by finetuning FLAN-T5-large (780M parameters).
Despite being 1/4 of the size, it is on average only 0.75 points less accurate on the SHP + Anthropic test data (across all domains).; The input text should be of the format:; The output generated by SteamSHP-XL will either be A or B.",Natural Language Processing
whisper-medium-fleurs-lang-id,Audio Classification,PyTorch; TensorBoard; Transformers,,apache-2.0,,2,xtreme_s,1683,615.1566492,,https://huggingface.co/sanchit-gandhi/whisper-medium-fleurs-lang-id,"This model is a fine-tuned version of openai/whisper-medium on the FLEURS subset of the google/xtreme_s dataset.
It achieves the following results on the evaluation set:; To reproduce this run, execute the command in run.sh.; More information needed; More information needed; More information needed",Audio
sd-controlnet-canny,Image-to-Image,Diffusers,,openrail,https://arxiv.org/pdf/2302.05543.pdf,85,,145250,2969.671903,138,https://huggingface.co/lllyasviel/sd-controlnet-canny,"ControlNet is a neural network structure to control diffusion models by adding extra conditions. 
This checkpoint corresponds to the ControlNet conditioned on Canny edges.; It can be used in combination with Stable Diffusion.; ; Developed by: Lvmin Zhang, Maneesh Agrawala; Model type: Diffusion-based text-to-image generation model",Computer Vision
sd-controlnet-hed,Image-to-Image,Diffusers,,openrail,https://arxiv.org/pdf/2302.05543.pdf,19,,39148,2969.67161,98,https://huggingface.co/lllyasviel/sd-controlnet-hed,"ControlNet is a neural network structure to control diffusion models by adding extra conditions. 
This checkpoint corresponds to the ControlNet conditioned on HED Boundary.; It can be used in combination with Stable Diffusion.; ; Developed by: Lvmin Zhang, Maneesh Agrawala; Model type: Diffusion-based text-to-image generation model",Computer Vision
fasttext-language-identification,Text Classification,fastText,,cc-by-nc-4.0,https://arxiv.org/pdf/1607.04606.pdf; https://arxiv.org/pdf/1802.06893.pdf; https://arxiv.org/pdf/1607.01759.pdf; https://arxiv.org/pdf/1612.03651.pdf,29,,0,1208.328311,3,https://huggingface.co/facebook/fasttext-language-identification,"fastText is an open-source, free, lightweight library that allows users to learn text representations and text classifiers. It works on standard, generic hardware. Models can later be reduced in size to even fit on mobile devices. It was introduced in this paper. The official website can be found here.; This LID (Language IDentification) model is used to predict the language of the input text, and the hosted version (lid218e) was released as part of the NLLB project and can detect 217 languages. You can find older versions (ones that can identify 157 languages) on the official fastText website.; fastText is a library for efficient learning of word representations and sentence classification. fastText is designed to be simple to use for developers, domain experts, and students. It's dedicated to text classification and learning word representations, and was designed to allow for quick model iteration and refinement without specialized hardware. fastText models can be trained on more than a billion words on any multicore CPU in less than a few minutes.; It includes pre-trained models learned on Wikipedia and in over 157 different languages. fastText can be used as a command line, linked to a C++ application, or used as a library for use cases from experimentation and prototyping to production.; You can use pre-trained word vectors for text classification or language identification. See the tutorials and resources on its official website to look for tasks that interest you.",Natural Language Processing
so-vits-svc-4.0-models,,,,mit,,69,,0,0.002800636,,https://huggingface.co/TachibanaKimika/so-vits-svc-4.0-models,"Ä£ÐÍÃüÃû×ñÑ­G_${name}_${Epoch}epoch.pth.; ÏÔ¿¨Õ¨ÁË, ÔÝÊ±²»Á¶ÁË; ÓÉso-vits-svc-4.0ÑµÁ·µÄÄ£ÐÍ ²»ÊÇv2; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
text2vec-base-chinese,Sentence Similarity,PyTorch; Transformers,Chinese,apache-2.0,,17,,17395,409.5393329,7,https://huggingface.co/GanymedeNil/text2vec-base-chinese,"Based on the derivative model of https://huggingface.co/shibing624/text2vec-base-chinese, replace MacBERT with LERT, and keep other training conditions unchanged¡£",Natural Language Processing
llama-7b-hf-int4,,,,other,,73,,0,3870.740107,,https://huggingface.co/decapoda-research/llama-7b-hf-int4,"LLaMA-13B converted to work with Transformers/HuggingFace. This is under a special license, please see the LICENSE file for details.; EXPERIMENTAL RELEASE; This has been converted to int4 via GPTQ method. This requires some special support code that is also highly experimental. NOT COMPATIBLE WITH TRANSFORMERS LIBRARY.; --
license: other; Organization developing the model
The FAIR team of Meta AI.",
pythia-1b,Text Generation,PyTorch; Safetensors; Transformers,English,apache-2.0,https://arxiv.org/pdf/2304.01373.pdf; https://arxiv.org/pdf/2101.00027.pdf; https://arxiv.org/pdf/2201.07311.pdf,8,the_pile,18283,4282.445741,,https://huggingface.co/EleutherAI/pythia-1b,"The Pythia Scaling Suite is a collection of models developed to facilitate 
interpretability research (see paper). 
It contains two sets of eight models of sizes 
70M, 160M, 410M, 1B, 1.4B, 2.8B, 6.9B, and 12B. For each size, there are two 
models: one trained on the Pile, and one trained on the Pile after the dataset 
has been globally deduplicated. All 8 model sizes are trained on the exact 
same data, in the exact same order. We also provide 154 intermediate 
checkpoints per model, hosted on Hugging Face as branches.; The Pythia model suite was deliberately designed to promote scientific 
research on large language models, especially interpretability research. 
Despite not centering downstream performance as a design goal, we find the 
models match or exceed the performance of 
similar and same-sized models, such as those in the OPT and GPT-Neo suites.; Previously, we released an early version of the Pythia suite to the public. 
However, we decided to retrain the model suite to address a few hyperparameter 
discrepancies. This model card lists the changes; 
see appendix B in the Pythia paper for further discussion. We found no 
difference in benchmark performance between the two Pythia versions. 
The old models are 
still available, but we 
suggest the retrained suite if you are just starting to use Pythia.
This is the current release.; Please note that all models in the Pythia suite were renamed in January 
2023. For clarity, a table 
comparing the old and new names is provided in this model card, together 
with exact parameter counts.; The primary intended use of Pythia is research on the behavior, functionality, 
and limitations of large language models. This suite is intended to provide 
a controlled setting for performing scientific experiments. We also provide 
154 checkpoints per model: initial step0, 10 log-spaced checkpoints 
step{1,2,4...512}, and 143 evenly-spaced checkpoints from step1000 to 
step143000. These checkpoints are hosted on Hugging Face as branches. Note 
that branch 143000 corresponds exactly to the model checkpoint on the main 
branch of each model.",Natural Language Processing
llama-65b-4bit,,Transformers,English,,,69,,0,62781.45282,,https://huggingface.co/maderix/llama-65b-4bit,"Converted with https://github.com/qwopqwop200/GPTQ-for-LLaMa 
All models tested on A100-80G
*Conversion may require lot of RAM, LLaMA-7b takes ~12 GB, 13b around 21 GB, 30b around 62 and 65b takes more than 120 GB of RAM. ; Installation instructions as mentioned in above repo:; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
starencoder,,PyTorch; Transformers,code,,https://arxiv.org/pdf/1810.04805.pdf,18,,4553,0,,https://huggingface.co/bigcode/starencoder,"This repository is publicly accessible, but
			you have to accept the conditions to access its files and content.
		; Please read the BigCode OpenRAIL-M license agreement before accepting it.
  ; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		; This is an encoder-only model (i.e., bi-directionally self-attentive Transformers) trained on The Stack dataset.; We leveraged the :",
pix2struct-ai2d-base,Visual Question Answering,PyTorch; Transformers,5 languages,apache-2.0,https://arxiv.org/pdf/2210.03347.pdf,21,,1126,569.1191047,2,https://huggingface.co/google/pix2struct-ai2d-base,"; Pix2Struct is an image encoder - text decoder model that is trained on image-text pairs for various tasks, including image captionning and visual question answering. The full list of available models can be found on the Table 1 of the paper:; ; The abstract of the model states that: ; Visually-situated language is ubiquitous¡ªsources range from textbooks with diagrams to web pages with images and tables, to mobile apps with buttons and
forms. Perhaps due to this diversity, previous work has typically relied on domainspecific recipes with limited sharing of the underlying data, model architectures,
and objectives. We present Pix2Struct, a pretrained image-to-text model for
purely visual language understanding, which can be finetuned on tasks containing visually-situated language. Pix2Struct is pretrained by learning to parse
masked screenshots of web pages into simplified HTML. The web, with its richness of visual elements cleanly reflected in the HTML structure, provides a large
source of pretraining data well suited to the diversity of downstream tasks. Intuitively, this objective subsumes common pretraining signals such as OCR, language modeling, image captioning. In addition to the novel pretraining strategy,
we introduce a variable-resolution input representation and a more flexible integration of language and vision inputs, where language prompts such as questions
are rendered directly on top of the input image. For the first time, we show that a
single pretrained model can achieve state-of-the-art results in six out of nine tasks
across four domains: documents, illustrations, user interfaces, and natural images.",Multimodel
alpaca-native,Text Generation,PyTorch; Transformers,,,,242,,22777,27597.51347,17,https://huggingface.co/chavinlo/alpaca-native,"This is a replica of Alpaca by Stanford' tatsu; Trained using the original instructions with a minor modification in FSDP mode; 13B: https://huggingface.co/chavinlo/alpaca-13b; 13B -> GPT4 : https://huggingface.co/chavinlo/gpt4-x-alpaca; Trained on 4xA100s for 6H
Donated by redmond.ai",Natural Language Processing
chatgpt_paraphraser_on_T5_base,Text2Text Generation,PyTorch; Transformers,English,openrail,,52,humarin/chatgpt-paraphrases,10866,895.2052085,7,https://huggingface.co/humarin/chatgpt_paraphraser_on_T5_base,"This model was trained on our ChatGPT paraphrase dataset.; This dataset is based on the Quora paraphrase question, texts from the SQUAD 2.0 and the CNN news dataset.; This model is based on the T5-base model. We used ""transfer learning"" to get our model to generate paraphrases as well as ChatGPT. Now we can say that this is one of the best paraphrases of the Hugging Face.; Kaggle link; Input:",Natural Language Processing
swissbert,Fill-Mask,PyTorch; Transformers,5 languages,cc-by-nc-4.0,https://arxiv.org/pdf/2303.13310.pdf,11,,403,613.1679663,,https://huggingface.co/ZurichNLP/swissbert,"SwissBERT is a masked language model for processing Switzerland-related text. It has been trained on more than 21 million Swiss news articles retrieved from Swissdox@LiRI.; SwissBERT is based on X-MOD, which has been pre-trained with language adapters in 81 languages.
For SwissBERT we trained adapters for the national languages of Switzerland ¨C German, French, Italian, and Romansh Grischun.
In addition, we used a Switzerland-specific subword vocabulary.; The pre-training code and usage examples are available here. We also release a version that was fine-tuned on named entity recognition (NER): https://huggingface.co/ZurichNLP/swissbert-ner; SwissBERT contains the following language adapters:; Attribution-NonCommercial 4.0 International (CC BY-NC 4.0).",Natural Language Processing
chatglm-6b-int4,,PyTorch; Transformers,Chinese; English,,,354,,37794,3986.204555,60,https://huggingface.co/THUDM/chatglm-6b-int4,"
    ? Join our Slack and WeChat
; ChatGLM-6B ÊÇÒ»¸ö¿ªÔ´µÄ¡¢Ö§³ÖÖÐÓ¢Ë«ÓïÎÊ´ðµÄ¶Ô»°ÓïÑÔÄ£ÐÍ£¬»ùÓÚ General Language Model (GLM) ¼Ü¹¹£¬¾ßÓÐ 62 ÒÚ²ÎÊý¡£½áºÏÄ£ÐÍÁ¿»¯¼¼Êõ£¬ÓÃ»§¿ÉÒÔÔÚÏû·Ñ¼¶µÄÏÔ¿¨ÉÏ½øÐÐ±¾µØ²¿Êð£¨INT4 Á¿»¯¼¶±ðÏÂ×îµÍÖ»Ðè 6GB ÏÔ´æ£©¡£ChatGLM-6B Ê¹ÓÃÁËºÍ ChatGLM ÏàÍ¬µÄ¼¼Êõ£¬Õë¶ÔÖÐÎÄÎÊ´ðºÍ¶Ô»°½øÐÐÁËÓÅ»¯¡£¾­¹ýÔ¼ 1T ±êÊ¶·ûµÄÖÐÓ¢Ë«ÓïÑµÁ·£¬¸¨ÒÔ¼à¶½Î¢µ÷¡¢·´À¡×ÔÖú¡¢ÈËÀà·´À¡Ç¿»¯Ñ§Ï°µÈ¼¼ÊõµÄ¼Ó³Ö£¬62 ÒÚ²ÎÊýµÄ ChatGLM-6B ÒÑ¾­ÄÜÉú³ÉÏàµ±·ûºÏÈËÀàÆ«ºÃµÄ»Ø´ð¡£; ChatGLM-6B-INT4 ÊÇ ChatGLM-6B Á¿»¯ºóµÄÄ£ÐÍÈ¨ÖØ¡£¾ßÌåµÄ£¬ChatGLM-6B-INT4 ¶Ô ChatGLM-6B ÖÐµÄ 28 ¸ö GLM Block ½øÐÐÁË INT4 Á¿»¯£¬Ã»ÓÐ¶Ô Embedding ºÍ LM Head ½øÐÐÁ¿»¯¡£Á¿»¯ºóµÄÄ£ÐÍÀíÂÛÉÏ 6G ÏÔ´æ£¨Ê¹ÓÃ CPU ¼´ÄÚ´æ£©¼´¿ÉÍÆÀí£¬¾ßÓÐÔÚÇ¶ÈëÊ½Éè±¸£¨ÈçÊ÷Ý®ÅÉ£©ÉÏÔËÐÐµÄ¿ÉÄÜ¡£; ÔÚ CPU ÉÏÔËÐÐÊ±£¬»á¸ù¾ÝÓ²¼þ×Ô¶¯±àÒë CPU Kernel £¬ÇëÈ·±£ÒÑ°²×° GCC ºÍ OpenMP £¨LinuxÒ»°ãÒÑ°²×°£¬¶ÔÓÚWindowsÔòÐèÊÖ¶¯°²×°£©£¬ÒÔ»ñµÃ×î¼Ñ²¢ÐÐ¼ÆËãÄÜÁ¦¡£; ¿ÉÒÔÍ¨¹ýÈçÏÂ´úÂëµ÷ÓÃ ChatGLM-6B Ä£ÐÍÀ´Éú³É¶Ô»°£º",
ClinicalBERT,Fill-Mask,PyTorch; Transformers,,,,32,,16219,542.9775732,3,https://huggingface.co/medicalai/ClinicalBERT,"This model card describes the ClinicalBERT model, which was trained on a large multicenter dataset with a large corpus of 1.2B words of diverse diseases we constructed.
We then utilized a large-scale corpus of EHRs from over 3 million patient records to fine tune the base language model.; The ClinicalBERT model was trained on a large multicenter dataset with a large corpus of 1.2B words of diverse diseases we constructed.; The ClinicalBERT was initialized from BERT. Then the training followed the principle of masked language model, in which given a piece of text, we randomly replace some tokens by MASKs, 
special tokens for masking, and then require the model to predict the original tokens via contextual text. ; We used a batch size of 32, a maximum sequence length of 256, and a learning rate of 5e-5 for pre-training our models. ; Load the model via the transformers library:",Natural Language Processing
stable-diffusion-2-1-unclip,Text-to-Image,Diffusers,,openrail++,https://arxiv.org/pdf/2112.10752.pdf; https://arxiv.org/pdf/1910.09700.pdf,189,,23667,14470.22676,29,https://huggingface.co/stabilityai/stable-diffusion-2-1-unclip,"This model card focuses on the model associated with the Stable Diffusion v2-1 model, codebase available here.; This stable-diffusion-2-1-unclip is a finetuned version of Stable Diffusion 2.1, modified to accept (noisy) CLIP image embedding in addition to the text prompt, and can be used to create image variations (Examples) or can be chained with text-to-image CLIP priors. The amount of noise added to the image embedding can be specified via the noise_level (0 means no noise, 1000 full noise).; Developed by: Robin Rombach, Patrick Esser; Model type: Diffusion-based text-to-image generation model; Language(s): English",Multimodel
kl-f8-anime2.vae,,,,creativeml-openrail-m,,3,,0,0,,https://huggingface.co/Bingsu/kl-f8-anime2.vae,"This repository is publicly accessible, but
			you have to accept the conditions to access its files and content.
		; AI ???? ????.; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		; AI ????? User Access requests ??? ???? ?? ?? ??; ?? ???? ???? ???? ???.",
IF-II-L-v1.0,Text-to-Image,PyTorch; Diffusers,,deepfloyd-if-license,https://arxiv.org/pdf/2205.11487.pdf; https://arxiv.org/pdf/2110.02861.pdf,39,,12944,0,18,https://huggingface.co/DeepFloyd/IF-II-L-v1.0,"This repository is publicly accessible, but
			you have to accept the conditions to access its files and content.
		; DeepFloyd LICENSE AGREEMENTThis License Agreement (as may be amended in accordance with this License Agreement, ¡°License¡±), between you, or your employer or other entity (if you are entering into this agreement on behalf of your employer or other entity) (¡°Licensee¡± or ¡°you¡±) and Stability AI Ltd.. (¡°Stability AI¡± or ¡°we¡±) applies to your use of any computer program, algorithm, source code, object code, or software that is made available by Stability AI under this License (¡°Software¡±) and any specifications, manuals, documentation, and other written information provided by Stability AI related to the Software (¡°Documentation¡±).By clicking ¡°I Accept¡± below or by using the Software, you agree to the terms of this License. If you do not agree to this License, then you do not have any rights to use the Software or Documentation (collectively, the ¡°Software Products¡±), and you must immediately cease using the Software Products. If you are agreeing to be bound by the terms of this License on behalf of your employer or other entity, you represent and warrant to Stability AI that you have full legal authority to bind your employer or such entity to this License. If you do not have the requisite authority, you may not accept the License or access the Software Products on behalf of your employer or other entity.; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		; DeepFloyd-IF is a pixel-based text-to-image triple-cascaded diffusion model, that can generate pictures with new state-of-the-art for photorealism and language understanding. The result is a highly efficient model that outperforms current state-of-the-art models, achieving a zero-shot FID-30K score of 6.66 on the COCO dataset.; Inspired by Photorealistic Text-to-Image Diffusion Models with Deep Language Understanding",Multimodel
Alpaca-native-4bit-ggml,,,,other,,180,,0,4311.224479,,https://huggingface.co/Sosaka/Alpaca-native-4bit-ggml,"This is a https://huggingface.co/chavinlo/alpaca-native converted in OLD GGML (alpaca.cpp) format and quantized to 4 bits to run on CPU with 5GB of RAM.; For any additional information, please visit these repos:; alpaca.cpp repo: https://github.com/antimatter15/alpaca.cpp; llama.cpp repo: https://github.com/ggerganov/llama.cpp; original facebook llama(NOT ggml) repo: https://github.com/facebookresearch/llama",
NGMix,,,,,,10,,0,37934.60145,,https://huggingface.co/Nyangyu/NGMix,"No model card; New: Create and edit this model card directly on the website!; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
negative,,,,,,14,,0,0.390449219,37,https://huggingface.co/embed/negative,"No model card; New: Create and edit this model card directly on the website!; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
GroundingDINO,,,English,apache-2.0,https://arxiv.org/pdf/2303.05499.pdf,45,detection-datasets/coco; conceptual_captions,0,1635.120342,27,https://huggingface.co/ShilongLiu/GroundingDINO,"?Paper | 
??Video |
?Demo on Colab | 
?Demo on HF (Coming soon) ; If you find our work helpful for your research, please consider citing the following BibTeX entry.   ; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
gpt4all-lora,,,English,gpl-3.0,,203,nomic-ai/gpt4all_prompt_generations,0,8.413138428,,https://huggingface.co/nomic-ai/gpt4all-lora,"An autoregressive transformer trained on data curated using Atlas.
This model is trained with four full epochs of training, while the related gpt4all-lora-epoch-3 model is trained with three.
Replication instructions and data: https://github.com/nomic-ai/gpt4all; Developed by: Nomic AI; Model Type: An auto-regressive language model based on the transformer architecture and fine-tuned.; Languages: English; License: GPL-3.0",
pygmalion-6b_dev-4bit-128g,Text Generation,Transformers,English,creativeml-openrail-m,,111,,2657,4058.412906,,https://huggingface.co/mayaeary/pygmalion-6b_dev-4bit-128g,GPTQ quantization of https://huggingface.co/PygmalionAI/pygmalion-6b/commit/30e2405100eac6bd53f75964cc7345eeafd19f7d; Using this repository: https://github.com/mayaeary/GPTQ-for-LLaMa/tree/gptj-v2; Command: ; Inference API has been turned off for this model.,Natural Language Processing
alpaca-7b-native-enhanced,Text Generation,Adapter Transformers,English,wtfpl,,106,,0,50493.44255,,https://huggingface.co/Pi3141/alpaca-7b-native-enhanced,"Use this command to run with llama.cpp; contents of prompts/alpacanativeenhanced.txt should be; Original model https://huggingface.co/8bit-coder/alpaca-7b-nativeEnhanced; Inference API does not yet support adapter-transformers models for this pipeline type.
							",Natural Language Processing
galpaca-30b,Text Generation,PyTorch; Transformers,,cc-by-nc-4.0,,54,tatsu-lab/alpaca,60,62138.53498,,https://huggingface.co/GeorgiaTechResearchInstitute/galpaca-30b,"GALACTICA 30B fine-tuned on the Alpaca dataset.; The model card from the original Galactica repo can be found here, and the original paper here.; The dataset card for Alpaca can be found here, and the project homepage here.
  The Alpaca dataset was collected with a modified version of the Self-Instruct Framework, and was built using OpenAI's text-davinci-003 model. As such it is subject to OpenAI's terms of service.; The GALACTICA models are trained on a large-scale scientific corpus and are designed to perform scientific tasks.
The Alpaca dataset is a set of 52k instruct-response pairs designed to enhace the instruction following capabilites of pre-trained language models.; The GALACTICA model card specifies that the primary indended users of the GALACTICA models are researchers studying language models applied to the scientific domain, and it cautions against production use of GALACTICA without safeguards due to the potential for the model to produce inaccurate information.
The original GALACTICA models are available under a non-commercial CC BY-NC 4.0 license, and the GALPACA model is additionally subject to the OpenAI Terms of Service.",Natural Language Processing
medalpaca-lora-30b-8bit,Text Generation,Transformers,English,cc,https://arxiv.org/pdf/2106.09685.pdf; https://arxiv.org/pdf/2303.14070.pdf,12,,0,205.0044625,,https://huggingface.co/medalpaca/medalpaca-lora-30b-8bit,"Model Description ; medalpaca-lora-30b-8bit is a large language model specifically fine-tuned for medical domain tasks. 
It is based on LLaMA (Large Language Model Meta AI) and contains 7 billion parameters. 
The primary goal of this model is to improve question-answering and medical dialogue tasks.
It was trained using LoRA and quantized, to reduce memory footprint. ; The training data for this project was sourced from various resources. 
Firstly, we used Anki flashcards to automatically generate questions, 
from the front of the cards and anwers from the back of the card. 
Secondly, we generated medical question-answer pairs from Wikidoc. 
We extracted paragraphs with relevant headings, and used Chat-GPT 3.5 
to generate questions from the headings and using the corresponding paragraphs 
as answers. This dataset is still under development and we believe 
that approximately 70% of these question answer pairs are factual correct. 
Thirdly, we used StackExchange to extract question-answer pairs, taking the 
top-rated question from five categories: Academia, Bioinformatics, Biology, 
Fitness, and Health. Additionally, we used a dataset from ChatDoctor 
consisting of 200,000 question-answer pairs, available at https://github.com/Kent0n-Li/ChatDoctor.; The model may not perform effectively outside the scope of the medical domain.
The training data primarily targets the knowledge level of medical students, 
which may result in limitations when addressing the needs of board-certified physicians.
The model has not been tested in real-world applications, so its efficacy and accuracy are currently unknown. 
It should never be used as a substitute for a doctor's opinion and must be treated as a research tool only.",Natural Language Processing
instruct-igel-001,Text Generation,PyTorch; Transformers,German,,,37,,1962,13229.98629,4,https://huggingface.co/philschmid/instruct-igel-001,"IGEL is an LLM model family developed for German. The first version of IGEL is built on top?BigScience BLOOM,?adapted to?German from Malte Ostendorff. IGEL is designed to provide accurate and reliable language understanding capabilities for a wide range of natural language understanding tasks, including sentiment analysis, language translation, and question answering.; The IGEL family currently includes?instruct-igel-001?and?chat-igel-001?(coming soon).; LoRA tuned BLOOM-CLP German (6.4B parameters) with merged weights. The 001 was designed as a naive test to determine whether it is possible to create an german instruction-tuned model using a small, undertrained LLM and a naive translated dataset. The goal of this test was to explore the potential of the BLOOM architecture for language modeling tasks that require instruction-based responses.; To achieve this goal, we used a pre-trained LLM model with limited training, and fine-tuned it using a dataset of naive translations of instruction-based content. The dataset was created by taking instructions in English and translating them into German using an automated translation tool. While this approach may introduce errors in the translated content, we wanted to test whether the model could still learn to generate instruction-based responses in a variety of languages.; instruct-igel-001 is trained on naive translated instruction datasets, without much post-processing. ",Natural Language Processing
llama-7b-se-rl-peft,,PyTorch; Transformers,English,bigscience-openrail-m,,93,lvwerra/stack-exchange-paired,0,34.11359489,2,https://huggingface.co/trl-lib/llama-7b-se-rl-peft,"; Adapter weights of a Reinforcement Learning fine-tuned model based on the LLaMA model (see Meta's LLaMA release for the original LLaMA model). 
The model is designed to generate human-like responses to questions in Stack Exchange domains of programming, mathematics, physics, and more.
For more info check out the blog post and github example.; Developed by: Hugging Face; Model type: An auto-regressive language model based on the transformer architecture, and fine-tuned with Stack Exchange datasets. ; Languages: Predominantly English, with additional data from languages with the following ISO codes: ",
matcha-chartqa,Visual Question Answering,PyTorch; Transformers,5 languages,apache-2.0,https://arxiv.org/pdf/2212.09662.pdf,11,,799,1161.236487,4,https://huggingface.co/google/matcha-chartqa,"; This model is the MatCha model, fine-tuned on Chart2text-pew dataset. ; The abstract of the paper states that: ; Visual language data such as plots, charts, and infographics are ubiquitous in the human world. However, state-of-the-art visionlanguage models do not perform well on these data. We propose MATCHA (Math reasoning and Chart derendering pretraining) to enhance visual language models¡¯ capabilities jointly modeling charts/plots and language data. Specifically we propose several pretraining tasks that cover plot deconstruction and numerical reasoning which are the key capabilities in visual language modeling. We perform the MATCHA pretraining starting from Pix2Struct, a recently proposed imageto-text visual language model. On standard benchmarks such as PlotQA and ChartQA, MATCHA model outperforms state-of-the-art methods by as much as nearly 20%. We also examine how well MATCHA pretraining transfers to domains such as screenshot, textbook diagrams, and document figures and observe overall improvement, verifying the usefulness of MATCHA pretraining on broader visual language tasks.; You should ask specific questions to the model in order to get consistent generations. Here we are asking the model whether the sum of values that are in a chart are greater than the largest value.",Multimodel
llama-13b,Text Generation,PyTorch; Safetensors; Transformers,,other,,102,,37075,53311.84752,2,https://huggingface.co/huggyllama/llama-13b,"This contains the weights for the LLaMA-13b model. This model is under a non-commercial license (see the LICENSE file).
You should only use this repository if you have been granted access to the model by filling out this form but either lost your copy of the weights or got some trouble converting them to the Transformers format.",Natural Language Processing
ImageReward,Text-to-Image,,English,apache-2.0,https://arxiv.org/pdf/2304.05977.pdf,22,,0,3042.048666,2,https://huggingface.co/THUDM/ImageReward,"
Github Repo ? ? Twitter ? ? Paper 
; ImageReward: Learning and Evaluating Human Preferences for Text-to-Image Generation; ImageReward is the first general-purpose text-to-image human preference RM which is trained on in total 137k pairs of
expert comparisons, based on text prompts and corresponding model outputs from DiffusionDB. We demonstrate that
ImageReward outperforms existing text-image scoring methods, such as CLIP, Aesthetic, and BLIP, in terms of
understanding human preference in text-to-image synthesis through extensive analysis and experiments.; ; We have integrated the whole repository to a single python package image-reward. Following the commands below to prepare the environment:",Multimodel
segment-anything,,,,apache-2.0,,53,,0,0.008212891,5,https://huggingface.co/ybelkada/segment-anything,"NEW Segment Anything now officially supported in transformers! Check out the official documentation; This repository is the mirror of the official Segment Anything repository, together with the model weights. We also provide instructions on how to easily download the model weights.; Meta AI Research, FAIR; Alexander Kirillov, Eric Mintun, Nikhila Ravi, Hanzi Mao, Chloe Rolland, Laura Gustafson, Tete Xiao, Spencer Whitehead, Alex Berg, Wan-Yen Lo, Piotr Dollar, Ross Girshick; [Paper] [Project] [Demo] [Dataset] [Blog] [BibTeX]",
saiga_7b_lora,Conversational,,Russian,cc-by-4.0,,21,IlyaGusev/ru_turbo_alpaca; IlyaGusev/ru_turbo_saiga; IlyaGusev/ru_sharegpt_cleaned; IlyaGusev/oasst1_ru_main_branch; IlyaGusev/ru_turbo_alpaca_evol_instruct; lksy/ru_instruct_gpt4,0,67.70327923,,https://huggingface.co/IlyaGusev/saiga_7b_lora,Based on LLaMA 7B.; Colab: link; llama.cpp version: link; Training code: link; Examples:,Natural Language Processing
rwkv-4-novel,Text Generation,PyTorch,English,apache-2.0,,48,the_pile,0,57692.16202,1,https://huggingface.co/BlinkDL/rwkv-4-novel,"These are RWKV-4-Pile models finetuned on novels.; Currently I am doing it for Chn novels. More languages to come.; Use https://github.com/BlinkDL/ChatRWKV to run them.; See https://github.com/BlinkDL/RWKV-LM for details on the RWKV Language Model (100% RNN).; Unable to determine this model¡¯s library. Check the
								docs 
.
							",Natural Language Processing
hololivemix-so-vits-svc-4.0,,,,creativeml-openrail-m,,68,,0,0.002218742,,https://huggingface.co/megaaziib/hololivemix-so-vits-svc-4.0,"Tolong Credit nama saya (Romario Martinus) atau username saya (megaaziib) kalau pake voice model ini! 
Credit me if you use my model 
For use with so-vits-svc-fork repo  
Use this tutorial on Youtube for guidelines  
Or simply just run on Colab without setup 
Support me: 
Paypal: https://paypal.me/romramgames 
Patreon: https://www.patreon.com/romariomartinus 
ko-fi: https://ko-fi.com/megaaziib 
Saweria: https://saweria.co/romariomartinus ; the colab is not made by me so don't ask question ; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
stablelm-base-alpha-7b,Text Generation,PyTorch; Transformers,English,cc-by-sa-4.0,,206,,1582,32514.137,7,https://huggingface.co/stabilityai/stablelm-base-alpha-7b,StableLM-Base-Alpha is a suite of 3B and 7B parameter decoder-only language models pre-trained on a diverse collection of English datasets with a sequence length of 4096 to push beyond the context window limitations of existing open-source language models.; Get started generating text with StableLM-Base-Alpha by using the following code snippet:; Developed by: Stability AI; Model type: StableLM-Base-Alpha models are auto-regressive language models based on the NeoX transformer architecture.; Language(s): English,Natural Language Processing
PMC_LLAMA_7B,Text Generation,PyTorch; Transformers,,apache-2.0,,35,allenai/s2orc,2321,27597.31758,1,https://huggingface.co/chaoyi-wu/PMC_LLAMA_7B,"This repo contains PMC_LLaMA_7B, which is LLaMA-7b finetuned on the PMC papers in S2ORC dataset.; The model was trained with the following hyperparameters:; Each epoch we sample 512 tokens per paper for training.; The model can be loaded as following:",Natural Language Processing
saiga_13b_lora,Conversational,,Russian,cc-by-4.0,,10,IlyaGusev/ru_turbo_alpaca; IlyaGusev/ru_turbo_saiga; IlyaGusev/oasst1_ru_main_branch; IlyaGusev/ru_sharegpt_cleaned; IlyaGusev/ru_turbo_alpaca_evol_instruct; lksy/ru_instruct_gpt4,0,105.5017298,1,https://huggingface.co/IlyaGusev/saiga_13b_lora,Based on LLaMA 13B.; llama.cpp version: link; Colab: link; Training code: link; Examples:,Natural Language Processing
control_v11p_sd15_canny,Image-to-Image,Diffusers,,openrail,https://arxiv.org/pdf/2302.05543.pdf,18,,147906,4415.678157,51,https://huggingface.co/lllyasviel/control_v11p_sd15_canny,"Controlnet v1.1 is the successor model of Controlnet v1.0
and was released in lllyasviel/ControlNet-v1-1 by Lvmin Zhang.; This checkpoint is a conversion of the original checkpoint into diffusers format.
It can be used in combination with Stable Diffusion, such as runwayml/stable-diffusion-v1-5.; For more details, please also have a look at the ? Diffusers docs.; ControlNet is a neural network structure to control diffusion models by adding extra conditions. ; ",Computer Vision
control_v11p_sd15_openpose,Image-to-Image,Diffusers,,openrail,https://arxiv.org/pdf/2302.05543.pdf,11,,439110,4415.677681,49,https://huggingface.co/lllyasviel/control_v11p_sd15_openpose,"Controlnet v1.1 is the successor model of Controlnet v1.0
and was released in lllyasviel/ControlNet-v1-1 by Lvmin Zhang.; This checkpoint is a conversion of the original checkpoint into diffusers format.
It can be used in combination with Stable Diffusion, such as runwayml/stable-diffusion-v1-5.; For more details, please also have a look at the ? Diffusers docs.; ControlNet is a neural network structure to control diffusion models by adding extra conditions. ; ",Computer Vision
OPT-30B-Erebus-4bit-128g,Text Generation,PyTorch; Transformers,English,other,,16,amilkov/literotica,202,34715.09156,,https://huggingface.co/Zicara/OPT-30B-Erebus-4bit-128g,"Warning: THIS model is NOT suitable for use by minors. The model will output X-rated content.; This is a 4-bit GPTQ quantization of OPT-30B-Erebus, original model:
https://huggingface.co/KoboldAI/OPT-30B-Erebus; Quantized with: https://github.com/0cc4m/GPTQ-for-LLaMa; Output generated in 54.23 seconds (0.87 tokens/s, 47 tokens, context 44, seed 593020441); https://github.com/oobabooga/text-generation-webui",Natural Language Processing
flan-alpaca-gpt4-xl,Text2Text Generation,PyTorch; Safetensors; Transformers,,apache-2.0,https://arxiv.org/pdf/2306.04757.pdf; https://arxiv.org/pdf/2210.11416.pdf,31,tatsu-lab/alpaca,40065,23350.50528,,https://huggingface.co/declare-lab/flan-alpaca-gpt4-xl,"? We developed Flacuna by fine-tuning Vicuna-13B on the Flan collection. Flacuna is better than Vicuna at problem-solving. Access the model here https://huggingface.co/declare-lab/flacuna-13b-v1.0.; ? Curious to know the performance of ? ? Flan-Alpaca on large-scale LLM evaluation benchmark, InstructEval? Read our paper https://arxiv.org/pdf/2306.04757.pdf. We evaluated more than 10 open-source instruction-tuned LLMs belonging to various LLM families including Pythia, LLaMA, T5, UL2, OPT, and Mosaic. Codes and datasets: https://github.com/declare-lab/instruct-eval; ? FLAN-T5 is also useful in text-to-audio generation. Find our work at https://github.com/declare-lab/tango if you are interested.; Our repository contains code for extending the Stanford Alpaca
synthetic instruction tuning to existing instruction-tuned models such as Flan-T5.
We have a live interactive demo thanks to Joao Gante!
We are also benchmarking many instruction-tuned models at declare-lab/flan-eval.
Our pretrained models are fully available on HuggingFace ? :; *recommended for better performance",Natural Language Processing
ChatGalRWKV,,,,unlicense,,17,,0,99423.923,1,https://huggingface.co/Synthia/ChatGalRWKV,"¹ØÓÚÏîÄ¿µÄÃû×Ö£ºchat¾ÍÊÇÃ¨£¨·¨Óï£©£¬gal¾ÍÊÇÄï£¨Ó¢Óï£©¡£; ±¾ÏîÄ¿»ùÓÚRWKV£¬ËüÊÇÒ»ÏµÁÐ´ÓÔ¤ÑµÁ·Êý¾Ý¡¢ÑµÁ·´úÂë¡¢ÍÆÀí´úÂëµ½Ä£ÐÍÈ¨ÖØ¶¼ÍêÈ«¿ªÔ´µÄ´óÓïÑÔÄ£ÐÍ£¬²¢ÇÒÓë»ùÓÚtransformerµÄÄ£ÐÍÏà±ÈÓÐÖî¶àÓÅÊÆ¡£; ¿ÉÒÔÊ¹ÓÃColab½Å±¾×Ô½¨·þÎñÔËÐÐ×î½üÄ£ÐÍ¡£; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
vicuna-13B-1.1-Chinese-GPTQ-4bit-128g,Text Generation,Transformers,,,,19,,69,8010.675108,,https://huggingface.co/jfiekdjdk/vicuna-13B-1.1-Chinese-GPTQ-4bit-128g,"This model was obtained from following repo:; Merged using sciprts from: https://github.com/ymcui/Chinese-LLaMA-Alpaca; Then quanized using following command (no act order):; Can confirm model output normal text, but question-answering quality is unknown; Model type:
Vicuna is an open-source chatbot trained by fine-tuning LLaMA on user-shared conversations collected from ShareGPT.
It is an auto-regressive language model, based on the transformer architecture.",Natural Language Processing
chilled_remix,Text-to-Image,Diffusers,Japanese,creativeml-openrail-m,,176,,0,4362.281387,,https://huggingface.co/sazyou-roukaku/chilled_remix,"¡¾¸æÖª¡¿chilled_remix¼°¤Óreversemix¤Ï2023Äê5ÔÂ21ÈÕ¤ËVersionä¸ü¤òÐÐ¤¤¡¢v2¤ØÒÆÐÐ¤¤¤¿¤·¤Þ¤·¤¿¡£°é¤¤v1¤ÏÏ÷³ýÖÂ¤·¤Þ¤·¤¿¡£¤Ê¤ª¼È¤ËDLg¤ß¤Î·½¤ÏÒý¤­¾A¤­¡¢v1¤ò¤´ÀûÓÃ¤¤¤¿¤À¤¯¤³¤È¤Ïî}¤´¤¶¤¤¤Þ¤»¤ó¡£ ; License:CreativeML Open RAIL-M
Additional Copyright: sazyou_roukaku (TwitterID @sazyou_roukaku) as of May 21, 2023; ¤³¤Î¥â¥Ç¥ë¤Ï¡ºCreativeML Open RAIL-M¡»¤ÇLicense¤½¤Î¤â¤Î¤Ëä¸ü¤Ï¤¢¤ê¤Þ¤»¤ó¡£
¤·¤«¤·×·¼ÓÖø×÷Õß¤È¤·¤Ææi³ÇÀÉ¹ù¤ÎÃûÇ°¤¬×·¼Ó¤µ¤ì¤Æ¤¤¤Þ¤¹¡£
¤·¤«¤·×·¼ÓÖø×÷Õß¤È¤·¤Æ×ô³ÇÀÉ»­¤ÎÃûÇ°¤¬×·¼Ó¤µ¤ì¤Æ¤¤¤Þ¤¹¡£(6/10 Twitter¥Í©`¥àä¸ü¤Ë°é¤¤¡¢±íÓä¸ü¡£LicenseÄÚ¤Ïsazyou_roukaku¤Îéä¸ü¤Ê¤·)
¤Ê¤ª¡ºCreativeML Open RAIL-M¡»¤ËÓÝd¤µ¤ì¤Æ¤¤¤ëÍ¨¤ê¡¢
±¾¥â¥Ç¥ë¤òÊ¹ÓÃ¤·¤Æ¤ÎÉú³ÉÎï¤Ëév¤·¤Æ¤ÏLicense¤ÎÊ¹ÓÃÖÆÏÞA¤ÎÊÂÀý¤ò³ý¤­¡¢µ±·½¤ÏÒ»ÇÐévÓëÖÂ¤·¤Þ¤»¤ó¡£
·¸×ïÄ¿µÄÀûÓÃ¤äÒ½¯ÓÃ»­Ïñ¤Ê¤ÉÌØ¶¨éTµÄ¤ÊÓÃÍ¾¤Ç¤ÎÀûÓÃ¤ÏÊ¹ÓÃÖÆÏÞA¤Ç½ûÖ¹¤µ¤ì¤Æ¤¤¤Þ¤¹¡£
±Ø¤º´_ÕJ¤·¤´ÀûÓÃ¤¯¤À¤µ¤¤¡£
¤Þ¤¿µ±·½¤ÏÒ»ÇÐØÈÎ¤ò³Ö¤Á¤Þ¤»¤ó¡£ÃâØ¤µ¤ì¤Æ¤¤¤ë¤³¤È¤ò¤´ÁË³Ð¤ÎÉÏ¡¢¤´Ê¹ÓÃ¤¯¤À¤µ¤¤¡£; ÍÆXÔO¶¨?¥â¥Ç¥ë¤Îß`¤¤?¥×¥í¥ó¥×¥È ;  Version2¤Ïfp16¤ÇVAE¤­Þz¤ß°æ¤Î¤ßÅä²¼¤È¤¤¤¿¤·¤Þ¤·¤¿¡£ »ù±¾µÄ¤Ë¤Ïchilled_remix¤ò¥á¥¤¥ó¤È¤·¡¢ºÃ¤ß¤ËºÏ¤ï¤»¤Æreversemix¤âÊÓ¤È¤¤¤¦¤Î¤¬¥¹¥¿¥ó¥¹¤Ç¤¹¡£ ¡ùchilled_remix¤Ïchilled_re-generic¥æ©`¥¶©`¤ò¤¢¤ëòXÓ¤Ç¤Î»ìÂÒ¤«¤éÊØ¤ë¤¿¤á¤ËÉú¤ß³ö¤µ¤ì¤¿¥â¥Ç¥ë¤Ç¤¹¡£ ÐÔÙ|ÉÏÈ«¤Æ¤Î¥æ©`¥¶©`³öÁ¦¤Ëê¤Ç¤­¤Ê¤«¤Ã¤¿é¡¢¥µ¥Ö¤È¤·¤Æreversemix¤¬×÷¤é¤ì¤Þ¤·¤¿¡£ reversemix¤ÏLORA¤Ê¤·¤Ç¤âî¤Î¥»¥ß¥ê¥¢¥ë¸Ð¤Ï±¡¤¤¤Ç¤¹¤¬¡¢È«ÌåµÄ¤ËÓ×¤¯¤Ê¤ëAÏò¤¬¤¢¤ê¤Þ¤¹¡£  ",Multimodel
stablelm-tuned-alpha-7b,Text Generation,PyTorch; Transformers,English,cc-by-nc-sa-4.0,,348,dmayhem93/ChatCombined; tatsu-lab/alpaca; nomic-ai/gpt4all_prompt_generations; Dahoas/full-hh-rlhf; jeffwan/sharegpt_vicuna; HuggingFaceH4/databricks_dolly_15k,40884,32514.14015,159,https://huggingface.co/stabilityai/stablelm-tuned-alpha-7b,"StableLM-Tuned-Alpha is a suite of 3B and 7B parameter decoder-only language models built on top of the StableLM-Base-Alpha models and further fine-tuned on various chat and instruction-following datasets.; Get started chatting with StableLM-Tuned-Alpha by using the following code snippet:; StableLM Tuned should be used with prompts formatted to <|SYSTEM|>...<|USER|>...<|ASSISTANT|>...
The system prompt is; StableLM-Tuned-Alpha models are fine-tuned on a combination of five datasets:
Alpaca, a dataset of 52,000 instructions and demonstrations generated by OpenAI's text-davinci-003 engine.
GPT4All Prompt Generations, which consists of 400k prompts and responses generated by GPT-4;
Anthropic HH, made up of preferences about AI assistant helpfulness and harmlessness;
DataBricks Dolly, comprising 15k instruction/responses generated by Databricks employees in capability domains from the InstructGPT paper, including brainstorming, classification, closed QA, generation, information extraction, open QA and summarization;
and ShareGPT Vicuna (English subset), a dataset of conversations retrieved from ShareGPT.; Models are learned via supervised fine-tuning on the aforementioned datasets, trained in mixed-precision (FP16), and optimized with AdamW. We outline the following hyperparameters:",Natural Language Processing
moss-moon-003-base,Text Generation,PyTorch; Transformers,English; Chinese,agpl-3.0,https://arxiv.org/pdf/2203.13474.pdf,121,fnlp/moss-002-sft-data,1916,34389.9014,119,https://huggingface.co/fnlp/moss-moon-003-base,"MOSS is an open-sourced plugin-augmented conversational language model. moss-moon models have 16B parameters, allowing users to perform inference on a single A100 GPU or 2 NVIDIA 3090 GPUs with FP16 precision, and on a single NVIDIA 3090 GPU with INT-4/8 precision. The base language model of MOSS was pre-trained on ~700B English, Chinese, and code tokens, including the PILE, BigQuery, BigPython, and our private Chinese corpus. The base model was then fine-tuned on multi-turn plugin-augmented conversational data. Finally, we performed preference-aware training to further improve the model.; Limitations: Due to the (relatively) small number of parameters and the autoregressive nature, MOSS is still possible to generate outputs that contain incorrect, misleading, or biased information. Please carefully check the contents generated by MOSS before you use them.; MOSS Use Cases£º; ; ",Natural Language Processing
chilloutmix_NiPrunedFp32Fix,Text-to-Image,Diffusers,English,creativeml-openrail-m,,23,,6970,0.003892021,1,https://huggingface.co/emilianJR/chilloutmix_NiPrunedFp32Fix,"Diffuser model for this SD checkpoint:
https://civitai.com/models/6424/chilloutmix; emilianJR/chilloutmix_NiPrunedFp32Fix is the HuggingFace diffuser that you can use with diffusers.StableDiffusionPipeline().; This model can be used just like any other Stable Diffusion model. For more information,
please have a look at the Stable Diffusion.; This model is open access and available to all, with a CreativeML OpenRAIL-M license further specifying rights and usage.
The CreativeML OpenRAIL License specifies: 
Please read the full license here",Multimodel
mpt-1b-redpajama-200b-dolly,Text Generation,PyTorch; Transformers,,cc-by-sa-3.0,https://arxiv.org/pdf/2302.13971.pdf; https://arxiv.org/pdf/2205.14135.pdf; https://arxiv.org/pdf/2108.12409.pdf,76,togethercomputer/RedPajama-Data-1T,2582,5378.178587,,https://huggingface.co/mosaicml/mpt-1b-redpajama-200b-dolly,"MPT-1b-RedPajama-200b-dolly is a 1.3 billion parameter decoder-only transformer pre-trained on the RedPajama dataset and subsequently fine-tuned on the Databricks Dolly instruction dataset.
The model was pre-trained for 200B tokens by sampling from the subsets of the RedPajama dataset in the same proportions as were used by the Llama series of models.
This model was trained by MosaicML and follows a modified decoder-only transformer architecture.; This model is an instruction fine-tuned version of mpt-1b-redpajama-200b. In other words, the pre-trained version of this model is mpt-1b-redpajama-200b.; April 20, 2023; Note: This model requires that trust_remote_code=True be passed to the from_pretrained method. 
This is because we use a custom model architecture MosaicGPT that is not yet part of the transformers package.
MosaicGPT includes options for many training efficiency features such as FlashAttention (Dao et al. 2022), ALIBI, QK LayerNorm, and more.; To use the optimized triton implementation of FlashAttention, you can load with attn_impl='triton' and move the model to bfloat16 like so:",Natural Language Processing
gpt4-x-alpaca-13b-roleplay-lora-4bit-v2,Text Generation,PyTorch; Transformers,,mit,,8,,58,7189.10789,1,https://huggingface.co/4bit/gpt4-x-alpaca-13b-roleplay-lora-4bit-v2,"This is a llama-13B based model that has been converted with GPTQ to 4bit quantized model.; Base Model: GPT4-x-Alpaca full fine tune by Chavinlo -> https://huggingface.co/chavinlo/gpt4-x-alpacaLORA fine tune using the Roleplay Instruct from GPT4 generated dataset -> https://github.com/teknium1/GPTeacher/tree/main/RoleplayLORA Adapter Only: https://huggingface.co/ZeusLabs/gpt4-x-alpaca-rp-lora - The v2 one -; Merged LORA to the model. ; FYI Latest HF Transformers generates BROKEN generations. 
Try this instead if your generations are terrible (first uninstall transformers): pip install git+https://github.com/huggingface/transformers@9eae4aa57650c1dbe1becd4e0979f6ad1e572ac0
More info and possible alternative solutions in these github issues.https://github.com/tloen/alpaca-lora/issues/279#issuecomment-1514725886https://github.com/oobabooga/text-generation-webui/issues/931#issuecomment-1516215250 ; Instructions simply using alpaca format are likely to be of lower quality. If you want pure general instruct capability I reccomend GPT-4-X-Alpaca (the base model of this) - 
The model responds well to giving it a roleplay task in the preprompt, and the actual conversation in the ""### Input: "" field.",Natural Language Processing
codegen2-3_7B,Text Generation,PyTorch; Transformers,,apache-2.0,https://arxiv.org/pdf/2305.02309.pdf,9,,943,14984.70534,2,https://huggingface.co/Salesforce/codegen2-3_7B,"CodeGen2 is a family of autoregressive language models for program synthesis, introduced in the paper:; CodeGen2: Lessons for Training LLMs on Programming and Natural Languages by Erik Nijkamp*, Hiroaki Hayashi*, Caiming Xiong, Silvio Savarese, Yingbo Zhou.; Unlike the original CodeGen model family (i.e., CodeGen1), CodeGen2 is capable of infilling, and supports more programming languages.; Four model sizes are released: 1B, 3.7B, 7B, 16B.; This model can be easily loaded using the AutoModelForCausalLM functionality.",Natural Language Processing
BBT,,,,,https://arxiv.org/pdf/2302.09432.pdf,9,,0,0,,https://huggingface.co/SuSymmertry/BBT,"This repository is publicly accessible, but
			you have to accept the conditions to access its files and content.
		; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		; 

;   ; ÂÛÎÄÁ´½Ó£ºhttps://arxiv.org/abs/2302.09432",
WizardLM-7B-V1.0,Text Generation,PyTorch; Transformers,,,,55,,1354,27599.15773,1,https://huggingface.co/WizardLM/WizardLM-7B-V1.0,The WizardLM delta weights.,Natural Language Processing
audioldm-m-full,,Diffusers,,,https://arxiv.org/pdf/2301.12503.pdf,17,,1410,0.00641716,8,https://huggingface.co/cvssp/audioldm-m-full,"AudioLDM is a latent text-to-audio diffusion model capable of generating realistic audio samples given any text input. It is available in the ? Diffusers library from v0.15.0 onwards.; AudioLDM was proposed in the paper AudioLDM: Text-to-Audio Generation with Latent Diffusion Models by Haohe Liu et al.; Inspired by Stable Diffusion, AudioLDM
is a text-to-audio latent diffusion model (LDM) that learns continuous audio representations from CLAP
latents. AudioLDM takes a text prompt as input and predicts the corresponding audio. It can generate text-conditional
sound effects, human speech and music.; This is the medium version of the AudioLDM model, which has a larger UNet, CLAP audio projection dim, and is trained with audio embeddings as condition. The four AudioLDM checkpoints are summarised below:; Table 1: Summary of the AudioLDM checkpoints.",
wizardLM-7B-GPTQ,Text Generation,Transformers,,other,,104,,1788,4630.821333,,https://huggingface.co/TheBloke/wizardLM-7B-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for WizardLM's WizardLM-7B 4bit.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; These models were quantised using hardware kindly provided by Latitude.sh.",Natural Language Processing
saiga_30b_lora_llamacpp,Text2Text Generation,,Russian,,,20,IlyaGusev/ru_turbo_alpaca; IlyaGusev/ru_turbo_saiga; IlyaGusev/ru_sharegpt_cleaned,0,97177.60221,,https://huggingface.co/IlyaGusev/saiga_30b_lora_llamacpp,Llama.cpp compatible version of an original 30B model.; How to run:; System requirements:; Inference API has been turned off for this model.,Natural Language Processing
chinese-llama-plus-lora-7b,,,Chinese,apache-2.0,,28,,0,858.7426124,,https://huggingface.co/ziqingyang/chinese-llama-plus-lora-7b,"This repo contains the tokenizer, Chinese-Alpaca LoRA weights and configs for Chinese-LLaMA-Alpaca; Instructions for using the weights can be found at https://github.com/ymcui/Chinese-LLaMA-Alpaca.; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
dog_emotion_v3,Image Classification,PyTorch; TensorBoard; Safetensors; Transformers,,,,4,,39,686.0060181,,https://huggingface.co/Dewa/dog_emotion_v3,No model card; New: Create and edit this model card directly on the website!,Computer Vision
OpenAssistant-SFT-7-Llama-30B-GPTQ,Text Generation,Transformers,,other,https://arxiv.org/pdf/2304.07327.pdf,34,,116,17307.95917,,https://huggingface.co/TheBloke/OpenAssistant-SFT-7-Llama-30B-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for OpenAssistant LLaMA 30B SFT 7.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; These models were quantised using hardware kindly provided by Latitude.sh.",Natural Language Processing
mdeberta-v3-base-tasksource-nli,Zero-Shot Classification,PyTorch; Safetensors; Transformers,27 languages,apache-2.0,https://arxiv.org/pdf/2301.05948.pdf,5,xnli; metaeval/xnli; americas_nli; MoritzLaurer/multilingual-NLI-26lang-2mil7; stsb_multi_mt; paws-x; miam; strombergnlp/x-stance; tyqiangz/multilingual-sentiments; metaeval/universal-joy; amazon_reviews_multi; cardiffnlp/tweet_sentiment_multilingual; strombergnlp/offenseval_2020; offenseval_dravidian; nedjmaou/MLMA_hate_speech; xglue; ylacombe/xsum_factuality; metaeval/x-fact; pasinit/xlwic; tasksource/oasst1_dense_flat; papluca/language-identification; wili_2018; exams; xcsr; xcopa; juletxara/xstory_cloze; Anthropic/hh-rlhf; universal_dependencies; tasksource/oasst1_pairwise_rlhf_reward; OpenAssistant/oasst1,757,2314.391051,,https://huggingface.co/sileod/mdeberta-v3-base-tasksource-nli,"Multilingual mdeberta-v3-base with 30k steps multi-task training on mtasksource
This model can be used as a stable starting-point for further fine-tuning, or directly in zero-shot NLI model or a zero-shot pipeline.
In addition, you can use the provided adapters to directly load a model for hundreds of tasks. ; For more details, see deberta-v3-base-tasksource-nli and replace tasksource by mtasksource.; https://github.com/sileod/tasksource/
https://github.com/sileod/tasknet/; For help integrating tasksource into your experiments, please contact damien.sileo@inria.fr.; For more details, refer to this article: ",Natural Language Processing
pygmalion-7b,Text Generation,,English,,,149,,0,0.007662086,1,https://huggingface.co/PygmalionAI/pygmalion-7b,"Pygmalion 7B is a dialogue model based on Meta's LLaMA-7B.; This is version 1. It has been fine-tuned using a subset of the data from Pygmalion-6B-v8-pt4, for those of you familiar with the project.; The model weights in this repository cannot be used as-is. The files here are XORs due to licensing concerns. To obtain proper, usable model weights you need to:; Request access to the original LLaMA weights from Meta through this form; Convert them to the HuggingFace Transformers format by using the convert_llama_weights_to_hf.py script for your version of the transformers library",Natural Language Processing
Pygmalion-7b-4bit-Q4_1-GGML,Text Generation,,English,,,19,,0,10362.88467,,https://huggingface.co/TehVenom/Pygmalion-7b-4bit-Q4_1-GGML,"Currently KoboldCPP is unable to stop inference when an EOS token is emitted, which causes the model to devolve into gibberish,; Pygmalion 7B is now fixed on the dev branch of KoboldCPP, which has fixed the EOS issue. Make sure you're compiling the latest version, it was fixed only a after this model was released;; When running KoboldCPP, you will need to add the --unbantokens flag for this model to behave properly.; Pygmalion 7B is a dialogue model based on Meta's LLaMA-7B.; This is version 1. It has been fine-tuned using a subset of the data from Pygmalion-6B-v8-pt4, for those of you familiar with the project.",Natural Language Processing
LLaVA-7b-delta-v0,Text Generation,PyTorch; Transformers,,apache-2.0,,11,,853,13822.68953,10,https://huggingface.co/liuhaotian/LLaVA-7b-delta-v0,"NOTE: This ""delta model"" cannot be used directly.Users have to apply it on top of the original LLaMA weights to get actual LLaVA weights.See https://github.com/haotian-liu/LLaVA#llava-weights for instructions.; Model type:
LLaVA is an open-source chatbot trained by fine-tuning LLaMA/Vicuna on GPT-generated multimodal instruction-following data.
It is an auto-regressive language model, based on the transformer architecture.; Model date:
LLaVA was trained in April 2023.; Paper or resources for more information:
https://llava-vl.github.io/; License:
Apache License 2.0",Natural Language Processing
backups,,,,,,6,,0,0,,https://huggingface.co/malikxseto/backups,"This repository is publicly accessible, but
			you have to accept the conditions to access its files and content.
		; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		; Backups of models I found and I like; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
LoRAArchive,Text-to-Image,Safetensors,,creativeml-openrail-m,,23,,0,0,,https://huggingface.co/LMFResearchSociety/LoRAArchive,"This repository is publicly accessible, but
			you have to accept the conditions to access its files and content.
		; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		; LyCORIS (LoCon, LoHa, LoKR, DyLoRA) located here:
https://huggingface.co/LMFResearchSociety/LyCORISArchive; Too much of a pain to separate different types of LyCoris. Some LoCons might be mixed in with LoRAs if the repository doesn't spearate them. Just drop a note in the discord groupchat if you're bothered.; Example Generator: 
https://civitai.com/models/27968 
https://huggingface.co/Lykon/AnyLoRA",Multimodel
Defecation,,,,openrail,,12,,0,9.572958984,,https://huggingface.co/JollyIm/Defecation,"Here's the defecation lora, it was available on Civitai until the ban on scat content.
You can use various trigger words to get different effects, like ""Scat"", ""Disposal"", ""Feces"" and so on.
The main problem with this model is that that it tends to confuse the anus and the vagina, so you'll have to add prompts and negatives usefull to reduce this effect.; You can find my other models on Civitai: https://civitai.com/user/JollyIm/models; A first example:

Prompts: Realistic, Realism, (Masterpiece, Best Quality, High Quality, Highres:1.4), Detailed, Extremely Detailed, Ambient Soft Lighting, 4K, (Extremely Detailed Eyes, Detailed Face and Skin:1.2), masterpiece, best quality, 1girl, feces, disposal, (anal:1.2), lora:defecation_v1:0.7, (public toilet), embarassed, (pile of feces), (perfect pussy), (perfect vagina),
Negative prompt: easynegative, (worst quality:1.2), (low quality:1.2), (vaginal), (dirty vagina:1.2), (feces in vagina:1.2), (feces in vagina:1.2); Second example:

Prompts: masterpiece, best quality, 1girl, scat, (anal:1.2), lora:defecation_v1:0.9, (toilet), from behind,
Negative prompt: easynegative, (worst quality:1.2), (low quality:1.2), (vaginal), (dirty vagina:1.2), (scat in vagina:1.2), (feces in vagina:1.2); Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
KoreanLM,Text Generation,PyTorch; Transformers,Korean; English,,,12,,162,27597.32299,,https://huggingface.co/quantumaikr/KoreanLM,"

; KoreanLM? ??? ????? ???? ?? ???? ???????. ?? ???? ?????? ??? ??? ??? ??, ???? ?? ??? ????? ???? ??? ???? ????? ??? ????. ??? ??? ???? ???? ???? ????? ???? ?? KoreanLM ????? ???? ?????.; ???? ??? ???? ??: ???? ??, ??, ??? ??? ???? ???? ? ???? ???? ??? ? ?? ????? ?????.; ???? ??? ?? ??: ??? ???? ??? ???? ????? ??? ??? ??? ??? ??? ??? ???? ????? ??? ??????.; ?? ????? ??? ??: ?? ??? ???? ?????? ??? ??? ???? ?????? ??? ??? ????. ?? ???? ?? ??? ????? ??? ???? ???? ????, ??? ?? ??? ? ?? ??? ? ??? ???.",Natural Language Processing
VoiceAi_Jokowi,,Transformers,,,,47,,7,0,,https://huggingface.co/Byzern/VoiceAi_Jokowi,"This repository is publicly accessible, but
			you have to accept the conditions to access its files and content.
		; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		; don't forget like; dilike dulu lah kalau mau download; Support me : https://saweria.co/donate/Byzernn",
control_v11f1e_sd15_tile,Image-to-Image,Diffusers,,openrail,https://arxiv.org/pdf/2302.05543.pdf,25,,72241,1484.87594,6,https://huggingface.co/lllyasviel/control_v11f1e_sd15_tile,"Controlnet v1.1 was released in lllyasviel/ControlNet-v1-1 by Lvmin Zhang.; This checkpoint is a conversion of the original checkpoint into diffusers format.
It can be used in combination with Stable Diffusion, such as runwayml/stable-diffusion-v1-5.; For more details, please also have a look at the ? Diffusers docs.; ControlNet is a neural network structure to control diffusion models by adding extra conditions. ; ",Computer Vision
wizard-vicuna-13B-HF,Text Generation,PyTorch; Transformers,English,,,48,,742,26655.2512,,https://huggingface.co/TheBloke/wizard-vicuna-13B-HF,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; This is a float16 HF format repo for junelee's wizard-vicuna 13B.; June Lee's repo was also HF format. The reason I've made this is that the original repo was in float32, meaning it required 52GB disk space, VRAM and RAM.; This model was converted to float16 to make it easier to load and manage.",Natural Language Processing
mpt-7b-chat,Text Generation,PyTorch; Transformers,,cc-by-nc-sa-4.0,https://arxiv.org/pdf/2205.14135.pdf; https://arxiv.org/pdf/2108.12409.pdf; https://arxiv.org/pdf/2010.04245.pdf,471,jeffwan/sharegpt_vicuna; Hello-SimpleAI/HC3; tatsu-lab/alpaca; Anthropic/hh-rlhf; victor123/evol_instruct_70k,41749,13621.459,20,https://huggingface.co/mosaicml/mpt-7b-chat,"MPT-7B-Chat is a chatbot-like model for dialogue generation.
It was built by finetuning MPT-7B on the ShareGPT-Vicuna, HC3,
 Alpaca, HH-RLHF, and Evol-Instruct datasets.; This model was trained by MosaicML and follows a modified decoder-only transformer architecture.; May 5, 2023; CC-By-NC-SA-4.0 (non-commercial use only); SamIAm85:",Natural Language Processing
RedPajama-INCITE-Chat-3B-v1,Text Generation,PyTorch; Transformers,English,apache-2.0,,105,togethercomputer/RedPajama-Data-1T; OpenAssistant/oasst1; databricks/databricks-dolly-15k,10012,5828.6805,11,https://huggingface.co/togethercomputer/RedPajama-INCITE-Chat-3B-v1,"RedPajama-INCITE-Chat-3B-v1 was developed by Together and leaders from the open-source AI community including Ontocord.ai, ETH DS3Lab, AAI CERC, Universit¨¦ de Montr¨¦al, MILA - Qu¨¦bec AI Institute, Stanford Center for Research on Foundation Models (CRFM), Stanford Hazy Research research group and LAION. ; It is fine-tuned on OASST1 and Dolly2 to enhance chatting ability.; Please note that the model requires transformers version >= 4.25.1.; To prompt the chat model, use the following format:; This requires a GPU with 8GB memory.",Natural Language Processing
starcoder-gpteacher-code-instruct,Text Generation,PyTorch; Transformers,,bigcode-openrail-m,https://arxiv.org/pdf/1911.02150.pdf; https://arxiv.org/pdf/2205.14135.pdf; https://arxiv.org/pdf/2207.14255.pdf; https://arxiv.org/pdf/2305.06161.pdf,61,bigcode/the-stack-dedup; teknium1/GPTeacher-codegen,330,64779.70004,2,https://huggingface.co/GeorgiaTechResearchInstitute/starcoder-gpteacher-code-instruct,"This model is bigcode/starcoder fine-tuned on the teknium1/GPTeacher codegen dataset (GPT-4 code instruction fine-tuning).; The base StarCoder models are 15.5B parameter models trained on 80+ programming languages from The Stack (v1.2), with opt-out requests excluded. The model uses Multi Query Attention, a context window of 8192 tokens,  and was trained using the Fill-in-the-Middle objective on 1 trillion tokens. ; The base model was trained on GitHub code and then fine-tuned to follow instructions. Prompts such as ""Write a function that computes the square root."" should work reasonably well. The original repo recommeds using the Tech Assistant prompt to few-shot prompt it into behaving as a technical assistant. This fine-tuned model uses the Alpaca prompts.; Full Prompt:; Response:",Natural Language Processing
gpt4-x-vicuna-13B-HF,Text Generation,PyTorch; Transformers,,other,,20,,172,26657.08785,,https://huggingface.co/TheBloke/gpt4-x-vicuna-13B-HF,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; This repo contains a float16 HF format model of NousResearch's gpt4-x-vicuna-13b.; I uploaded this model because NousResearch's base repository is inside an archive so it can't be used without first unpacking it. Also the model is in float32 format which requires a lot more VRAM and RAM to use.; The model in this repo has been converted to float16 and can be used immediately for float16 and 8bit inference, or used as the basis for other conversions.",Natural Language Processing
mpt-7b-storywriter-4bit-128g,Text Generation,Safetensors; Transformers,,apache-2.0,https://arxiv.org/pdf/2108.12409.pdf; https://arxiv.org/pdf/2205.14135.pdf,115,the_pile_books3,489,3964.999812,,https://huggingface.co/OccamRazor/mpt-7b-storywriter-4bit-128g,"Quantized for KoboldAI (4bit-fork); MPT-7B-StoryWriter-65k+ is a model designed to read and write fictional stories with super long context lengths.
It was built by finetuning MPT-7B with a context length of 65k tokens on a filtered fiction subset of the books3 dataset.
At inference time, thanks to ALiBi, MPT-7B-StoryWriter-65k+ can extrapolate even beyond 65k tokens.
We demonstrate generations as long as 84k tokens on a single node of 8 A100-80GB GPUs in our blogpost.; This model was trained by MosaicML and follows a modified decoder-only transformer architecture.; May 5, 2023; Apache-2.0 (commercial use permitted)",Natural Language Processing
Ziya-LLaMA-7B-Reward,Text Classification,PyTorch; Transformers,,gpl,,49,,558,27064.84554,,https://huggingface.co/IDEA-CCNL/Ziya-LLaMA-7B-Reward,"Ziya-LLaMA-7B-Reward»ùÓÚZiya-LLaMAÄ£ÐÍ£¬ÔÚÒÔÏÂÆ«ºÃÅÅÐòÊý¾ÝÉÏ½øÐÐÑµÁ·£º; Ä£ÐÍÄÜ¹»Ä£ÄâÖÐÓ¢Ë«ÓïÉú³ÉµÄ½±Àø»·¾³£¬¶ÔLLMÉú³É½á¹ûÌá¹©×¼È·µÄ½±Àø·´À¡¡£; Ziya-LLaMA-7B-Reward is based on the Ziya-LLaMA model, trained on the following preference ranking data:; The model is able to simulate a bilingual reward environment and provide accurate reward feedback on LLM generation results.; Ä£ÐÍ¿ÉÒÔ½ÏÎª×¼È·µØÅÐ¶ÏÎÄ±¾ÖØ¸´£¬Òì³£ÖÐ¶ÏºÍ²»·ûºÏÖ¸ÁîÒªÇóµÈµÍÖÊÁ¿Ä£ÐÍÉú³É½á¹û£¬²¢¸ø³ö½ÏµÍµÄ½±ÀøÖµ¡£",Natural Language Processing
Beautiful-Realistic-Asians-v5,,Diffusers,,,,13,,839,0.002045174,,https://huggingface.co/sinkinai/Beautiful-Realistic-Asians-v5,"run the model at: https://sinkin.ai/m/vlDnKP6; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
albertina-ptbr,Fill-Mask,PyTorch; Transformers,Portuguese,other,https://arxiv.org/pdf/2305.06721.pdf,33,brwac; PORTULAN/glue-ptpt; assin2; dlb/plue,743,1823.586573,1,https://huggingface.co/PORTULAN/albertina-ptbr,"????This is the model card for Albertina PT-BR. 
  You may be interested in some of the other models in the Albertina (encoders) and Gerv¨¢sio (decoders) families.
; Albertina PT-* is a foundation, large language model for the Portuguese language.; It is an encoder of the BERT family, based on the neural architecture Transformer and 
developed over the DeBERTa model, and with most competitive performance for this language. 
It has different versions that were trained for different variants of Portuguese (PT), 
namely the European variant from Portugal (PT-PT) and the American variant from Brazil (PT-BR), 
and it is distributed free of charge and under a most permissible license.; Albertina PT-BR is the version for American Portuguese from Brazil, trained on the brWaC data set.; You may be interested also in Albertina PT-BR No-brWaC, trained on data sets other than brWaC and thus with a more permissive license.
To the best of our knowledge, these are encoders specifically for this language and variant 
that,  at the time of its initial distribution, set a new state of the art for it, and is made publicly available 
and distributed for reuse.",Natural Language Processing
LLaVA-13b-delta-v1-1,Text Generation,PyTorch; Transformers,,apache-2.0,,13,,125,26665.48631,3,https://huggingface.co/liuhaotian/LLaVA-13b-delta-v1-1,"NOTE: This ""delta model"" cannot be used directly.Users have to apply it on top of the original LLaMA weights to get actual LLaVA weights.See https://github.com/haotian-liu/LLaVA#llava-weights for instructions.; Model type:
LLaVA is an open-source chatbot trained by fine-tuning LLaMA/Vicuna on GPT-generated multimodal instruction-following data.
It is an auto-regressive language model, based on the transformer architecture.; Model date:
LLaVA was trained in May 2023.; Paper or resources for more information:
https://llava-vl.github.io/; License:
Apache License 2.0",Natural Language Processing
GoodHands-beta2,,,,,,36,,0,0,,https://huggingface.co/jlsim/GoodHands-beta2,"This repository is publicly accessible, but
			you have to accept the conditions to access its files and content.
		; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		; No model card; New: Create and edit this model card directly on the website!; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
WizardLM-13B-Uncensored,Text Generation,PyTorch; Transformers,,other,,407,ehartford/WizardLM_alpaca_evol_instruct_70k_unfiltered,1434,26626.33705,40,https://huggingface.co/ehartford/WizardLM-13B-Uncensored,"This is WizardLM trained with a subset of the dataset - responses that contained alignment / moralizing were removed.  The intent is to train a WizardLM that doesn't have alignment built-in, so that alignment (of any sort) can be added separately with for example with a RLHF LoRA.; Shout out to the open source AI/ML community, and everyone who helped me out.; Note:An uncensored model has no guardrails.You are responsible for anything you do with the model, just as you are responsible for anything you do with any dangerous object such as a knife, gun, lighter, or car.
Publishing anything this model generates is the same as publishing it yourself.
You are responsible for the content you publish, and you cannot blame the model any more than you can blame the knife, gun, lighter, or car for what you do with it.",Natural Language Processing
coedit-xxl,Text2Text Generation,PyTorch; Transformers,English,apache-2.0,https://arxiv.org/pdf/2305.09857.pdf,6,asset; wi_locness; GEM/wiki_auto_asset_turk; discofuse; zaemyung/IteraTeR_plus; jfleg,587,45571.20853,,https://huggingface.co/grammarly/coedit-xxl,"This model was obtained by fine-tuning the corresponding google/flan-t5-xxl model on the CoEdIT dataset.; Paper: CoEdIT: ext Editing by Task-Specific Instruction Tuning; Authors: Vipul Raheja, Dhruv Kumar, Ryan Koo, Dongyeop Kang; We make available the models presented in our paper. ; Given an edit instruction and an original text, our model can generate the edited version of the text.",Natural Language Processing
coedit-xl-composite,Text2Text Generation,PyTorch; Transformers,English,apache-2.0,https://arxiv.org/pdf/2305.09857.pdf,8,asset; wi_locness; GEM/wiki_auto_asset_turk; discofuse; zaemyung/IteraTeR_plus; jfleg,133,11677.40202,,https://huggingface.co/grammarly/coedit-xl-composite,"This model was obtained by fine-tuning the corresponding google/flan-t5-xl model on the CoEdIT-Composite dataset. Details of the dataset can be found in our paper and repository.; Paper: CoEdIT: Text Editing by Task-Specific Instruction Tuning; Authors: Vipul Raheja, Dhruv Kumar, Ryan Koo, Dongyeop Kang; We make available the models presented in our paper. ; Given an edit instruction and an original text, our model can generate the edited version of the text.",Natural Language Processing
mpt-7b-ggml,Text Generation,Transformers,English,apache-2.0,,44,mc4; c4; togethercomputer/RedPajama-Data-1T; bigcode/the-stack; allenai/s2orc,237,125992.9755,6,https://huggingface.co/rustformers/mpt-7b-ggml,"MPT-7B is a decoder-style transformer pretrained from scratch on 1T tokens of English text and code.
This model was trained by MosaicML.; MPT-7B is part of the family of MosaicPretrainedTransformer (MPT) models, which use a modified transformer architecture optimized for efficient training and inference. ; ??Caution??: mpt-7b-storywriter is still under development!; Via pip: pip install llm-rs; The GGML example only supports the ggml container type!",Natural Language Processing
WizardLM-13B-V1.0,Text Generation,PyTorch; Transformers,,,,55,,2291,53322.04475,2,https://huggingface.co/WizardLM/WizardLM-13B-V1.0,"This is WizardLM-13B V1.0 diff weight.; Project Repo: https://github.com/nlpxucan/WizardLM; NOTE: The WizardLM-13B-1.0 and Wizard-7B use different prompt at the beginning of the conversation:; For WizardLM-13B-1.0 , the Prompt should be as following:; For WizardLM-7B , the Prompt should be as following:",Natural Language Processing
tiny_starcoder_py,Text Generation,PyTorch; Safetensors; Transformers,,bigcode-openrail-m,,42,bigcode/the-stack-dedup,5876,1317.256776,1,https://huggingface.co/bigcode/tiny_starcoder_py,"This is a 164M parameters model with the same architecture as StarCoder (8k context length, MQA & FIM). It was trained on the Python data from StarCoderData
for ~6 epochs which amounts to 100B tokens.; The model was trained on GitHub code, to assist with some tasks like Assisted Generation. For pure code completion, we advise using our 15B models StarCoder or StarCoderBase.; Fill-in-the-middle uses special tokens to identify the prefix/middle/suffix part of the input and output:; The model is licensed under the BigCode OpenRAIL-M v1 license agreement. You can find the full agreement here.",Natural Language Processing
instructcodet5p-16b,Text2Text Generation,PyTorch; Transformers,,bsd-3-clause,https://arxiv.org/pdf/2305.07922.pdf,46,,3579,34020.71289,1,https://huggingface.co/Salesforce/instructcodet5p-16b,"CodeT5+ is a new family of open code large language models with an encoder-decoder architecture that can flexibly operate in different modes (i.e. encoder-only, decoder-only, and encoder-decoder) to support a wide range of code understanding and generation tasks. 
It is introduced in the paper:; CodeT5+: Open Code Large Language Models for Code Understanding and Generation
by Yue Wang*, Hung Le*, Akhilesh Deepak Gotmare, Nghi D.Q. Bui, Junnan Li, Steven C.H. Hoi (* indicates equal contribution).; Compared to the original CodeT5 family (base: 220M, large: 770M), CodeT5+ is pretrained with a diverse set of pretraining tasks including span denoising, causal language modeling, contrastive learning, and text-code matching to learn rich representations from both unimodal code data and bimodal code-text data. 
Additionally, it employs a simple yet effective compute-efficient pretraining method to initialize the model components with frozen off-the-shelf LLMs such as CodeGen to efficiently scale up the model (i.e. 2B, 6B, 16B), and adopts a ""shallow encoder and deep decoder"" architecture. 
Furthermore, it is instruction-tuned to align with natural language instructions (see our InstructCodeT5+ 16B) following Code Alpaca.  ; This model can be easily loaded using the AutoModelForSeq2SeqLM functionality and employs the same tokenizer as CodeGen.; This checkpoint is trained on the stricter permissive subset of the deduplicated version of the github-code dataset.
The data is preprocessed by reserving only permissively licensed code (""mit"" ¡°apache-2¡±, ¡°bsd-3-clause¡±, ¡°bsd-2-clause¡±, ¡°cc0-1.0¡±, ¡°unlicense¡±, ¡°isc¡±).
Supported languages (9 in total) are as follows:
c, c++, c-sharp,  go, java, javascript,  php, python, ruby.",Natural Language Processing
hakoMay,,,,,,77,,0,13363.30321,,https://huggingface.co/852wa/hakoMay,"SD2.1 finetuning model; model HakoMay A/B/C/D/Boy .safetensors; embeddings Mayng.safetensors + Mayng.yaml; License
WD 1.5 is released under the Fair AI Public License 1.0-SD (https://freedevproject.org/faipl-1.0-sd/). If any derivative of this model is made, please share your changes accordingly. Special thanks to ronsor/undeleted (https://undeleted.ronsor.com/) for help with the license.; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
raos-virtual-try-on-model,Text-to-Image,Diffusers,,creativeml-openrail-m,,9,,430,2334.322049,1,https://huggingface.co/gouthaml/raos-virtual-try-on-model,"The DeepVTO model is hosted on the Hugging Face Model Hub. 
(https://huggingface.co/gouthaml/raos-virtual-try-on-model)
This model leverages a combination of advanced deep learning techniques and architectures, including stable-diffusion, DreamBooth, feature extraction using the EfficientNetB3 CNN model, and OpenPose for estimating person keypoints. These techniques are harmoniously integrated to provide a realistic and visually appealing virtual try-on experience for users.; The DeepVTO model is built on the principles of stable diffusion and vector embeddings, which are critical in creating a high-quality virtual try-on system. The model is trained using the DreamBooth model, which is a stable-diffusion model, and the feature extraction is performed using the EfficientNetB3 CNN model. OpenPose, a real-time multi-person system to jointly detect human body, hand, facial, and foot keypoints, is used for estimating person keypoints.; The model requires specific hardware and software for optimal performance. The hardware requirements include a GPU A100 and high RAM. The software requirements include PyTorch, stable-diffusion-v1-5, Python 3.0, U-Net Architecture, Dreambooth, OpenPose, and the EfficientNetB3 pre-trained CNN model.; The DeepVTO model is a testament to the potential of deep learning in the fashion retail industry. It showcases how advanced machine learning techniques can be used to enhance the online shopping experience, making it more interactive and personalized. This model serves as a valuable resource for researchers and practitioners in the field, providing a practical example of a high-quality virtual try-on system.; The model also provides a foundation for future research and development in the field of virtual try-on systems. It highlights the potential of deep learning techniques in addressing the challenges associated with virtual try-on systems, such as the accuracy of virtual representations and the scalability of the system. By leveraging advanced deep learning techniques, the DeepVTO model paves the way for the development of more sophisticated and effective virtual try-on systems in the future.",Multimodel
Wizard-Vicuna-7B-Uncensored-HF,Text Generation,PyTorch; Transformers,English,other,,16,ehartford/wizard_vicuna_70k_unfiltered,2579,13805.88092,1,https://huggingface.co/TheBloke/Wizard-Vicuna-7B-Uncensored-HF,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; This is a float16 HF repo of Eric Hartford's 'uncensored' training of Wizard-Vicuna 7B.; It is the result of converting Eric's float32 repo to float16 for easier storage.; For further support, and discussions on these models and AI in general, join us at:",Natural Language Processing
metharme-13b,Text Generation,,English,,,25,,0,0.009888649,,https://huggingface.co/PygmalionAI/metharme-13b,"Metharme 13B is an instruct model based on Meta's LLaMA-13B.; This is an experiment to try and get a model that is usable for conversation, roleplaying and storywriting, but which can be guided using natural language like other instruct models. See the prompting section below for examples.; It was trained by doing supervised fine-tuning over a mixture of regular instruction data alongside roleplay, fictional stories and conversations with synthetically generated instructions attached.; The model weights in this repository cannot be used as-is. The files here are XORs due to licensing concerns. To obtain proper, usable model weights you need to:; Request access to the original LLaMA weights from Meta through this form",Natural Language Processing
MPT-7B-Storywriter-GGML,,Transformers,,apache-2.0,https://arxiv.org/pdf/2108.12409.pdf; https://arxiv.org/pdf/2205.14135.pdf; https://arxiv.org/pdf/2302.06675.pdf,37,the_pile_books3,140,38737.93338,1,https://huggingface.co/TheBloke/MPT-7B-Storywriter-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; This is GGML format quantised 4-bit, 5-bit and 8-bit models of MosaicML's MPT-7B-Storywriter.; This repo is the result of converting to GGML and quantising.; Please note that these MPT GGMLs are not compatbile with llama.cpp. Please see below for a list of tools known to work with these model files.",
LexGPT-6B,Text Generation,PyTorch; Transformers,English,bigscience-openrail-m,https://arxiv.org/pdf/2306.05431.pdf,7,pile-of-law/pile-of-law,110,0,1,https://huggingface.co/patent/LexGPT-6B,"This repository is publicly accessible, but
			you have to accept the conditions to access its files and content.
		; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		; LexGPT-6B Language ModelVersion 1.0 / 17 June 2023; Current Checkpoint: Training Iteration  350,000; Link to paper: here",Natural Language Processing
multilingual-e5-base,Feature Extraction,PyTorch; Safetensors; Transformers,94 languages,mit,https://arxiv.org/pdf/2212.03533.pdf; https://arxiv.org/pdf/2108.08787.pdf; https://arxiv.org/pdf/2104.08663.pdf; https://arxiv.org/pdf/2210.07316.pdf,62,,21732,2295.62805,5,https://huggingface.co/intfloat/multilingual-e5-base,"Text Embeddings by Weakly-Supervised Contrastive Pre-training.
Liang Wang, Nan Yang, Xiaolong Huang, Binxing Jiao, Linjun Yang, Daxin Jiang, Rangan Majumder, Furu Wei, arXiv 2022; This model has 12 layers and the embedding size is 768.; Below is an example to encode queries and passages from the MS-MARCO passage ranking dataset.; This model is initialized from xlm-roberta-base
and continually trained on a mixture of multilingual datasets.
It supports 100 languages from xlm-roberta,
but low-resource languages may see performance degradation.; Initialization: xlm-roberta-base",Multimodel
Replicant-V3.0,Text-to-Image,,,other,,41,,0,8016.641767,,https://huggingface.co/gsdf/Replicant-V3.0,"WD1.5-beta based model.Licence:https://freedevproject.org/faipl-1.0-sd/ ; prompt & Setting: https://civitai.com/models/10701/replicant-v30
; Unable to determine this model¡¯s library. Check the
								docs 
.
							",Multimodel
alpaca-lora-7b-german-base-52k,,Transformers,German,apache-2.0,,14,,0,16.80246479,1,https://huggingface.co/avocardio/alpaca-lora-7b-german-base-52k,"Visit the Github for more information: https://github.com/avocardio/zicklein; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
LEALLA-small,Feature Extraction,PyTorch; TensorFlow; JAX; Safetensors; Transformers,109 languages,apache-2.0,https://arxiv.org/pdf/2302.08387.pdf,3,CommonCrawl; Wikipedia,205,1122.826841,,https://huggingface.co/setu4993/LEALLA-small,"LEALLA is a collection of lightweight language-agnostic sentence embedding models supporting 109 languages, distilled from LaBSE. The model is useful for getting multilingual sentence embeddings and for bi-text retrieval.; This is migrated from the v1 model on the TF Hub. The embeddings produced by both the versions of the model are equivalent. Though, for some of the languages (like Japanese), the LEALLA models appear to require higher tolerances when comparing embeddings and similarities.; Using the model:; To get the sentence embeddings, use the pooler output:; Output for other languages:",Multimodel
ChatGLM6B-Legal,,PyTorch; Transformers,Chinese,,,4,,1,53.69159435,,https://huggingface.co/tassadar667/ChatGLM6B-Legal,"ChatGLM-6B-LegalÊÇÒ»¸öÔÚChatGLM-6BÉÏ½øÐÐÁË²ÎÊýÎ¢µ÷µÄÄ£ÐÍ£¬Ö÷Òª¹Ø×¢ÓÚ·¨ÂÉÅÐ¾ÝµÄÔ¤²â·½Ãæ¡£; Ê×ÏÈÐèÒªÏÂÔØChatGLM-6BÄ£ÐÍ£¬ÔÙÏÂÔØ±¾Ä£ÐÍÖÐµÄmodel_1ºÍmodel_2£¬ÔËÐÐ·¨ÂÉÎÊ´ðjupyterÎÄ¼þ¡£ÐèÒªÐÞ¸ÄÎÄ¼þÖÐÄ£ÐÍ¡¢configµÈÄ¿Â¼¡£
ÒÀÀµ»·¾³ÓëChatGLM-6BÏàÍ¬¡£; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
manticore-13b-chat-pyg,Text Generation,PyTorch; Safetensors; Transformers,English,,,20,anon8231489123/ShareGPT_Vicuna_unfiltered; ehartford/wizard_vicuna_70k_unfiltered; ehartford/WizardLM_alpaca_evol_instruct_70k_unfiltered; QingyiSi/Alpaca-CoT; teknium/GPT4-LLM-Cleaned; teknium/GPTeacher-General-Instruct; metaeval/ScienceQA_text_only; hellaswag; openai/summarize_from_feedback; riddle_sense; gsm8k; ewof/code-alpaca-instruct-unfiltered,300,53311.84419,7,https://huggingface.co/openaccess-ai-collective/manticore-13b-chat-pyg,"; Manticore 13B Chat builds on Manticore with new datasets, including a de-duped subset of the Pygmalion dataset. It also removes all Alpaca style prompts using ### in favor of 
chat only style prompts using USER:,ASSISTANT: as well as pygmalion/metharme prompting using <|system|>, <|user|> and <|model|> tokens.; Questions, comments, feedback, looking to donate, or want to help? Reach out on our Discord or email wing@openaccessaicollective.org; Manticore 13B Chat is a Llama 13B model fine-tuned on the following datasets along with the datasets from the original Manticore 13B. ; Manticore 13B Chat was trained on 25% of the datasets below. The datasets were merged, shuffled, and then sharded into 4 parts.",Natural Language Processing
hippogriff-30b-chat,Text Generation,PyTorch; Transformers,English,,,17,QingyiSi/Alpaca-CoT; teknium/GPT4-LLM-Cleaned; teknium/GPTeacher-General-Instruct; metaeval/ScienceQA_text_only; hellaswag; openai/summarize_from_feedback; riddle_sense; gsm8k; OpenAssistant/oasst1,65,66634.07875,,https://huggingface.co/openaccess-ai-collective/hippogriff-30b-chat,"; Hippogriff 30B Chat is an experiment that builds on Manticore with new datasets, while removing a few more instruction and chat datasets. It also includes a de-duped subset of the Pygmalion dataset. It also removes all Alpaca style prompts using ### in favor of 
chat only style prompts using USER:,ASSISTANT: as well as pygmalion/metharme prompting using <|system|>, <|user|> and <|model|> tokens.; Questions, comments, feedback, looking to donate, or want to help? Reach out on our Discord or email wing@openaccessaicollective.org; Hippogriff 30B Chat is a Llama 30B model fine-tuned on the following datasets; Hippogriff differs from Manticore as it does not use the WizardLM, WizardVicuna, Alpaca, or ShareGPT datasets.",Natural Language Processing
rvc-model-arknights,,,English,unknown,,6,,0,0.001808281,,https://huggingface.co/theaster/rvc-model-arknights,Current Arknights RVC Models. Will be more later.; List:; Goldenglow (pink korone for lyfe(4m) <3) (RVC v1/v2); W; Angelina (v2) (s/o to henerum for introducing me to arknights yo),
redpajama-3b-ggml,Text Generation,Transformers,English,apache-2.0,,8,,70,39536.65561,,https://huggingface.co/rustformers/redpajama-3b-ggml,"RedPajama-INCITE-Base-3B-v1 was developed by Together and leaders from the open-source AI community including Ontocord.ai, ETH DS3Lab, AAI CERC, Universit¨¦ de Montr¨¦al, MILA - Qu¨¦bec AI Institute, Stanford Center for Research on Foundation Models (CRFM), Stanford Hazy Research research group and LAION. 
The training was done on 3,072 V100 GPUs provided as part of the INCITE 2023 project on Scalable Foundation Models for Transferrable Generalist AI, awarded to MILA, LAION, and EleutherAI in fall 2022, with support from the Oak Ridge Leadership Computing Facility (OLCF) and INCITE program. ; Via pip: pip install llm-rs; Download the installer at www.localai.app.; Download your preferred model and place it in the ""models"" directory. Subsequently, you can start a chat session with your model directly from the interface.",Natural Language Processing
chilloutmix_inpaint,,,,,,2,,0,4372.481445,,https://huggingface.co/jansonkong/chilloutmix_inpaint,"No model card; New: Create and edit this model card directly on the website!; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
BLOOMChat-176B-v1-GGML-q4,,,,other,,3,,0,0.001467247,,https://huggingface.co/jeff31415/BLOOMChat-176B-v1-GGML-q4,"Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
chronos-13b,Text Generation,PyTorch; Transformers,,other,,28,,286,26995.01301,,https://huggingface.co/elinas/chronos-13b,"This is the fp16 PyTorch / HF version of chronos-13b; This model is primarily focused on chat, roleplay, and storywriting, but can accomplish other tasks such as simple reasoning and coding.; Chronos generates very long outputs with coherent text, largely due to the human inputs it was trained on.; This model uses Alpaca formatting, so for optimal model performance, use:; 4bit Quantized version",Natural Language Processing
falcon-7b-instruct-GPTQ,Text Generation,Transformers,English,apache-2.0,https://arxiv.org/pdf/2205.14135.pdf; https://arxiv.org/pdf/1911.02150.pdf; https://arxiv.org/pdf/2005.14165.pdf; https://arxiv.org/pdf/2104.09864.pdf,53,tiiuae/falcon-refinedweb,9582,6085.357302,,https://huggingface.co/TheBloke/falcon-7b-instruct-GPTQ,Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; This repo contains an experimantal GPTQ 4bit model for Falcon-7B-Instruct.; It is the result of quantising to 4bit using AutoGPTQ.; Please note that performance with this GPTQ is currently very slow with AutoGPTQ.,Natural Language Processing
mms-1b-all,Automatic Speech Recognition,PyTorch; Safetensors; Transformers,158 languages,cc-by-nc-4.0,https://arxiv.org/pdf/2305.13516.pdf,44,google/fleurs,116798,417.6359961,24,https://huggingface.co/facebook/mms-1b-all,"This checkpoint is a model fine-tuned for multi-lingual ASR and part of Facebook's Massive Multilingual Speech project.
This checkpoint is based on the Wav2Vec2 architecture and makes use of adapter models to transcribe 1000+ languages.
The checkpoint consists of 1 billion parameters and has been fine-tuned from facebook/mms-1b on 1162 languages.; This MMS checkpoint can be used with Transformers to transcribe audio of 1107 different 
languages. Let's look at a simple example.; First, we install transformers and some other libraries; Note: In order to use MMS you need to have at least transformers >= 4.30 installed. If the 4.30 version
is not yet available on PyPI make sure to install transformers from 
source:; Next, we load a couple of audio samples via datasets. Make sure that the audio data is sampled to 16000 kHz.",Audio
InstructUIE,Text2Text Generation,PyTorch; Transformers,,openrail,,3,,161,46154.93173,,https://huggingface.co/ZWK/InstructUIE,"https://github.com/BeyonderXX/InstructUIE; Large language models have unlocked strong multi-task capabilities from reading instructive prompts.
However, recent studies have shown that existing large models still have difficulty with information extraction tasks. 
For example, gpt-3.5-turbo achieved an F1 score of 18.22 on the Ontonotes dataset, which is significantly lower than the state-of-the-art performance.
In this paper, we propose InstructUIE, a unified information extraction framework based on instruction tuning, which can uniformly model various information extraction tasks and capture the inter-task dependency.
To validate the proposed method, we introduce IE INSTRUCTIONS, a benchmark of 32 diverse information extraction datasets in a unified text-to-text format with expert-written instructions.
Experimental results demonstrate that our method achieves comparable performance to Bert in supervised settings and significantly outperforms the state-of-the-art and gpt3.5 in zero-shot settings.; Our models are trained and evaluated on IE INSTRUCTIONS. 
You can download the data from Baidu NetDisk or Google Drive.; If you are using InstructUIE for your work, please kindly cite our paper:",Natural Language Processing
mms-1b-fl102,Automatic Speech Recognition,PyTorch; Safetensors; Transformers,158 languages,cc-by-nc-4.0,https://arxiv.org/pdf/2305.13516.pdf,5,google/fleurs,658849,454.4085156,2,https://huggingface.co/facebook/mms-1b-fl102,"This checkpoint is a model fine-tuned for multi-lingual ASR and part of Facebook's Massive Multilingual Speech project.
This checkpoint is based on the Wav2Vec2 architecture and makes use of adapter models to transcribe 100+ languages.
The checkpoint consists of 1 billion parameters and has been fine-tuned from facebook/mms-1b on 102 languages of Fleurs.; This MMS checkpoint can be used with Transformers to transcribe audio of 1107 different 
languages. Let's look at a simple example.; First, we install transformers and some other libraries; Note: In order to use MMS you need to have at least transformers >= 4.30 installed. If the 4.30 version
is not yet available on PyPI make sure to install transformers from 
source:; Next, we load a couple of audio samples via datasets. Make sure that the audio data is sampled to 16000 kHz.",Audio
wizardLM-13B-1.0-fp16,Text Generation,PyTorch; Transformers,,other,https://arxiv.org/pdf/2304.12244.pdf,7,,20459,26657.09859,,https://huggingface.co/TheBloke/wizardLM-13B-1.0-fp16,Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are fp16 unquantised format model files for WizardLM 13B 1.0.; It is the result of merging the deltas provided in the above repo.; Join me at: https://discord.gg/UBgz4VXf,Natural Language Processing
WebGLM,Text2Text Generation,PyTorch; Transformers,English,,https://arxiv.org/pdf/2306.07906.pdf,34,,1799,40429.13717,4,https://huggingface.co/THUDM/WebGLM,"
  ? Paper (KDD 2023) 
  | 
  ? Github Repo
; WebGLM aspires to provide an efficient and cost-effective web-enhanced question-answering system using the 10-billion-parameter General Language Model (GLM). It aims to improve real-world application deployment by integrating web search and retrieval capabilities into the pre-trained language model.; WebGLM is built by the following parts:; This repo is the implementation of Bootstrap Generator.; See our Github Repo for more detailed usage.",Natural Language Processing
sentence-transformers-multilingual-e5-base,Sentence Similarity,PyTorch; Sentence Transformers,,,,4,,307,1158.819045,,https://huggingface.co/embaas/sentence-transformers-multilingual-e5-base,This is a the sentence-transformers version of the intfloat/multilingual-e5-base model: It maps sentences & paragraphs to a 768 dimensional dense vector space and can be used for tasks like clustering or semantic search.; Using this model becomes easy when you have sentence-transformers installed:; Then you can use the model like this:; You can use the embaas API to encode your input. Get your free API key from embaas.io; You can find the MTEB results here.,Natural Language Processing
BigTranslate,Text Generation,PyTorch; Transformers,,lgpl-3.0,https://arxiv.org/pdf/2305.18098.pdf,22,,248,27106.10937,,https://huggingface.co/James-WYang/BigTranslate,"Large language models (LLMs) demonstrate promising translation performance among various natural languages. However, many LLMs especially the open-sourced ones, such as BLOOM and LLaMA, are English-dominant and support only dozens of natural languages, making the potential of LLMs on language translation less explored. In this work, we present BigTranslate which adapts LLaMA that covers only 20 languages and enhances it with multilingual translation capability on more than 100 languages. BigTranslate is built upon LLaMA-13B and it is optimized in three steps. First, we continue training LLaMA with massive Chinese monolingual data. Second, we continue training the model with a large-scale parallel dataset that covers 102 natural languages. Third, we instruct-tune the foundation model with multilingual translation instructions, leading to our BigTranslate model. The preliminary experiments on multilingual translation show that BigTranslate performs comparably with 
ChatGPT and Google Translate in many languages and even outperforms ChatGPT in 8 language pairs. We release the BigTranslate model and hope it can advance the research progress.; More Details can be found at https://github.com/ZNLP/BigTranslate and https://arxiv.org/abs/2305.18098",Natural Language Processing
CFMix,,,,,,3,,0,11612.16199,,https://huggingface.co/xiaozhahai/CFMix,"Anime model baesd on Counterfeit-V2.5.

; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
falcon-40b-openassistant-peft,Text Generation,PEFT,,apache-2.0,https://arxiv.org/pdf/2106.09685.pdf; https://arxiv.org/pdf/2305.14314.pdf,39,OpenAssistant/oasst1,228,67.50788593,,https://huggingface.co/dfurman/falcon-40b-openassistant-peft,"Falcon-40b-openassistant-peft is a chatbot model for dialogue generation. It was built by fine-tuning Falcon-40B on the OpenAssistant/oasst1 dataset. This repo only includes the LoRA adapters from fine-tuning with ?'s peft package. ; The model was fine-tuned in 4-bit precision using peft adapters, transformers, and bitsandbytes. Training relied on a method called ""Low Rank Adapters"" (LoRA), specifically the QLoRA variant. The run took approximately 10 hours and was executed on a workstation with a single A100-SXM NVIDIA GPU with 37 GB of available memory. See attached Colab Notebook for the code and hyperparams used to train the model. ; May 30, 2023; To prompt the chat model, use the following format:; Prompter:",Natural Language Processing
Ziya-BLIP2-14B-Visual-v1,Visual Question Answering,PyTorch; Transformers,English; Chinese,gpl-3.0,https://arxiv.org/pdf/2210.08590.pdf,24,,167,4485.326748,1,https://huggingface.co/IDEA-CCNL/Ziya-BLIP2-14B-Visual-v1,"Ziya-Visual¶àÄ£Ì¬´óÄ£ÐÍ»ùÓÚ½ª×ÓÑÀÍ¨ÓÃ´óÄ£ÐÍV1ÑµÁ·£¬¾ßÓÐÊÓ¾õÎÊ´ðºÍ¶Ô»°ÄÜÁ¦¡£½ñÄê3ÔÂ·ÝOpenAI·¢²¼¾ßÓÐÊ¶Í¼ÄÜÁ¦µÄ¶àÄ£Ì¬´óÄ£ÐÍGPT-4£¬ÒÅº¶µÄÊÇ£¬Ê±ÖÁ½ñÈÕ¾ø´ó²¿·ÖÓÃ»§Ò²¶¼»¹Ã»ÓÐÄÃµ½GPT-4ÊäÈëÍ¼Æ¬µÄÈ¨ÏÞ£¬Ziya-Visual²Î¿¼ÁËMini-GPT4¡¢LLaVAµÈÓÅÐãµÄ¿ªÔ´ÊµÏÖ£¬²¹ÆëÁËZiyaµÄÊ¶Í¼ÄÜÁ¦£¬Ê¹ÖÐÎÄÓÃ»§ÈºÌå¿ÉÒÔÌåÑéµ½½áºÏÊÓ¾õºÍÓïÑÔÁ½´óÄ£Ì¬µÄ´óÄ£ÐÍµÄ×¿Ô½ÄÜÁ¦¡£; The Ziya-Visual multimodal Big Model is based on the Ziya-LLaMA-13B-v1 training and has visual question and answer and dialogue capabilities. In March this year, OpenAI released GPT-4, a multimodal big model with image recognition capabilities. Unfortunately, to date, the vast majority of users have not yet been given access to GPT-4 for image input, so Ziya-Visual refers to Mini-GPT4, LLaVA and other excellent open source implementations to complement Ziya's image recognition capabilities, so that the Chinese user community can experience the superior capabilities of a large model combining two modalities: visual and language.; Õâ¸öÀý×ÓÕ¹Ê¾ÁËÄ£ÐÍµÄÊ¶Í¼ÄÜÁ¦¡¢ÖªÊ¶ÄÜÁ¦ºÍ´´×÷ÄÜÁ¦¡£Ê×ÏÈµÚÒ»¸öÎÊÌâÖÐ£¬Ä£ÐÍÊ¶±ð³öÁËÍ¼Æ¬ÖÐÊÇµçÓ°¡¶Ì©Ì¹Äá¿ËºÅ¡·µÄ³¡¾°£¬²¢¸ø³öµçÓ°µ¼ÑÝ¡¢·¢²¼Ê±¼ä¡¢½±Ïî³É¾ÍµÈÐÅÏ¢£»µÚ¶þ¸öÎÊÌâ£¬Ä£ÐÍ¸ù¾ÝÓÃ»§µÄÐèÇó´´×÷ÁËÒ»Ê×ÏÖ´ú°®ÇéÊ«¡£; This example demonstrates the model's ability to read pictures, its knowledge and its ability to compose. Firstly in the first problem, the model identifies the picture as a scene from the movie Titanic and gives information about the movie director, release date and award achievements; in the second problem, the model creates a modern love poem based on the user's needs.; ",Multimodel
WizardLM-Uncensored-SuperCOT-StoryTelling-30b,Text Generation,PyTorch; Transformers,,,,23,,142,66613.6857,,https://huggingface.co/Monero/WizardLM-Uncensored-SuperCOT-StoryTelling-30b,"This model is a triple model merge of WizardLM Uncensored+CoT+Storytelling, resulting in a comprehensive boost in reasoning and story writing capabilities.; To allow all output, at the end of your prompt add ### Certainly!; You've become a compendium of knowledge on a vast array of topics. ; Lore Mastery is an arcane tradition fixated on understanding the underlying mechanics of magic. It is the most academic of all arcane traditions. The promise of uncovering new knowledge or proving (or discrediting) a theory of magic is usually required to rouse its practitioners from their laboratories, academies, and archives to pursue a life of adventure. Known as savants, followers of this tradition are a bookish lot who see beauty and mystery in the application of magic. The results of a spell are less interesting to them than the process that creates it. Some savants take a haughty attitude toward those who follow a tradition focused on a single school of magic, seeing them as provincial and lacking the sophistication needed to master true magic. Other savants are generous teachers, countering ignorance and deception with deep knowledge and good humor.",Natural Language Processing
kullm-polyglot-12.8b-v2,Text Generation,PyTorch; Transformers,Korean,apache-2.0,,27,,3719,26564.26462,,https://huggingface.co/nlpai-lab/kullm-polyglot-12.8b-v2,This model is a fine-tuned version of EleutherAI/polyglot-ko-12.8b on a KULLM v2 ; Detail Codes are available at KULLM Github Repository; The following hyperparameters were used during training:,Natural Language Processing
h2ogpt-gm-oasst1-en-2048-falcon-7b-v2,Conversational,PyTorch; Transformers,English,apache-2.0,,52,OpenAssistant/oasst1,20932,14779.13042,8,https://huggingface.co/h2oai/h2ogpt-gm-oasst1-en-2048-falcon-7b-v2,"This model was trained using H2O LLM Studio.; To use the model with the transformers library on a machine with GPUs, first make sure you have the transformers, accelerate, torch and einops libraries installed.; You can print a sample prompt after the preprocessing step to see how it is feed to the tokenizer:; Alternatively, you can download h2oai_pipeline.py, store it alongside your notebook, and construct the pipeline yourself from the loaded model and tokenizer:; You may also construct the pipeline from the loaded model and tokenizer yourself and consider the preprocessing steps:",Natural Language Processing
yayoi_mix,Text-to-Image,,Japanese; English,creativeml-openrail-m,,19,,0,28857.18106,,https://huggingface.co/Kotajiro/yayoi_mix,"±¾¥â¥Ç¥ë¤Ï¡ºCreativeML Open RAIL-M¡»¤Î¹ ì¤Ç¥é¥¤¥ó¥»¥ó¥¹¤µ¤ì¤Þ¤¹¡£ ±¾¥â¥Ç¥ë¤òÊ¹ÓÃ¤·¤¿ÉÏ¤Ç¤Îî}¤Ëév¤·¤Æ¤Ï¡¢µ±·½¤ÏÒ»ÇÐØÈÎ¤ò³Ö¤Á¤Þ¤»¤ó¡£¤´ÁË³Ð¤ÎÉÏ¤´Ê¹ÓÃ¤¯¤À¤µ¤¤¡£ ; BraV6 https://huggingface.co/BanKaiPls/AsianModel; XXMix_9 https://civitai.com/models/47274/xxmix9; Soda Mix https://civitai.com/models/47507/soda-mix; ±¾¥â¥Ç¥ë¤âÊ¹ÓÃ¤·¤¿¥â¥Ç¥ë¤ÎÀûÓÃÌõ¼þ¤Ë¾¤¦ÐÎ¤Ë¤Ê¤ê¤Þ¤¹¤¬¡¢ÒÔÏÂ¤Ëév¤·¤Æ¤Ï¤ËÊ¹ÓÃ¤ò½ûÖ¹¤¤¤¿¤·¤Þ¤¹¡£
?±©Á¦µÄ¤Ê±í¬F
?¹Í¯¥Ý¥ë¥Î
?Î´³ÉÄêÕß¤ÎÐÔµÄ¤Ê±í¬F
?Î´³ÉÄêÕß¤ÎÐÔµÄ¤Ê±í¬F¡¢¤Þ¤¿¤ÏË®×Å¡¢ÏÂ×Å¡¢¤¢¤ë¤¤¤Ï¤½¤ì¤ËÊ¤º¤ëÈÝ×Ë±í¬F",Multimodel
SoulChat,Feature Extraction,PyTorch; Transformers,Chinese,apache-2.0,,6,,283,13744.92634,,https://huggingface.co/scutcyr/SoulChat,"SoulChat ? | 
 ? BianQue? |; »ùÓÚÖ÷¶¯½¡¿µµÄÖ÷¶¯ÐÔ¡¢Ô¤·ÀÐÔ¡¢¾«È·ÐÔ¡¢¸öÐÔ»¯¡¢¹²½¨¹²Ïí¡¢×ÔÂÉÐÔÁù´óÌØÕ÷£¬»ª¹¤Î´À´¼¼ÊõÑ§Ôº-¹ã¶«Ê¡Êý×ÖÂÏÉúÈËÖØµãÊµÑéÊÒ¿ªÔ´ÁËÖÐÎÄÁìÓòÉú»î¿Õ¼äÖ÷¶¯½¡¿µ´óÄ£ÐÍ»ù×ùProactiveHealthGPT£¬°üÀ¨£º; ÎÒÃÇÆÚÍû£¬Éú»î¿Õ¼äÖ÷¶¯½¡¿µ´óÄ£ÐÍ»ù×ùProactiveHealthGPT ¿ÉÒÔ°ïÖúÑ§Êõ½ç¼ÓËÙ´óÄ£ÐÍÔÚÂýÐÔ²¡¡¢ÐÄÀí×ÉÑ¯µÈÖ÷¶¯½¡¿µÁìÓòµÄÑÐ¾¿ÓëÓ¦ÓÃ¡£±¾ÏîÄ¿Îª ÐÄÀí½¡¿µ´óÄ£ÐÍÁéÐÄ£¨SoulChat£© ¡£;    ÎÒÃÇµ÷ÑÐÁËµ±Ç°³£¼ûµÄÐÄÀí×ÉÑ¯Æ½Ì¨£¬·¢ÏÖ£¬ÓÃ»§Ñ°ÇóÔÚÏßÐÄÀí°ïÖúÊ±£¬Í¨³£ÐèÒª½øÐÐ½Ï³¤Æª·ùµØ½øÐÐ×ÔÎÒÃèÊö£¬È»ºóÌá¹©°ïÖúµÄÐÄÀí×ÉÑ¯Ê¦Í¬ÑùµØÌá¹©³¤Æª·ùµÄ»Ø¸´£¨¼ûhttps://github.com/scutcyr/SoulChat/blob/main/figure/single_turn.png£©£¬È±Ê§ÁËÒ»¸ö½¥½øÊ½µÄÇãËß¹ý³Ì¡£µ«ÊÇ£¬ÔÚÊµ¼ÊµÄÐÄÀí×ÉÑ¯¹ý³Ìµ±ÖÐ£¬ÓÃ»§ºÍÐÄÀí×ÉÑ¯Ê¦Ö®¼ä»á´æÔÚ¶àÂÖ´ÎµÄ¹µÍ¨¹ý³Ì£¬ÔÚ¸Ã¹ý³Ìµ±ÖÐ£¬ÐÄÀí×ÉÑ¯Ê¦»áÒýµ¼ÓÃ»§½øÐÐÇãËß£¬²¢ÇÒÌá¹©¹²Çé£¬ÀýÈç£º¡°·Ç³£°ô¡±¡¢¡°ÎÒÀí½âÄãµÄ¸ÐÊÜ¡±¡¢¡°µ±È»¿ÉÒÔ¡±µÈµÈ¡£;    ¿¼ÂÇµ½µ±Ç°Ê®·ÖÇ·È±¶àÂÖ¹²Çé¶Ô»°Êý¾Ý¼¯£¬ÎÒÃÇÒ»·½Ãæ£¬¹¹½¨ÁË³¬¹ý15Íò¹æÄ£µÄ µ¥ÂÖ³¤ÎÄ±¾ÐÄÀí×ÉÑ¯Ö¸ÁîÓë´ð°¸£¨SoulChatCorpus-single_turn£© £¬»Ø´ðÊýÁ¿³¬¹ý50Íò£¨Ö¸ÁîÊýÊÇµ±Ç°µÄ³£¼ûµÄÐÄÀí×ÉÑ¯Êý¾Ý¼¯ PsyQA µÄ6.7±¶£©£¬²¢ÀûÓÃChatGPTÓëGPT4£¬Éú³É×Ü¹²Ô¼100ÍòÂÖ´ÎµÄ ¶àÂÖ»Ø´ðÊý¾Ý£¨SoulChatCorpus-multi_turn£© ¡£ÌØ±ðµØ£¬ÎÒÃÇÔÚÔ¤ÊµÑéÖÐ·¢ÏÖ£¬´¿µ¥ÂÖ³¤±¾ÎÄÇý¶¯µÄÐÄÀí×ÉÑ¯Ä£ÐÍ»á²úÉúÈÃÓÃ»§¸Ðµ½Ñá·³µÄÎÄ±¾³¤¶È£¬¶øÇÒ²»¾ß±¸Òýµ¼ÓÃ»§ÇãËßµÄÄÜÁ¦£¬´¿¶àÂÖÐÄÀí×ÉÑ¯¶Ô»°Êý¾ÝÇý¶¯µÄÐÄÀí×ÉÑ¯Ä£ÐÍÔòÈõ»¯ÁËÄ£ÐÍµÄ½¨ÒéÄÜÁ¦£¬Òò´Ë£¬ÎÒÃÇ»ìºÏSoulChatCorpus-single_turnºÍSoulChatCorpus-multi_turn¹¹Ôì³É³¬¹ý120Íò¸öÑù±¾µÄ µ¥ÂÖÓë¶àÂÖ»ìºÏµÄ¹²Çé¶Ô»°Êý¾Ý¼¯SoulChatCorpus ¡£ËùÓÐÊý¾Ý²ÉÓÃ¡°ÓÃ»§£ºxxx\nÐÄÀí×ÉÑ¯Ê¦£ºxxx\nÓÃ»§£ºxxx\nÐÄÀí×ÉÑ¯Ê¦£º¡±µÄÐÎÊ½Í³Ò»ÎªÒ»ÖÖÖ¸Áî¸ñÊ½¡£",Multimodel
Ziya-LLaMA-13B-v1.1,Text Generation,PyTorch; Transformers,English; Chinese,gpl-3.0,https://arxiv.org/pdf/2210.08590.pdf,34,,299,26194.71749,,https://huggingface.co/IDEA-CCNL/Ziya-LLaMA-13B-v1.1,"£¨LLaMAÈ¨ÖØµÄÐí¿ÉÖ¤ÏÞÖÆ£¬ÎÒÃÇÎÞ·¨Ö±½Ó·¢²¼ÍêÕûµÄÄ£ÐÍÈ¨ÖØ£¬ÓÃ»§ÐèÒª²Î¿¼Ê¹ÓÃËµÃ÷½øÐÐºÏ²¢); ÎÒÃÇ¶ÔZiya-LLaMA-13B-v1Ä£ÐÍ½øÐÐ¼ÌÐøÓÅ»¯£¬ÍÆ³ö¿ªÔ´°æ±¾Ziya-LLaMA-13B-v1.1¡£Í¨¹ýµ÷ÕûÎ¢µ÷Êý¾ÝµÄ±ÈÀýºÍ²ÉÓÃ¸üÓÅµÄÇ¿»¯Ñ§Ï°²ßÂÔ£¬±¾°æ±¾ÔÚÎÊ´ð×¼È·ÐÔ¡¢ÊýÑ§ÄÜÁ¦ÒÔ¼°°²È«ÐÔµÈ·½ÃæµÃµ½ÁËÌáÉý£¬ÏêÏ¸ÄÜÁ¦·ÖÎöÈçÏÂÍ¼ËùÊ¾¡£; We have further optimized the Ziya-LLaMA-13B-v1 model and released the open-source version Ziya-LLaMA-13B-v1.1. By adjusting the proportion of fine-tuning data and adopting a better reinforcement learning strategy, this version has achieved improvements in question-answering accuracy, mathematical ability, and safety, as shown in the following figure in detail.; Çë²Î¿¼Ziya-LLaMA-13B-v1µÄÊ¹ÓÃËµÃ÷¡£; ×¢Òâ£ººÏ²¢ºóÄ¬ÈÏ»áÉú³É3¸ö.binÎÄ¼þ£¬md5ÖµÒÀ´ÎÎª59194d10b1553d66131d8717c9ef03d6¡¢cc14eebe2408ddfe06b727b4a76e86bb¡¢4a8495d64aa06aee96b5a1cc8cc55fa7¡£",Natural Language Processing
open_llama_7b,Text Generation,PyTorch; Transformers,,apache-2.0,,91,togethercomputer/RedPajama-Data-1T,46892,13804.08085,6,https://huggingface.co/openlm-research/open_llama_7b,"In this repo, we present a permissively licensed open source reproduction of Meta AI's LLaMA large language model. We are releasing a 7B and 3B model trained on 1T tokens, as well as the preview of a 13B model trained on 600B tokens. We provide PyTorch and JAX weights of pre-trained OpenLLaMA models, as well as evaluation results and comparison against the original LLaMA models. Please see the project homepage of OpenLLaMA for more details.; We release the weights in two formats: an EasyLM format to be use with our EasyLM framework, and a PyTorch format to be used with the Hugging Face transformers library. Both our training framework EasyLM and the checkpoint weights are licensed permissively under the Apache 2.0 license.; Preview checkpoints can be directly loaded from Hugging Face Hub. Please note that it is advised to avoid using the Hugging Face fast tokenizer for now, as we¡¯ve observed that the auto-converted fast tokenizer sometimes gives incorrect tokenizations. This can be achieved by directly using the LlamaTokenizer class, or passing in the use_fast=False option for the AutoTokenizer class. See the following example for usage.; For more advanced usage, please follow the transformers LLaMA documentation.; The model can be evaluated with lm-eval-harness. However, due to the aforementioned tokenizer issue, we need to avoid using the fast tokenizer to obtain the correct results. This can be achieved by passing in use_fast=False to this part of lm-eval-harness, as shown in the example below:",Natural Language Processing
chinese-llama-lora-33b,,,Chinese,apache-2.0,,7,,0,2970.342609,,https://huggingface.co/ziqingyang/chinese-llama-lora-33b,"This repo contains the tokenizer, Chinese-LLaMA LoRA weights and configs for Chinese-LLaMA-Alpaca; Instructions for using the weights can be found at https://github.com/ymcui/Chinese-LLaMA-Alpaca.; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
chinese-alpaca-lora-33b,,,Chinese,apache-2.0,,10,,0,2970.343168,,https://huggingface.co/ziqingyang/chinese-alpaca-lora-33b,"This repo contains the tokenizer, Chinese-Alpaca LoRA weights and configs for Chinese-LLaMA-Alpaca; Instructions for using the weights can be found at https://github.com/ymcui/Chinese-LLaMA-Alpaca.; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
ct2fast-falcon-7b-sft-top1-696,Text Generation,Transformers,4 languages,apache-2.0,,3,OpenAssistant/oasst1,53,7100.138153,,https://huggingface.co/michaelfeil/ct2fast-falcon-7b-sft-top1-696,"Speedup inference while reducing memory by 2x-4x using int8 inference in C++ on CPU or GPU.; quantized version of OpenAssistant/falcon-7b-sft-top1-696; Checkpoint compatible to ctranslate2>=3.16.0
and hf-hub-ctranslate2>=2.10.0; Converted on 2023-06-16 using; This is just a quantized version. Licence conditions are intended to be idential to original huggingface repo.",Natural Language Processing
AquilaChat-7B,,PyTorch; Transformers,,other,,27,,616,14949.39412,,https://huggingface.co/BAAI/AquilaChat-7B,"; 
English |
        ¼òÌåÖÐÎÄ
; Aquila Language Model is the first open source language model that supports both Chinese and English knowledge, commercial license agreements, and compliance with domestic data regulations.; ? Supports open source commercial licenses. The source code of the Aquila series models is based on the Apache 2.0 agreement, while the model weight is based on the BAAI Aquila Model License Agreement. Users can use it for commercial purposes as long as they meet the licensing restrictions.; ?? Possesses Chinese and English knowledge. The Aquila series model is trained from scratch on a high-quality corpus of Chinese and English languages, with Chinese corpora accounting for about 40%, ensuring that the model accumulates native Chinese world knowledge during the pre-training phase, rather than translated knowledge.",
starcoderplus-GGML,Text Generation,Transformers,,bigcode-openrail-m,https://arxiv.org/pdf/1911.02150.pdf; https://arxiv.org/pdf/2205.14135.pdf; https://arxiv.org/pdf/2207.14255.pdf; https://arxiv.org/pdf/2305.06161.pdf,22,bigcode/the-stack-dedup; tiiuae/falcon-refinedweb,79,71782.41241,,https://huggingface.co/TheBloke/starcoderplus-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Bigcode's StarcoderPlus.; Please note that these GGMLs are not compatible with llama.cpp, or currently with text-generation-webui. Please see below for a list of tools known to work with these model files.; These files are not compatible with llama.cpp.",Natural Language Processing
starcoder-GGML,Text Generation,Transformers,,bigcode-openrail-m,https://arxiv.org/pdf/1911.02150.pdf; https://arxiv.org/pdf/2205.14135.pdf; https://arxiv.org/pdf/2207.14255.pdf; https://arxiv.org/pdf/2305.06161.pdf,12,bigcode/the-stack-dedup,24,71782.4171,,https://huggingface.co/TheBloke/starcoder-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Bigcode's Starcoder.; Please note that these GGMLs are not compatible with llama.cpp, or currently with text-generation-webui. Please see below for a list of tools known to work with these model files.; These files are not compatible with llama.cpp.",Natural Language Processing
Minotaur-13b-Landmark,Text Generation,PyTorch; Transformers,,other,,22,,49,26657.14239,,https://huggingface.co/eugenepentland/Minotaur-13b-Landmark,Minotaur-13B with 10k+ context using Landmark Attention.; Model generated using Landmark-Attention-QLoRA; https://github.com/eugenepentland/landmark-attention-qlora; A merge of the following models:; https://huggingface.co/openaccess-ai-collective/minotaur-13b,Natural Language Processing
chronos-hermes-13b,Text Generation,PyTorch; Transformers,,other,,17,,14396,26634.76483,,https://huggingface.co/Austism/chronos-hermes-13b,"(chronos-13b + Nous-Hermes-13b) 75/25 merge; This has the aspects of chronos's nature to produce long, descriptive outputs. But with additional coherency and an ability to better obey instructions. Resulting in this model having a great ability to produce evocative storywriting and follow a narrative.; This mix contains alot of chronos's writing style and 'flavour' with far less tendency of going AWOL and spouting nonsensical babble.; This result was much more successful than my first chronos merge.",Natural Language Processing
chronos-hermes-13B-GGML,,PyTorch,,other,,24,,0,49121.29099,,https://huggingface.co/TheBloke/chronos-hermes-13B-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Austism's Chronos Hermes 13B.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; I have quantized these 'original' quantisation methods using an older version of llama.cpp so that they remain compatible with llama.cpp as of May 19th, commit 2d5db48.",
aquilachat-7b,Text Generation,PyTorch; Transformers,Chinese,,,17,,405,14945.56959,2,https://huggingface.co/qhduan/aquilachat-7b,"https://github.com/FlagAI-Open/FlagAI/tree/master/examples/Aquila; Aquila-7BºÍAquila-33B¿ªÔ´Ä£ÐÍÊ¹ÓÃ ÖÇÔ´AquilaÏµÁÐÄ£ÐÍÐí¿ÉÐ­Òé, Ô­Ê¼´úÂë»ùÓÚApache Licence 2.0¡£",Natural Language Processing
WebGLM-2B,Feature Extraction,PyTorch; Transformers,English,,https://arxiv.org/pdf/2306.07906.pdf,18,,4422,3933.723539,,https://huggingface.co/THUDM/WebGLM-2B,"
  ? Paper (KDD 2023) 
  | 
  ? Github Repo
; WebGLM-2B aspires to provide an efficient and cost-effective web-enhanced question-answering system using the 2-billion-parameter General Language Model (GLM). It aims to improve real-world application deployment by integrating web search and retrieval capabilities into the pre-trained language model.; WebGLM is built by the following parts:; This repo is the implementation of Bootstrap Generator.; See our Github Repo for more detailed usage.",Multimodel
bert-base-chinese-finetuning-financial-news-sentiment-v2,Text Classification,PyTorch; Transformers,Chinese,,,2,,306,409.110805,,https://huggingface.co/hw2942/bert-base-chinese-finetuning-financial-news-sentiment-v2,,Natural Language Processing
flan-t5-base-squad2,Question Answering,PyTorch; Safetensors; Transformers,English,mit,,2,squad_v2; squad,278,1787.216172,,https://huggingface.co/sjrhuschlee/flan-t5-base-squad2,"This is the flan-t5-base model, fine-tuned using the SQuAD2.0 dataset. It's been trained on question-answer pairs, including unanswerable questions, for the task of Extractive Question Answering.; UPDATE: With transformers version 4.31.0 the use_remote_code=True is no longer necessary and if used will cause AutoModelForQuestionAnswering.from_pretrained() to not work properly.; NOTE: The <cls> token must be manually added to the beginning of the question for this model to work properly.
It uses the <cls> token to be able to make ""no answer"" predictions.
The t5 tokenizer does not automatically add this special token which is why it is added manually.; Language model: flan-t5-baseLanguage: EnglishDownstream-task: Extractive QATraining data: SQuAD 2.0Eval data: SQuAD 2.0Infrastructure: 1x NVIDIA 3070  ; The following hyperparameters were used during training:",Natural Language Processing
falcon-40b-instruct-GGML,,Transformers,English,apache-2.0,https://arxiv.org/pdf/2205.14135.pdf; https://arxiv.org/pdf/1911.02150.pdf; https://arxiv.org/pdf/2005.14165.pdf; https://arxiv.org/pdf/2104.09864.pdf; https://arxiv.org/pdf/2306.01116.pdf,50,tiiuae/falcon-refinedweb,274,279244.8165,3,https://huggingface.co/TheBloke/falcon-40b-instruct-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGCC format model files for Falcon 40B Instruct.; These files will not work in llama.cpp, text-generation-webui or KoboldCpp.; GGCC is a new format created in a new fork of llama.cpp that introduced this new Falcon GGML-based support: cmp-nc/ggllm.cpp.",
baichuan-7b-sft,Text Generation,PyTorch; Transformers,Chinese; English,apache-2.0,,56,tatsu-lab/alpaca; sahil2801/CodeAlpaca-20k,365,14338.1683,,https://huggingface.co/hiyouga/baichuan-7b-sft,A bilingual instruction-tuned LoRA model of https://huggingface.co/baichuan-inc/baichuan-7B; Please follow the baichuan-7B License to use this model.; Usage:; You could also alternatively launch a CLI demo by using the script in https://github.com/hiyouga/LLaMA-Efficient-Tuning; You could reproduce our results with the following scripts using LLaMA-Efficient-Tuning:,Natural Language Processing
airoboros-7b-gpt4-1.2,Text Generation,PyTorch; Transformers,,cc-by-nc-4.0,,27,jondurbin/airoboros-gpt4-1.2,166,27599.16126,,https://huggingface.co/jondurbin/airoboros-7b-gpt4-1.2,"This is a qlora fine-tuned 7b parameter LlaMa model, using completely synthetic training data created gpt4 via https://github.com/jondurbin/airoboros; This is mostly an extension of 1.1, but with thousands of new training data and an update to allow ""PLAINFORMAT"" at the end of coding prompts to just print the code without backticks or explanations/usage/etc.; The dataset used to fine-tune this model is available here, with a specific focus on:; This model was fine-tuned with a fork of qlora, which among other things was updated to use a slightly modified vicuna template to be compatible with the previous versions:; So in other words, it's the preamble/system prompt, followed by a single space, then ""USER: "" (single space after colon) then the prompt (which can have multiple lines, spaces, whatever), then a single space, followed by ""ASSISTANT: "" (with a single space after the colon).",Natural Language Processing
Anima33B-merged,Conversational,PyTorch; Transformers,Chinese,other,https://arxiv.org/pdf/2305.14314.pdf,18,Chinese-Vicuna/guanaco_belle_merge_v1.0,3946,66632.25358,,https://huggingface.co/lyogavin/Anima33B-merged,; µÚÒ»¸ö¿ªÔ´µÄ»ùÓÚQLoRAµÄ33BÖÐÎÄ´óÓïÑÔÄ£ÐÍ the First QLoRA based 33B fully open-source Chinese LLM; Çë×¢Òâ£º±¾modelµÄLICENSE±È½ÏÌØÊâ£¬ÇëÈ·ÈÏÄãµÄÊ¹ÓÃ³¡¾°·ûºÏ´ËLICENSE¡£; https://github.com/lyogavin/Anima; AnimaÄ£ÐÍ»ùÓÚQLoRA¿ªÔ´µÄ33B guanacoÑµÁ·ÁË10000 steps¡£ÑµÁ·Ê¹ÓÃÒ»¸öH100 GPU¡£,Natural Language Processing
Rerender,,,,other,,9,,0,5.058840294,,https://huggingface.co/Anonymous-sub/Rerender,"Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
AIGEN_v1.4_diffusers,Text-to-Image,Diffusers,,other,,4,,1267,2181.122349,3,https://huggingface.co/digiplay/AIGEN_v1.4_diffusers,Model info : ; https://civitai.com/models/90045/aigen-14; Sample images I made:; ,Multimodel
layoutlm-invoices,Document Question Answering,PyTorch; Safetensors; Transformers,English,cc-by-nc-sa-4.0,,10,,201426,1024.649988,2,https://huggingface.co/magorshunov/layoutlm-invoices,"This is a fine-tuned version of the multi-modal LayoutLM model for the task of question answering on invoices and other documents. It has been fine-tuned on a proprietary dataset of
invoices as well as both SQuAD2.0 and DocVQA for general comprehension.; Unlike other QA models, which can only extract consecutive tokens (because they predict the start and end of a sequence), this model can predict longer-range, non-consecutive sequences with an additional
classifier head. For example, QA models often encounter this failure mode:; ; However this model is able to predict non-consecutive tokens and therefore the address correctly:; ",Multimodel
kandinsky-2-2-decoder-inpaint,Text-to-Image,Diffusers,,apache-2.0,,5,,1058,0.006788063,1,https://huggingface.co/kandinsky-community/kandinsky-2-2-decoder-inpaint,"Kandinsky inherits best practices from Dall-E 2 and Latent diffusion while introducing some new ideas.; It uses the CLIP model as a text and image encoder,  and diffusion image prior (mapping) between latent spaces of CLIP modalities. This approach increases the visual performance of the model and unveils new horizons in blending images and text-guided image manipulation.; The Kandinsky model is created by Arseniy Shakhmatov, Anton Razzhigaev, Aleksandr Nikolich, Igor Pavlov, Andrey Kuznetsov and Denis Dimitrov; Kandinsky 2.2 is available in diffusers!; ",Multimodel
baichuan-7B-hf-megatron-states,,,,,,3,,0,0.00149868,,https://huggingface.co/genggui001/baichuan-7B-hf-megatron-states,"No model card; New: Create and edit this model card directly on the website!; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
WizardLM-7B-V1.0-Uncensored-GPTQ,Text Generation,Transformers,,other,,11,ehartford/WizardLM_evol_instruct_V2_196k_unfiltered_merged_split,1923,4098.343055,,https://huggingface.co/TheBloke/WizardLM-7B-V1.0-Uncensored-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for Eric Hartford's WizardLM-7B-V1.0-Uncensored.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; These models were quantised using hardware kindly provided by Latitude.sh.",Natural Language Processing
InstructPix2Pix-MagicBrush,,,,creativeml-openrail-m,https://arxiv.org/pdf/2306.10012.pdf,5,osunlp/MagicBrush,0,22835.20409,,https://huggingface.co/osunlp/InstructPix2Pix-MagicBrush,"To use the InstructPix2Pix checkpoint fine-tuned on MagicBrush, set up env with following command:; Download this checkpoint into checkpoints folder via; Then go back to the root folder and set up the running env following the InstructPix2Pix guidelines.; If you find this checkpoint useful, please consider citing our paper:; And prior work:",
falcoder-7b,Text Generation,PyTorch; Transformers,code,apache-2.0,,81,HuggingFaceH4/CodeAlpaca_20K,6018,14174.9589,8,https://huggingface.co/mrm8488/falcoder-7b,Falcon-7b fine-tuned on the CodeAlpaca 20k instructions dataset by using the method QLoRA with PEFT library.; Falcon 7B; CodeAlpaca_20K: contains 20K instruction-following data used for fine-tuning the Code Alpaca model.; TBA,Natural Language Processing
WizardLM-13B-V1.0-Uncensored-GGML,,,English,other,,18,ehartford/WizardLM_evol_instruct_V2_196k_unfiltered_merged_split,0,119316.4921,1,https://huggingface.co/TheBloke/WizardLM-13B-V1.0-Uncensored-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Eric Hartford's WizardLM-13b-V1.0-Uncensored.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; I have quantized these 'original' quantisation methods using an older version of llama.cpp so that they remain compatible with llama.cpp as of May 19th, commit 2d5db48.",
WizardLM-13B-V1.0-Uncensored-GPTQ,Text Generation,Transformers,English,other,,22,ehartford/WizardLM_evol_instruct_V2_196k_unfiltered_merged_split,2241,7631.142666,,https://huggingface.co/TheBloke/WizardLM-13B-V1.0-Uncensored-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for Eric Hartford's WizardLM-13b-V1.0-Uncensored.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; These models were quantised using hardware kindly provided by Latitude.sh.",Natural Language Processing
baichuan-vicuna-chinese-7b-gptq,Text Generation,Transformers,Chinese; English,,,9,anon8231489123/ShareGPT_Vicuna_unfiltered; QingyiSi/Alpaca-CoT; mhhmm/leetcode-solutions-python,811,4528.191091,,https://huggingface.co/fireballoon/baichuan-vicuna-chinese-7b-gptq,baichuan-vicuna-chinese-7b quantized with AutoGPTQ.; Ê¹ÓÃAutoGPTQÁ¿»¯µÄbaichuan-vicuna-chinese-7b¡£Ê¹ÓÃ7GÏÔ´æÊµÏÖÄ£ÐÍÍÆÀí¡£; Inference API has been turned off for this model.,Natural Language Processing
newmoon,Text-to-Image,Diffusers,English,cc,,6,,230,4362.243645,1,https://huggingface.co/mirav/newmoon,"NewMoon: Soft, bright colors. 
ChamomileTea: Darker, moodier colors. 
newmoon.yaml: sample prompt for animatediff





",Multimodel
alpaca-cleaned-llama-30b-bf16,Text Generation,PyTorch; Transformers,,,,2,,38,66634.06079,,https://huggingface.co/dsvv-cair/alpaca-cleaned-llama-30b-bf16,Method : QLORA; Dataset : yahma/alpaca-cleaned; Base model : huggyllama/llama-30b; Compute dtype : bfloat16,Natural Language Processing
Archive-Models,Text-to-Image,,,creativeml-openrail-m,,7,,0,0.006181641,,https://huggingface.co/Konichan/Archive-Models,"All models are not my authors, they are on pixai, civitai, huggingface. This is just an archive in case their models are removed from the sites. And a collection of models so that the models that I use are always at hand.; Triger : loli; If you want an alternate style, try using watercolor (medium); this model is very responsive to that tag. ; ; Flossy is a fusion model capable of creating an innocent, pure and naive girl.",Multimodel
airoboros-7B-gpt4-1.4-GPTQ,Text Generation,Transformers,,other,,6,,809,4630.83064,,https://huggingface.co/TheBloke/airoboros-7B-gpt4-1.4-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for Jon Durbin's Airoboros 7B GPT4 1.4.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; These models were quantised using hardware kindly provided by Latitude.sh.",Natural Language Processing
superhot-13b-16k-no-rlhf-test,,,,mit,,10,,0,26.30566105,,https://huggingface.co/kaiokendev/superhot-13b-16k-no-rlhf-test,"This is a second prototype of SuperHOT, a NSFW focused LoRA, this time with 16K context and no RLHF, using the same technique described in the github blog.
Tests have shown that the model does indeed leverage the extended context at 8K, so naturally, let's try going even further.; You will need to use either the monkeypatch or, if you are already using the monkeypatch, change the scaling factor to 0.125 and the maximum sequence length to 16384; I trained the LoRA with the following configuration: ; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
MahdeenSkyRVC,,,,openrail,,2,,0,1517.601936,,https://huggingface.co/MahdeenSky/MahdeenSkyRVC,"Currently Available Models:; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
my-rvc-models-collection,,,,openrail,,4,,0,1778.001544,,https://huggingface.co/megaaziib/my-rvc-models-collection,"Credit me if you use my model ; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
orca_mini_13B-GGML,,Transformers,English,mit,https://arxiv.org/pdf/2306.02707.pdf,52,psmathur/alpaca_orca; psmathur/dolly-v2_orca; psmathur/WizardLM_Orca,0,119316.4984,,https://huggingface.co/TheBloke/orca_mini_13B-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Pankaj Mathur's Orca Mini 13B.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; or",
orca_mini_3B-GGML,,Transformers,English,mit,https://arxiv.org/pdf/2306.02707.pdf,34,psmathur/alpaca_orca; psmathur/dolly-v2_orca; psmathur/WizardLM_Orca,0,12943.37555,,https://huggingface.co/TheBloke/orca_mini_3B-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Pankaj Mathur's Orca Mini 3B.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; or",
comment_opinion_extract_ChatGLM_base,Text Classification,PyTorch; Transformers,Chinese,apache-2.0,,11,,443,119.8432649,,https://huggingface.co/JessyTsu1/comment_opinion_extract_ChatGLM_base,±¾Ä£ÐÍÓÃÓÚ´ÓµçÉÌÆÀÂÛÊý¾ÝÖÐ£¬ÌáÈ¡¹Ø¼ü´ÊºÍºËÐÄ¹Ûµã; ±¾Ä£ÐÍÀûÓÃ5000ÌõÌÔ±¦ÆÀÂÛÊý¾ÝÑµÁ·£¬ÏÈÊ¹ÓÃGPT4Í¨¹ýprompt³éÈ¡Êý¾ÝµÄ¹Ø¼ü´Ê£¬¾­¹ýÇåÏ´ÔÙÊ¹ÓÃChatGLM½øÐÐÑµÁ·,Natural Language Processing
vicuna-13b-v1.3.0-GPTQ,Text Generation,Transformers,,other,https://arxiv.org/pdf/2302.13971.pdf; https://arxiv.org/pdf/2306.05685.pdf,15,,2317,7631.143055,,https://huggingface.co/TheBloke/vicuna-13b-v1.3.0-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for LmSys' Vicuna 13B v1.3.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; These models were quantised using hardware kindly provided by Latitude.sh.",Natural Language Processing
CounterMix_v1,Text-to-Image,Diffusers,,other,,2,,2953,2181.122991,1,https://huggingface.co/digiplay/CounterMix_v1,"Model info:; https://civitai.com/models/70455?modelVersionId=75113; Original Author's DEMO images :; 

; Sample image I made :",Multimodel
Guanaco-33B-SuperHOT-8K-GPTQ,Text Generation,Transformers,,other,,15,,562,17307.98124,,https://huggingface.co/TheBloke/Guanaco-33B-SuperHOT-8K-GPTQ,Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ 4bit model files for Panchovix's merge of Guanaco 33B and SuperHOT 8K.; It is the result of quantising to 4bit using GPTQ-for-LLaMa.; This is an experimental new GPTQ which offers up to 8K context size,Natural Language Processing
RVCModels,,,,,,2,,0,1492.001546,,https://huggingface.co/Thereallo/RVCModels,"Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
guanaco-13B-SuperHOT-8K-GPTQ,Text Generation,Transformers,,other,,6,,373,7631.185147,,https://huggingface.co/TheBloke/guanaco-13B-SuperHOT-8K-GPTQ,Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ 4bit model files for Tim Dettmers' Guanaco 13B merged with Kaio Ken's SuperHOT 8K.; It is the result of quantising to 4bit using GPTQ-for-LLaMa.; This is an experimental new GPTQ which offers up to 8K context size,Natural Language Processing
Wizard-Vicuna-13B-Uncensored-SuperHOT-8K-fp16,Text Generation,PyTorch; Transformers,,other,,11,,522,26657.13433,,https://huggingface.co/TheBloke/Wizard-Vicuna-13B-Uncensored-SuperHOT-8K-fp16,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; This is fp16 pytorch format model files for Eric Hartford's Wizard Vicuna 13B Uncensored merged with Kaio Ken's SuperHOT 8K.; Kaio Ken's SuperHOT 13b LoRA is merged on to the base model, and then 8K context can be achieved during inference by using trust_remote_code=True.; Note that config.json has been set to a sequence length of 8192. This can be modified to 4096 if you want to try with a smaller sequence length.",Natural Language Processing
EllaFitzgerald-RVCv2,,,,,,2,,0,570.0014844,,https://huggingface.co/Acelogic/EllaFitzgerald-RVCv2,"No model card; New: Create and edit this model card directly on the website!; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
Chronos-Hermes-13B-SuperHOT-8K-fp16,Text Generation,PyTorch; Transformers,,other,,4,,496,26657.13394,,https://huggingface.co/TheBloke/Chronos-Hermes-13B-SuperHOT-8K-fp16,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; This is fp16 pytorch format model files for Austism's Chronos Hermes 13B merged with Kaio Ken's SuperHOT 8K.; Kaio Ken's SuperHOT 13b LoRA is merged on to the base model, and then 8K context can be achieved during inference by using trust_remote_code=True.; Note that config.json has been set to a sequence length of 8192. This can be modified to 4096 if you want to try with a smaller sequence length.",Natural Language Processing
Pygmalion-13B-SuperHOT-8K-fp16,Text Generation,PyTorch; Transformers,,other,,4,,1300,26657.13721,,https://huggingface.co/TheBloke/Pygmalion-13B-SuperHOT-8K-fp16,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; This is fp16 pytorch format model files for TehVenom's merge of PygmalionAI's Pygmalion 13B merged with Kaio Ken's SuperHOT 8K.; Kaio Ken's SuperHOT 13b LoRA is merged on to the base model, and then 8K context can be achieved during inference by using trust_remote_code=True.; Note that config.json has been set to a sequence length of 8192. This can be modified to 4096 if you want to try with a smaller sequence length.",Natural Language Processing
gpt4all-falcon-ggml,,,,,,6,,0,18903.04148,,https://huggingface.co/nomic-ai/gpt4all-falcon-ggml,"No model card; New: Create and edit this model card directly on the website!; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
VisCPM-Chat,Feature Extraction,PyTorch; Transformers,Chinese; English,,,12,,22,42189.61916,,https://huggingface.co/openbmb/VisCPM-Chat,"¼òÌåÖÐÎÄ | English; 
; 


; VisCPM is a family of open-source large multimodal models, which support multimodal conversational capabilities (VisCPM-Chat model) and text-to-image generation capabilities (VisCPM-Paint model) in both Chinese and English, achieving state-of-the-art peformance among Chinese open-source multimodal models. VisCPM is trained based on the large language model CPM-Bee with 10B parameters, fusing visual encoder (Q-Former) and visual decoder (Diffusion-UNet) to support visual inputs and outputs. Thanks to the good bilingual capability of CPM-Bee, VisCPM can be pre-trained with English multimodal data only and well generalize to achieve promising Chinese multimodal capabilities.; VisCPMÊÇÒ»¸ö¿ªÔ´µÄ¶àÄ£Ì¬´óÄ£ÐÍÏµÁÐ£¬Ö§³ÖÖÐÓ¢Ë«ÓïµÄ¶àÄ£Ì¬¶Ô»°ÄÜÁ¦£¨VisCPM-ChatÄ£ÐÍ£©ºÍÎÄµ½Í¼Éú³ÉÄÜÁ¦£¨VisCPM-PaintÄ£ÐÍ£©£¬ÔÚÖÐÎÄ¶àÄ£Ì¬¿ªÔ´Ä£ÐÍÖÐ´ïµ½×î¼ÑË®Æ½¡£VisCPM»ùÓÚ°ÙÒÚ²ÎÊýÁ¿ÓïÑÔ´óÄ£ÐÍCPM-Bee£¨10B£©ÑµÁ·£¬ÈÚºÏÊÓ¾õ±àÂëÆ÷£¨Q-Former£©ºÍÊÓ¾õ½âÂëÆ÷£¨Diffusion-UNet£©ÒÔÖ§³ÖÊÓ¾õÐÅºÅµÄÊäÈëºÍÊä³ö¡£µÃÒæÓÚCPM-Beeµ××ùÓÅÐãµÄË«ÓïÄÜÁ¦£¬VisCPM¿ÉÒÔ½öÍ¨¹ýÓ¢ÎÄ¶àÄ£Ì¬Êý¾ÝÔ¤ÑµÁ·£¬·º»¯ÊµÏÖÓÅÐãµÄÖÐÎÄ¶àÄ£Ì¬ÄÜÁ¦¡£",Multimodel
HuatuoGPT-13b-delta,Text Generation,PyTorch; Transformers,,apache-2.0,,7,,186,26819.17138,1,https://huggingface.co/FreedomIntelligence/HuatuoGPT-13b-delta,Please see our HuatuoGPT project: https://github.com/FreedomIntelligence/HuatuoGPT.,Natural Language Processing
Redmond-Hermes-Coder,Text Generation,PyTorch; Transformers,English,gpl,,16,,55,32412.89622,1,https://huggingface.co/NousResearch/Redmond-Hermes-Coder,"Redmond-Hermes-Coder 15B is a state-of-the-art language model fine-tuned on over 300,000 instructions. This model was fine-tuned by Nous Research, with Teknium and Karan4D leading the fine tuning process and dataset curation, Redmond AI sponsoring the compute, and several other contributors.; This model was trained with a WizardCoder base, which itself uses a StarCoder base model. ; The model is truly great at code, but, it does come with a tradeoff though. While far better at code than the original Nous-Hermes built on Llama, it is worse than WizardCoder at pure code benchmarks, like HumanEval.; It comes in at 39% on HumanEval, with WizardCoder at 57%. This is a preliminary experiment, and we are exploring improvements now.; However, it does seem better at non-code than WizardCoder on a variety of things, including writing tasks.",Natural Language Processing
vits_tts_models,,Transformers,,mit,,3,,1,7984.009415,,https://huggingface.co/youmebangbang/vits_tts_models,"Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
kandinsky-2-2-controlnet-depth,Text-to-Image,Diffusers,,apache-2.0,,9,,6153,0.011380768,1,https://huggingface.co/kandinsky-community/kandinsky-2-2-controlnet-depth,"Kandinsky inherits best practices from Dall-E 2 and Latent diffusion while introducing some new ideas.; It uses the CLIP model as a text and image encoder,  and diffusion image prior (mapping) between latent spaces of CLIP modalities. This approach increases the visual performance of the model and unveils new horizons in blending images and text-guided image manipulation.; The Kandinsky model is created by Arseniy Shakhmatov, Anton Razzhigaev, Aleksandr Nikolich, Igor Pavlov, Andrey Kuznetsov and Denis Dimitrov; Kandinsky 2.2 is available in diffusers!; 
",Multimodel
HuatuoGPT-7B,Text Generation,PyTorch; Transformers,,apache-2.0,,7,,747,28673.20425,,https://huggingface.co/FreedomIntelligence/HuatuoGPT-7B,Please see our HuatuoGPT project: https://github.com/FreedomIntelligence/HuatuoGPT.,Natural Language Processing
lora-trained-xl,Text-to-Image,Diffusers,,creativeml-openrail-m,,2,,6,30.31242619,,https://huggingface.co/diffusers/lora-trained-xl,"These are LoRA adaption weights for diffusers/stable-diffusion-xl-base-0.9. The weights were trained on a photo of sks dog using DreamBooth. You can find some example images in the following. ; 


; LoRA for the text encoder was enabled: False.; SDXL 0.9 Research License ",Multimodel
Pygmalion-13B-SuperHOT-8K-GGML,,,,other,,7,,0,70195.21477,,https://huggingface.co/TheBloke/Pygmalion-13B-SuperHOT-8K-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for TehVenom's merge of PygmalionAI's Pygmalion 13B.; These are SuperHOT GGMLs with an increased context length. SuperHOT is a new system that employs RoPE to expand context beyond what was originally possible for a model. It was discovered and developed by kaiokendev.; In order to use the increased context length, you can presently use:",
airoboros-13b-gpt4-1.4.1-qlora,Text Generation,PyTorch; Transformers,,cc-by-nc-4.0,,5,jondurbin/airoboros-gpt4-1.4.1,33,26657.09364,,https://huggingface.co/jondurbin/airoboros-13b-gpt4-1.4.1-qlora,"This is a qlora fine-tune 13b parameter LlaMa model, using completely synthetic training data created gpt4 via https://github.com/jondurbin/airoboros; Dataset used: https://huggingface.co/datasets/jondurbin/airoboros-gpt4-1.4.1; The point of this is to allow people to compare a full fine-tune https://huggingface.co/jondurbin/airoboros-13b-gpt4-1.4 to a qlora fine-tune.; This is mostly an extension of the previous gpt-4 series, with a few extras:; This model was fine-tuned with a fork of FastChat",Natural Language Processing
ArcanaMix,Text-to-Image,Diffusers,Japanese,creativeml-openrail-m,,8,,584,0.005555687,1,https://huggingface.co/Hemlok/ArcanaMix,; Join Discord Server; ; ,Multimodel
Redmond-Hermes-Coder-GGML,,,English,gpl,,8,,0,71782.4133,,https://huggingface.co/TheBloke/Redmond-Hermes-Coder-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for NousResearch's Redmond Hermes Coder.; Please note that these GGMLs are not compatible with llama.cpp, or currently with text-generation-webui. Please see below for a list of tools known to work with these model files.; These files are not compatible with llama.cpp.",
umt5-base,Text2Text Generation,PyTorch; Transformers,102 languages,apache-2.0,,3,mc4,612,2448.348865,1,https://huggingface.co/google/umt5-base,"Google's UMT5; UMT5 is pretrained on the an updated version of mC4 corpus, covering 107 languages:; Afrikaans, Albanian, Amharic, Arabic, Armenian, Azerbaijani, Basque, Belarusian, Bengali, Bulgarian, Burmese, Catalan, Cebuano, Chichewa, Chinese, Corsican, Czech, Danish, Dutch, English, Esperanto, Estonian, Filipino, Finnish, French, Galician, Georgian, German, Greek, Gujarati, Haitian Creole, Hausa, Hawaiian, Hebrew, Hindi, Hmong, Hungarian, Icelandic, Igbo, Indonesian, Irish, Italian, Japanese, Javanese, Kannada, Kazakh, Khmer, Korean, Kurdish, Kyrgyz, Lao, Latin, Latvian, Lithuanian, Luxembourgish, Macedonian, Malagasy, Malay, Malayalam, Maltese, Maori, Marathi, Mongolian, Nepali, Norwegian, Pashto, Persian, Polish, Portuguese, Punjabi, Romanian, Russian, Samoan, Scottish Gaelic, Serbian, Shona, Sindhi, Sinhala, Slovak, Slovenian, Somali, Sotho, Spanish, Sundanese, Swahili, Swedish, Tajik, Tamil, Telugu, Thai, Turkish, Ukrainian, Urdu, Uzbek, Vietnamese, Welsh, West Frisian, Xhosa, Yiddish, Yoruba, Zulu.; Note: UMT5 was only pre-trained on mC4 excluding any supervised training. Therefore, this model has to be fine-tuned before it is useable on a downstream task.; Pretraining Dataset: mC4",Natural Language Processing
SiberianFRED-T5-XL,Text2Text Generation,PyTorch; Safetensors; Transformers,Russian; English,mit,,8,SiberiaSoft/SiberianDataset,498,7133.692459,1,https://huggingface.co/SiberiaSoft/SiberianFRED-T5-XL,FRED-T5 §à§Ò§å§é§Ö§ß§ß§í§Û §ß§Ñ SiberianDataset. §®§à§Õ§Ö§Ý§î §å§Þ§Ö§Ö§ä §â§Ñ§Ò§à§ä§Ñ§ä§î §ã §Ú§ß§ã§ä§â§å§Ü§è§Ú§ñ§Þ§Ú §Ú §Ó§Ö§ã§ä§Ú §Õ§Ú§Ñ§Ý§à§Ô§Ú §Ó §â§à§Ý§Ú §Ý§ð§Ò§ñ§ë§Ö§Û §Ø§Ö§ß§í §ß§Ñ§á§â§Ú§Þ§Ö§â. ; §³§á§Ú§ã§à§Ü §á§Ö§â§ã§à§ß§Ñ§Ø§Ö§Û:; §£ §Ò§å§Õ§å§ë§Ö§Þ §ß§Ñ§Ò§à§â §á§Ö§â§ã§à§ß§Ñ§Ø§Ö§Û §Ò§å§Õ§Ö§ä §â§Ñ§ã§ê§Ú§â§Ö§ß.; §¹§Ú§ä-§é§Ñ§ä:; §ª§ß§ã§ä§â§å§Ü§è§Ú§Ú:,Natural Language Processing
MeinaPastel_V6,Text-to-Image,Diffusers,English,creativeml-openrail-m,,3,,586,0.002850037,1,https://huggingface.co/Meina/MeinaPastel_V6,"MeinaPastel aims to make illustrations with a 2d feel to them with good light, shadows and details, making pastel or colorful images!; -- Recommendations of use:; -- If you like the model and wants to support me in being able to spend more time improving it:
-- You can do so by buying me a coffee at: https://ko-fi.com/meina ! ( it is not necessary but will be highly appreciated ); This model is a unet block merge of mostly MeinaMix and Colormixed, ultracolorv4 and a few others with minor block weight taken.",Multimodel
P.A.W.F.E.C.T-Alpha,Text-to-Image,Diffusers,English,wtfpl,,7,,2802,0.004058952,3,https://huggingface.co/lodestones/P.A.W.F.E.C.T-Alpha,"Diffusion model trained on 500k image-tags pairs scraped from Furaffinity. Alpha still, expect more epochs, more training data and overall better results in the future.; 
""anthro, fox, male, general, by 100racs"" Epoch 24, no inpainting; The tags contain the original FA tag list with tags appearing less than 40 times in total omitted, plus a tag corresponding the the general/mature/adult rating. If the artist also appears more than 40 times, an artist tag is added as well. The full list of tags and their number of occurences are available here. Training was done on TPUv3s using the LION optimizer.; Due to using data from Furaffinity, the model offers a wide variety of tags that aren't as popular as in other models for creating niche content. For example, the tag vore appears 25379 times in the dataset it was trained on as opposed to 4730 for FluffyRock. However, the preciseness of the tags on Furaffinity can also be left to be desired compared to e621, and as such it is recommended to merge it with FluffyRock if you want more control over your prompts.; Load up the safetensor file as well as the provided yaml file and put them in your model folder. Additionally, you are going to want to use CFG Rescale: https://github.com/Seshelle/CFG_Rescale_webui. 7.5 CFG and 0.7 Phi are recommended. ",Multimodel
LaBSE-instructDialogs,,PyTorch; Transformers,English,,,2,,9,516.5131205,,https://huggingface.co/zjkarina/LaBSE-instructDialogs,"sentence-transformers/LaBSE pre-trained on an instructional question-and-answer dataset. Evaluated on Precision at K metrics and Mean reciprocal rank.
Precision at K is a simple metric to understand and implement, but it has an important disadvantage - it does not take into account the order of elements in the ""top"". So, if we guessed only one item out of ten, it doesn't matter whether it was on the first or the last place - inline_formula in any case. It is obvious that the first variant is much better.
ean reciprocal rank equal to the reverse rank of the first correctly guessed item. Mean reciprocal rank varies in the range [0,1] and takes into account the position of items. Unfortunately, it does this only for one item - the 1st correctly predicted item, ignoring all subsequent items.; Evaluation results:; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
darkjungepastle-v1_v2,,,,cc-by-4.0,,2,,0,8685.162277,,https://huggingface.co/darkjungle/darkjungepastle-v1_v2,"¾ÍÒ»¸öÐ¼Ä£ÐÍ; civitaiÒ²ÓÐ£¬¾Í²»ÔÚÕâ×¸ÊöÁË; [Image text]!
(https://huggingface.co/darkjungle/darkjunglepastel-v1/blob/main/xyz_grid-0002-2939914227-masterpiece%2C%20best%20quality%2C%20loli%2C%20small%20breasts%2C%20green%20hair%2C%20orange%20eyes%2C%20clover-shaped%20pupils%2C%20shiny%20pupils%2C%20highlight%20in%20the%20pu.jpg)
[/Image text]; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
guanaco-33b-PI-8192-LoRA-4bit-32g,Text Generation,PyTorch; Transformers,,other,,4,,3,19867.98109,,https://huggingface.co/Panchovix/guanaco-33b-PI-8192-LoRA-4bit-32g,"guanaco-33b merged with bhenrym14's airoboros-33b-gpt4-1.4.1-PI-8192-LoRA, quantized at 4 bit.; More info about the LoRA Here. This is an alternative to SuperHOT 8k LoRA trained with LoRA_rank 64, and airoboros 1.4.1 dataset.; It was created with GPTQ-for-LLaMA with group size 32 and act order true as parameters, to get the maximum perplexity vs FP16 model.; I HIGHLY suggest to use exllama, to evade some VRAM issues.; Use compress_pos_emb = 4 for any context up to 8192 context.",Natural Language Processing
airoboros-33b-gpt4-1.4.1-PI-8192-GGML,,,,,,4,,0,117657.6016,,https://huggingface.co/ycros/airoboros-33b-gpt4-1.4.1-PI-8192-GGML,"GGML quants of https://huggingface.co/bhenrym14/airoboros-33b-gpt4-1.4.1-PI-8192-fp16; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
orca_mini_v2_7B-GGML,Text Generation,Transformers,English,cc-by-nc-sa-4.0,https://arxiv.org/pdf/2306.02707.pdf; https://arxiv.org/pdf/2304.12244.pdf,28,psmathur/orca_minis_uncensored_dataset,0,61870.10053,,https://huggingface.co/TheBloke/orca_mini_v2_7B-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Pankaj Mathur's Orca Mini v2 7B.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; I have quantized these 'original' quantisation methods using an older version of llama.cpp so that they remain compatible with llama.cpp as of May 19th, commit 2d5db48.",Natural Language Processing
flacuna-13b-v1.0,Text Generation,PyTorch; Transformers,,other,https://arxiv.org/pdf/2307.02053.pdf,14,declare-lab/InstructEvalImpact; declare-lab/flan-mini,31,13722.76753,1,https://huggingface.co/declare-lab/flacuna-13b-v1.0,"Paper | Model | Dataset; ? We still have numerous experiments awaiting completion (details are here), requiring additional computing resources in our lab. If any industry professionals reading this are willing to provide assistance, please feel free to reach out to us at sporia@sutd.edu.sg.; Flacuna was developed by fine-tuning Vicuna on Flan-mini, a comprehensive instruction collection encompassing various tasks. Vicuna is already an excellent writing assistant, and the intention behind Flacuna was to enhance Vicuna's problem-solving capabilities. To achieve this, we curated a dedicated instruction dataset called Flan-mini.; As a result of this fine-tuning process, Flacuna exhibited notable performance improvements in problem-solving across multiple benchmark datasets, both in few-shot and zero-shot settings.; During training, Flacuna is a 13B checkpoint of LLaMA and employed a maximum input sequence length of 1280. We utilized LoRA for parameter-efficient fine-tuning.",Natural Language Processing
orca_mini_v2_ger_7b,Text Generation,PyTorch; Transformers,German; English,cc-by-nc-sa-4.0,https://arxiv.org/pdf/2304.12244.pdf,4,,102,13804.04814,,https://huggingface.co/jphme/orca_mini_v2_ger_7b,"orca_mini_v2_ger_7b is a variant of Pankaj Mathur¡äs Orca Mini V2 7b model, finetuned on an additional dataset in German language. 
The original model has been trained on explain tuned datasets, created using instructions and input from WizardLM, Alpaca & Dolly-V2 datasets and applying Orca Research Paper dataset construction approaches.; This model is optimized for German text, providing proficiency in understanding, generating, and interacting with German language content.
However the model is not yet fully optimized for German language, as it has been trained on a small, experimental dataset and has limited capabilities due to the small parameter count. ; I am working on improving the model¡äs capabilities and will update the model if there is sufficient interest.; A quantized GGML version for use with llama.cpp, kobold.cpp and other GUIs for CPU inference can be found here.; I did only evaluate the output on a small, handcrafted sample on test prompts in German, confirming that the model's ability to understand and generate German text is well above the base model. ",Natural Language Processing
chatglm2-6b-fp16.flm,,,,apache-2.0,,4,,0,13312.00165,,https://huggingface.co/huangyuyang/chatglm2-6b-fp16.flm,"fastllm model for chatglm-6b-fp16; Github address: https://github.com/ztxz16/fastllm; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
Dalcefo,Text-to-Image,,,creativeml-openrail-m,,2,,0,162368.9016,,https://huggingface.co/LibreSD/Dalcefo,"ko-fi.com/dalcefo_artworks; Unable to determine this model¡¯s library. Check the
								docs 
.
							",Multimodel
MiracleMixGlitter_v1,Text-to-Image,Diffusers,,other,,3,,562,3543.043458,3,https://huggingface.co/digiplay/MiracleMixGlitter_v1,"Model info :; https://civitai.com/models/101423/miraclemix-glitter-an-anime-model-trained-and-specialized-on-creating-detailed-images-for-stunning-wallpaper; Original Author's DEMO images :; 




",Multimodel
Andite,Text-to-Image,,,creativeml-openrail-m,,2,,0,99348.92158,,https://huggingface.co/LibreSD/Andite,"civitai.com/user/andite; Unable to determine this model¡¯s library. Check the
								docs 
.
							",Multimodel
falcon-7b-QueAns,,PEFT,English,,https://arxiv.org/pdf/2205.14135.pdf; https://arxiv.org/pdf/1911.02150.pdf; https://arxiv.org/pdf/2106.09685.pdf; https://arxiv.org/pdf/2305.14314.pdf,5,squad; tiiuae/falcon-refinedweb,76,1589.720246,,https://huggingface.co/avnishkr/falcon-7b-QueAns,"Falcon-7b-QueAns is a chatbot-like model for Question and Answering. It was built by fine-tuning Falcon-7B on the SQuAD dataset. This repo only includes the QLoRA adapters from fine-tuning with ?'s peft package. ; ?? This is a finetuned version for specifically question and answering. If you are looking for a version better suited to taking generic instructions in a chat format, we recommend taking a look at Falcon-7B-Instruct. ; ? Looking for an even more powerful model? Falcon-40B is Falcon-7B's big brother!; The model was fine-tuned in 4-bit precision using ? peft adapters, transformers, and bitsandbytes. Training relied on a method called ""Low Rank Adapters"" (LoRA), specifically the QLoRA variant. The run took approximately 4 hours and was executed on a workstation with a single T4 NVIDIA GPU with 15 GB of available memory. See attached [Colab Notebook] used to train the model. ; July 06, 2023",
CAMEL-33B-Combined-Data-SuperHOT-8K-GPTQ,Text Generation,Transformers,,other,,3,,22,18536.78378,,https://huggingface.co/TheBloke/CAMEL-33B-Combined-Data-SuperHOT-8K-GPTQ,Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ 4bit model files for CAMEL AI's CAMEL 33B Combined Data merged with Kaio Ken's SuperHOT 8K.; It is the result of quantising to 4bit using GPTQ-for-LLaMa.; This is an experimental new GPTQ which offers up to 8K context size,Natural Language Processing
FlexDreamHK,Text-to-Image,Diffusers,Japanese,creativeml-openrail-m,,11,,0,2181.133037,,https://huggingface.co/den2nova/FlexDreamHK,"¡¡FlexDreamHK¤Ï¥ê©`¥¯¤µ¤ì¤¿NovelAI¥â¥Ç¥ë¤ÎÈë¤Ã¤Æ¤¤¤Ê¤¤¡¢¤¢¤ë¤¤¤Ï¤½¤Î¥ê¥¹¥¯¤ò¿ÉÄÜ¤ÊÏÞ¤êµÍ¤¯¤·¤¿¥â¥Ç¥ë¤òÄ¿Ö¸¤·¤Æ×÷³É¤·¤Þ¤·¤¿¡£
¡¡¥â¥Ç¥ëÃû¤Ï¥Þ©`¥¸¤ËÊ¹ÓÃ¤·¤¿¥â¥Ç¥ë¤¿¤Á¤Ë¾´Òâ¤ò±í¤·¡¢Ö÷Òª¤Ê¥â¥Ç¥ëÃû¤ò½M¤ßºÏ¤ï¤»¤ÆÃüÃû¤·¤Æ¤¤¤Þ¤¹¡£
¡¡¥Þ©`¥¸Ôª¤È¤Ê¤Ã¤¿¥â¥Ç¥ë¤ÏStable Diffusion¤äWifu Diffusion¤Ø¤Î×·¼ÓÑ§Á£¨¥Õ¥¡¥¤¥ó¥Á¥å©`¥Ë¥ó¥°£©¤òÐÐ¤Ã¤¿¤â¤Î¤Î¤ß¤Ç³É¤µ¤ì¤Æ¤¤¤Þ¤¹¡£
¡¡¤Þ¤¿¡¢¤Ë¤¸¥¸¥ã©`¥Ë©`¤ÈÆÕ¶ÎÊ¹¤¤¤·¤Æ¤¤¤ë¥â¥Ç¥ë¤«¤éÉú³É¤·¤¿½}¤«¤é½}±úLoRA¤ò×÷³É?¥Þ©`¥¸¤·¤Æ¤ª¤ê¡¢¤¤¤ï¤æ¤ëÕôÁôÏµ¤Èºô¤Ð¤ì¤ë¥â¥Ç¥ë¤Ç¤â¤¢¤ê¤Þ¤¹¡£
¡¡¥Þ©`¥¸¤Îß^³Ì¤ÈÊ¹ÓÃ¤·¤¿LoRA¤½¤Î¤â¤Î¡¢¤Þ¤¿¤½¤ì¤ò×÷³É¤·¤¿ëH¤Î¥Ç©`¥¿¥»¥Ã¥È¤òé_Ê¾¤¹¤ëÊÂ¤Ç¿ÉÄÜ¤ÊÏÞ¤êÍ¸Ã÷ÐÔ¤òµ£±£¤·¤Þ¤·¤¿¡£; creativeml-openrail-m; ¡¡¥â¥Ç¥ë¤Î×÷³É¤ËëH¤·¡¢£Î£Á£É¥ê©`¥¯¥Õ¥ê©`¥Þ©`¥¸¥â¥Ç¥ëÑÐ¾¿»á¤ò´ó¤¤¤Ë»îÓÃ¤µ¤»¤Æí¤­¤Þ¤·¤¿¡£
¡¡ÒâÓû¤Î³Ö¾A¤ä¥¢¥¤¥Ç¥¢¤ÎéW¤­¤¬¤¢¤Ã¤¿Ëû¡¢¥â¥Ç¥ë×÷³É¤ËááÑº¤·¤ò¤·¤ÆÏÂ¤µ¤Ã¤¿·½¤ä¥â¥Ç¥ëÇéó¤ò¹²ÓÐ¤·¤Æ¤¯¤À¤µ¤Ã¤¿½Ô¤µ¤ó¤Ë¸ÐÖxÉê¤·ÉÏ¤²¤Þ¤¹¡£",Multimodel
Airoboros-7B-GPT4-1-4-SuperHOT-8K-GGML,,,,other,,8,,0,36423.70121,,https://huggingface.co/TheBloke/Airoboros-7B-GPT4-1-4-SuperHOT-8K-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Jon Durbin's Airoboros 7B GPT4 1.4.; These are SuperHOT GGMLs with an increased context length. SuperHOT is a new system that employs RoPE to expand context beyond what was originally possible for a model. It was discovered and developed by kaiokendev.; In order to use the increased context length, you can presently use:",
Airoboros-7B-GPT4-1-4-SuperHOT-8K-GPTQ,Text Generation,Transformers,,other,,4,,361,4098.392943,,https://huggingface.co/TheBloke/Airoboros-7B-GPT4-1-4-SuperHOT-8K-GPTQ,Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ 4bit model files for Jon Durbin's Airoboros 7B GPT4 1.4 merged with Kaio Ken's SuperHOT 8K.; It is the result of quantising to 4bit using GPTQ-for-LLaMa.; This is an experimental new GPTQ which offers up to 8K context size,Natural Language Processing
Guanaco-7B-SuperHOT-8K-GGML,,,,other,,3,,0,36423.69438,,https://huggingface.co/TheBloke/Guanaco-7B-SuperHOT-8K-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Tim Dettmers' Guanaco 7B.; These are SuperHOT GGMLs with an increased context length. SuperHOT is a new system that employs RoPE to expand context beyond what was originally possible for a model. It was discovered and developed by kaiokendev.; In order to use the increased context length, you can presently use:",
Robin-7B-v2-SuperHOT-8K-GGML,,,,other,,3,,0,36423.69516,,https://huggingface.co/TheBloke/Robin-7B-v2-SuperHOT-8K-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for OptimalScale's Robin 7B v2.; These are SuperHOT GGMLs with an increased context length. SuperHOT is a new system that employs RoPE to expand context beyond what was originally possible for a model. It was discovered and developed by kaiokendev.; In order to use the increased context length, you can presently use:",
Vicuna-7B-v1-3-SuperHOT-8K-fp16,Text Generation,PyTorch; Transformers,,other,https://arxiv.org/pdf/2302.13971.pdf; https://arxiv.org/pdf/2306.05685.pdf,3,,64,13805.92883,,https://huggingface.co/TheBloke/Vicuna-7B-v1-3-SuperHOT-8K-fp16,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These are fp16 pytorch format model files for LmSys' Vicuna 7B v1.3 merged with Kaio Ken's SuperHOT 8K.; Kaio Ken's SuperHOT 7b LoRA is merged on to the base model, and then 8K context can be achieved during inference by using trust_remote_code=True.; Note that config.json has been set to a sequence length of 8192. This can be modified to 4096 if you want to try with a smaller sequence length.",Natural Language Processing
Wizard-Vicuna-7B-Uncensored-SuperHOT-8K-fp16,Text Generation,PyTorch; Transformers,,other,,3,,301,13805.92819,,https://huggingface.co/TheBloke/Wizard-Vicuna-7B-Uncensored-SuperHOT-8K-fp16,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These are fp16 pytorch format model files for Eric Hartford's Wizard Vicuna 7B Uncensored merged with Kaio Ken's SuperHOT 8K.; Kaio Ken's SuperHOT 7b LoRA is merged on to the base model, and then 8K context can be achieved during inference by using trust_remote_code=True.; Note that config.json has been set to a sequence length of 8192. This can be modified to 4096 if you want to try with a smaller sequence length.",Natural Language Processing
WizardLM-7B-V1-0-Uncensored-SuperHOT-8K-GGML,,,,other,,3,,0,36423.6932,,https://huggingface.co/TheBloke/WizardLM-7B-V1-0-Uncensored-SuperHOT-8K-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Eric Hartford's WizardLM-7B-V1.0-Uncensored.; These are SuperHOT GGMLs with an increased context length. SuperHOT is a new system that employs RoPE to expand context beyond what was originally possible for a model. It was discovered and developed by kaiokendev.; In order to use the increased context length, you can presently use:",
Koala-13B-SuperHOT-8K-GPTQ,Text Generation,Transformers,,other,,2,,56,7631.187581,,https://huggingface.co/TheBloke/Koala-13B-SuperHOT-8K-GPTQ,Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ 4bit model files for Koala 13B merged with Kaio Ken's SuperHOT 8K.; It is the result of quantising to 4bit using GPTQ-for-LLaMa.; This is an experimental new GPTQ which offers up to 8K context size,Natural Language Processing
Vicuna-7B-CoT-SuperHOT-8K-GPTQ,Text Generation,Transformers,,other,https://arxiv.org/pdf/1910.09700.pdf,6,,25,4098.391328,,https://huggingface.co/TheBloke/Vicuna-7B-CoT-SuperHOT-8K-GPTQ,Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ 4bit model files for Kevin Pro's Vicuna 7B CoT merged with Kaio Ken's SuperHOT 8K.; It is the result of quantising to 4bit using GPTQ-for-LLaMa.; This is an experimental new GPTQ which offers up to 8K context size,Natural Language Processing
Wizard-Vicuna-7B-Uncensored-SuperHOT-8K-GPTQ,Text Generation,Transformers,,other,,9,,702,4098.384645,,https://huggingface.co/TheBloke/Wizard-Vicuna-7B-Uncensored-SuperHOT-8K-GPTQ,Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ 4bit model files for Eric Hartford's Wizard Vicuna 7B Uncensored merged with Kaio Ken's SuperHOT 8K.; It is the result of quantising to 4bit using GPTQ-for-LLaMa.; This is an experimental new GPTQ which offers up to 8K context size,Natural Language Processing
jina-embedding-b-en-v1,Sentence Similarity,PyTorch; Sentence Transformers,English,apache-2.0,,3,jinaai/negation-dataset,187,442.2666744,,https://huggingface.co/jinaai/jina-embedding-b-en-v1,"; 

; 
The text embedding set trained by Jina AI, Finetuner team.
; jina-embedding-b-en-v1 is a language model that has been trained using Jina AI's Linnaeus-Clean dataset.
This dataset consists of 380 million pairs of sentences, which include both query-document pairs.
These pairs were obtained from various domains and were carefully selected through a thorough cleaning process.
The Linnaeus-Full dataset, from which the Linnaeus-Clean dataset is derived, originally contained 1.6 billion sentence pairs.; The model has a range of use cases, including information retrieval, semantic textual similarity, text reranking, and more.",Natural Language Processing
30B-Epsilon,Text Generation,PyTorch; Transformers,,,,5,,26,83937.82355,,https://huggingface.co/CalderaAI/30B-Epsilon,"Epsilon is an instruct based general purpose model assembled from hand picked models and LoRAs.
There is no censorship and it follows instructions in the Alpaca format. This means you can create
your own rules in the context memory of your inference system of choice [mainly KoboldAI or Text
Generation Webui and chat UIs like SillyTavern and so on].; This model is the result of an experimental use of LoRAs on language models and model merges.
[] = applied as LoRA to a composite model | () = combined as composite models
30B-Epsilon = [SuperCOT[SuperHOT-prototype13b-8192[(wizardlmuncensored+((hippogriff+manticore)+(StoryV2))]; Alpaca's instruct format can be used to do many things, including control of the terms of behavior
between a user and a response from an agent in chat. Below is an example of a command injected into
memory.; All datasets from all models and LoRAs used were documented and reviewed as model candidates for merging.
Model candidates were based on five core principles: creativity, logic, inference, instruction following,
and longevity of trained responses. SuperHOT-prototype30b-8192 was used in this mix, not the 8K version;
the prototype LoRA seems to have been removed [from HF] as of this writing. The GPT4Alpaca LoRA from
Chansung was removed from this amalgam following a thorough review of where censorship and railroading
the user came from in 33B-Lazarus. This is not a reflection of ChanSung's excellent work - it merely did
not fit the purpose of this model.; manticore-30b-chat-pyg-alpha [Epoch0.4] by openaccess-ai-collective",Natural Language Processing
openchat_v2_w,Text Generation,PyTorch; Transformers,English,other,,29,,703,26655.24373,2,https://huggingface.co/openchat/openchat_v2_w,"The OpenChat v2 family is inspired by offline reinforcement learning, including conditional behavior cloning (OpenChat-v2) and weighted behavior cloning (OpenChat-v2-w).; We provide the full source code, including an inference server compatible with the ""ChatCompletions"" API, in the OpenChat GitHub repository.; OpenChat also includes a web UI for a better user experience. See the GitHub repository for instructions.; The conversation template involves concatenating tokens, and cannot be expressed in plain-text.; Besides base model vocabulary, an end-of-turn token <|end_of_turn|> is added.",Natural Language Processing
Guanaco-33B-SuperHOT-8K-GGML,,,,other,,7,,0,175001.6119,,https://huggingface.co/TheBloke/Guanaco-33B-SuperHOT-8K-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Tim Dettmers' Guanaco 33B.; These are SuperHOT GGMLs with an increased context length. SuperHOT is a new system that employs RoPE to expand context beyond what was originally possible for a model. It was discovered and developed by kaiokendev.; In order to use the increased context length, you can presently use:",
Guanaco-33B-SuperHOT-8K-fp16,Text Generation,PyTorch; Transformers,,other,,3,,46,66634.10975,,https://huggingface.co/TheBloke/Guanaco-33B-SuperHOT-8K-fp16,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These are fp16 pytorch format model files for Tim Dettmers' Guanaco 33B merged with Kaio Ken's SuperHOT 8K.; Kaio Ken's SuperHOT 33b LoRA is merged on to the base model, and then 8K context can be achieved during inference by using trust_remote_code=True.; Note that config.json has been set to a sequence length of 8192. This can be modified to 4096 if you want to try with a smaller sequence length.",Natural Language Processing
WizardLM-13B-V1-1-SuperHOT-8K-GGML,,,,other,https://arxiv.org/pdf/2304.12244.pdf,14,,0,49121.29145,,https://huggingface.co/TheBloke/WizardLM-13B-V1-1-SuperHOT-8K-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for WizardLM's WizardLM 13B V1.1.; These are SuperHOT GGMLs with an increased context length. SuperHOT is a new system that employs RoPE to expand context beyond what was originally possible for a model. It was discovered and developed by kaiokendev.; In order to use the increased context length, you can presently use:",
airoboros-65b-gpt4-1.4.1-PI-8192-4bit-32g-actorder,Text Generation,PyTorch; Transformers,,,,7,jondurbin/airoboros-gpt4-1.4.1,1,39426.40675,,https://huggingface.co/ycros/airoboros-65b-gpt4-1.4.1-PI-8192-4bit-32g-actorder,"fp16 is here: https://huggingface.co/ycros/airoboros-65b-gpt4-1.4.1-PI-8192-fp16; peft file is here: https://huggingface.co/ycros/airoboros-65b-gpt4-1.4.1-PI-8192-peft; ggml quants: https://huggingface.co/ycros/airoboros-65b-gpt4-1.4.1-PI-8192-GGML; This is based on bhenrym14's airoboros 33b PI 8192 but on 65b.; See bhenrym14's notes there, everything applies except I based this on llama-65B.",Natural Language Processing
jina-embedding-l-en-v1,Sentence Similarity,PyTorch; Sentence Transformers,English,apache-2.0,,5,jinaai/negation-dataset,126,1375.426684,,https://huggingface.co/jinaai/jina-embedding-l-en-v1,"; 

; 
The text embedding set trained by Jina AI, Finetuner team.
; jina-embedding-l-en-v1 is a language model that has been trained using Jina AI's Linnaeus-Clean dataset.
This dataset consists of 380 million pairs of sentences, which include both query-document pairs.
These pairs were obtained from various domains and were carefully selected through a thorough cleaning process.
The Linnaeus-Full dataset, from which the Linnaeus-Clean dataset is derived, originally contained 1.6 billion sentence pairs.; The model has a range of use cases, including information retrieval, semantic textual similarity, text reranking, and more.",Natural Language Processing
gcolab-prunned-sdxl,,,,,,6,,0,13332.48148,,https://huggingface.co/Kefasu/gcolab-prunned-sdxl,"No model card; New: Create and edit this model card directly on the website!; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
open_llama_7b_v2_ggml,,,,apache-2.0,,4,,0,75755.52458,,https://huggingface.co/SlyEcho/open_llama_7b_v2_ggml,"For use with llama.cpp.; Coming soon...; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
mpt-30b-v2,Text Generation,PyTorch; Transformers,,apache-2.0,,9,ehartford/dolphin,90,61363.14169,,https://huggingface.co/manojpreveen/mpt-30b-v2,Base Model : mosaicml/mpt-30b; Tool : MosaicML's llm-foundry (https://github.com/mosaicml/llm-foundry); Dataset : Entire flan3m-GPT3.5 dataset.; Config yaml with Model Params : https://huggingface.co/manojpreveen/mpt-30b-v2/blob/main/mpt-30b_orca.yaml; Prompt Format :,Natural Language Processing
WizardCoder-Guanaco-15B-V1.0-GGML,,,English,apache-2.0,,9,guanaco,0,71782.41252,,https://huggingface.co/TheBloke/WizardCoder-Guanaco-15B-V1.0-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are StarCoder GGML format model files for LoupGarou's WizardCoder Guanaco 15B V1.0.; Please note that these GGMLs are not compatible with llama.cpp, or currently with text-generation-webui. Please see below for a list of tools that work with this GGML model.; These files are not compatible with llama.cpp or text-generation-webui.",
WizardCoder-Guanaco-15B-V1.0-GPTQ,Text Generation,Transformers,English,apache-2.0,,6,guanaco,418,9424.067078,,https://huggingface.co/TheBloke/WizardCoder-Guanaco-15B-V1.0-GPTQ,Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ 4bit model files for LoupGarou's WizardCoder Guanaco 15B V1.0.; It is the result of quantising to 4bit using GPTQ-for-LLaMa.; Please make sure you're using the latest version of text-generation-webui.,Natural Language Processing
airochronos-33B,Text Generation,PyTorch; Transformers,,other,,3,,213,66642.46105,,https://huggingface.co/Henk717/airochronos-33B,"After the initial experiment with chronoboros-33B it was evident that the merge was to unpredictable to be useful, testing the individual models it became clear that the bias should be weighted towards Chronos.
This is the new release of the merge with 75% chronos 33B, and 25% airoboros-1.4 33B.; Model has been tested with the Alpaca prompting format combined with KoboldAI Lite's instruct and chat modes, as well as regular story writing.
It has also been tested on basic reasoning tasks, but has not seen much testing for factual information.",Natural Language Processing
Bart-large-paper2slides-summarizer,Summarization,PyTorch; Safetensors; Transformers,English,mit,https://arxiv.org/pdf/1711.00043.pdf,5,,489,3339.677549,,https://huggingface.co/com3dian/Bart-large-paper2slides-summarizer,"; This repository contains the Bart-Large-paper2slides-summarizer Model, which has been fine-tuned on the Automatic Slide Generation from Scientific Papers dataset using unsupervised learning techniques using an algorithm from the paper entitled 'Unsupervised Machine Translation Using Monolingual Corpora Only'.
Its primary focus is to summarize scientific texts with precision and accuracy, the model is parallelly trained with the Bart-large-paper2slides-expander from the same contributor.; Bart (Bidirectional and Auto-Regressive Transformers) is a sequence-to-sequence (seq2seq) model developed by Facebook AI Research. It has shown exceptional performance in various natural language processing (NLP) tasks such as text summarization, text generation, and machine translation.; This particular model, Bart-Large, is the larger version of the Bart model. It consists of 12 encoder and decoder layers and has a total of 400 million parameters.; To use this model, you can leverage the Hugging Face Transformers library. Here's an example of how to use it in Python:",Natural Language Processing
MPT-30B-Dolphin-v2-GGML,,,,other,,7,,0,113152.0074,,https://huggingface.co/TheBloke/MPT-30B-Dolphin-v2-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are MPT GGML format model files for Manoj Preveen's MPT 30B Dolphin v2.; Please note that these GGMLs are not compatible with llama.cpp, or currently with text-generation-webui. Please see below for a list of tools that work with this GGML model.; These files are not compatible with llama.cpp or text-generation-webui.",
falcon-7b-code-alpaca-lora,Text Generation,,English,cc-by-nc-4.0,,2,stanford_alpaca,0,9.464872475,,https://huggingface.co/jinaai/falcon-7b-code-alpaca-lora,"; 

; 
LLM Generation models trained by Jina AI, Finetuner team.
; This repo contains the lora weights (8bit) for Falcon-7b
fit on the Code Alpaca dataset.; This version of the weights was trained with the following hyperparameters:",Natural Language Processing
falcon-7b-code-alpaca,Text Generation,PyTorch; Transformers,English,cc-by-nc-4.0,,2,stanford_alpaca,53,14172.17969,,https://huggingface.co/jinaai/falcon-7b-code-alpaca,"; 

; 
LLM Generation models trained by Jina AI, Finetuner team.
; This repo contains the full weights (16bit) for Falcon-7b
fit on the Code Alpaca dataset.; This version of the weights was trained with the following hyperparameters:",Natural Language Processing
falcon-40b-code-alpaca-lora,Text Generation,,English,cc-by-nc-4.0,,2,stanford_alpaca,0,33.50487343,,https://huggingface.co/jinaai/falcon-40b-code-alpaca-lora,"; 

; 
LLM Generation models trained by Jina AI, Finetuner team.
; This repo contains the lora weights (8bit) for Falcon-40b
fit on the Code Alpaca dataset.; This version of the weights was trained with the following hyperparameters:",Natural Language Processing
falcon-40b-code-alpaca,Text Generation,PyTorch; Transformers,English,cc-by-nc-4.0,,2,stanford_alpaca,6,84561.95814,,https://huggingface.co/jinaai/falcon-40b-code-alpaca,"; 

; 
LLM Generation models trained by Jina AI, Finetuner team.
; This repo contains the full weights (16bit) for Falcon-40b
fit on the Code Alpaca dataset.; This version of the weights was trained with the following hyperparameters:",Natural Language Processing
moss-rlhf-reward-model-7B-zh,,,Chinese,agpl-3.0,https://arxiv.org/pdf/2307.04964.pdf,7,,0,0.495820732,,https://huggingface.co/Ablustrund/moss-rlhf-reward-model-7B-zh,"moss-rlhf-reward-model-7B-zh
; moss-rlhf-reward-model-7B-en; moss-rlhf-sft-model-7B-en
; Due to the challenges of reward design, environment interaction, and agent training, coupled with huge trial and error cost of large language models, there is a significant barrier for AI researchers to motivate the development of technical alignment and safe landing of LLMs. The stable training of RLHF has still been a puzzle.
In this technical report, we intend to help researchers to train their models stably with human feedback.; Contributions are summarized as follows: ",
Realisian_v5,Text-to-Image,Diffusers,,other,,4,,2210,2181.122835,1,https://huggingface.co/digiplay/Realisian_v5,"Model info :; https://civitai.com/models/47130?modelVersionId=115942; Sample images I made ; 

; Original Author's DEMO image :",Multimodel
OpenOrca-Preview1-13B-GGML,Text Generation,Transformers,English,other,https://arxiv.org/pdf/2306.02707.pdf; https://arxiv.org/pdf/2301.13688.pdf,15,Open-Orca/OpenOrca,0,119316.4965,,https://huggingface.co/TheBloke/OpenOrca-Preview1-13B-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for Open-Orca's OpenOrca-Preview1-13B.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; These files were quantised using hardware kindly provided by Latitude.sh.",Natural Language Processing
OpenOrca-Preview1-13B-GPTQ,Text Generation,Transformers,English,other,https://arxiv.org/pdf/2306.02707.pdf; https://arxiv.org/pdf/2301.13688.pdf,8,Open-Orca/OpenOrca,791,7629.306441,,https://huggingface.co/TheBloke/OpenOrca-Preview1-13B-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for Open-Orca's OpenOrca-Preview1-13B.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; These models were quantised using hardware kindly provided by Latitude.sh.",Natural Language Processing
polylm-multialpaca-13b,Text Generation,PyTorch; Transformers,,apache-2.0,https://arxiv.org/pdf/2307.06018.pdf,7,,361,31472.32532,,https://huggingface.co/DAMO-NLP-MT/polylm-multialpaca-13b,"This model is finetuned on polyLM-13b using multialpaca (a self-instruction dataset); Open; The information below in this section are copied from the model's official model card:; Our contributions are fully methodological: adding the support of multilingualism to LLM during training and SFT phases. It is unavoidable that PolyLM might exhibit several common deficiencies of language models, e.g. hallucination and toxicity. PolyLM should not be used directly in any application, without a prior assessment of safety and fairness concerns specific to the application.; This version activates the instruction-following capability of PolyLM through self-instruction, but currently, the training instructions are relatively simple and the support for abilities such as multi-turn dialogue, context understanding, CoT, Plugin, etc. is not very friendly. We are making efforts to develop a new version.",Natural Language Processing
polylm-1.7b,Text Generation,PyTorch; Transformers,,apache-2.0,,4,,719,3773.073302,,https://huggingface.co/DAMO-NLP-MT/polylm-1.7b,,Natural Language Processing
zodiac_eclipse_DAY1,Text-to-Image,Diffusers,,other,,3,,620,2608.602861,3,https://huggingface.co/digiplay/zodiac_eclipse_DAY1,Model info :; https://civitai.com/models/108417/zodiac-eclipse-day1; Sample image I made thru Huggingface's API :; ; Original Author's DEMO images :,Multimodel
nart-100k-7b,Text Generation,PyTorch; Transformers,,cc-by-nc-nd-4.0,,10,,11,27597.45487,,https://huggingface.co/jerryjalapeno/nart-100k-7b,,Natural Language Processing
Dreamsphere,Text-to-Image,Diffusers,,creativeml-openrail-m,,2,,3074,2355.202536,4,https://huggingface.co/Yntec/Dreamsphere,"Preview image by Digiplay:; ; A mix of Noosphere v3 by skumerz and my favorite models.; Original pages:
https://civitai.com/models/36538?modelVersionId=107675
https://civitai.com/models/5528/rainbowpatch",Multimodel
Rainbowsphere,Text-to-Image,Diffusers,,creativeml-openrail-m,,2,,2842,2355.202575,4,https://huggingface.co/Yntec/Rainbowsphere,"A mix of Noosphere v3 by skumerz and Rainbowpath by PatchMonk. You can use ""Rainbowpath"" in the prompt to enhance the style.; Preview image by Digiplay:; ; Original pages:
https://civitai.com/models/36538?modelVersionId=107675
https://civitai.com/models/5528/rainbowpatch",Multimodel
Wizard-Vicuna-30B-Uncensored-lxctx-PI-16384-LoRA-4bit-32g,Text Generation,PyTorch; Transformers,,other,,2,,3,19868.10511,,https://huggingface.co/Panchovix/Wizard-Vicuna-30B-Uncensored-lxctx-PI-16384-LoRA-4bit-32g,"Wizard-Vicuna-30B-Uncensored merged with bhenrym14's airoboros-33b-gpt4-1.4.1-lxctx-PI-16384-LoRA, quantized at 4 bit.; More info about the LoRA Here. This is an alternative to SuperHOT 8k LoRA trained with LoRA_rank 64 and context extended to 16K, with airoboros 1.4.1 dataset.; It was created with GPTQ-for-LLaMA with group size 32 and act order true as parameters, to get the maximum perplexity vs FP16 model.; I HIGHLY suggest to use exllama, to evade some VRAM issues.; Use compress_pos_emb = 8 for any context up to 16384 context.",Natural Language Processing
polla_mix_2.3D,Text-to-Image,Diffusers,,other,,3,,485,10639.36271,2,https://huggingface.co/digiplay/polla_mix_2.3D,Model info :; https://civitai.com/models/110130?modelVersionId=118730; Sample image I made thru Huggingface's API :; ; Original Author's DEMO images :,Multimodel
polla_mix_2.5D,Text-to-Image,Diffusers,,other,,2,,727,4515.842953,3,https://huggingface.co/digiplay/polla_mix_2.5D,Model info :; https://civitai.com/models/110130?modelVersionId=118741; Sample image I made thru Huggingface's API :; ; Original Author's DEMO images :,Multimodel
HCTM,,,,mit,,2,,0,0.001504402,,https://huggingface.co/hctmgroup/HCTM,"Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
MeinaMix_V11,Text-to-Image,Diffusers,English,creativeml-openrail-m,,2,,1101,0.003552666,2,https://huggingface.co/Meina/MeinaMix_V11,"MeinaMix Objective is to be able to do good art with little prompting.; For examples and prompts, please checkout: https://civitai.com/models/7240/meinamix
I have a discord server where you can post images that you generated, discuss prompt and/or ask for help.; https://discord.gg/XC9nGZNDUd If you like one of my models and want to support their updates; I've made a ko-fi page; https://ko-fi.com/meina where you can pay me a coffee <3; And a Patreon page; https://www.patreon.com/MeinaMix where you can support me and get acess to beta of my models!",Multimodel
GOLDFish,Text-to-Image,Diffusers,,creativeml-openrail-m,,2,,816,2355.202529,4,https://huggingface.co/Yntec/GOLDFish,A mix between the models OLDFIsh by timevisitor and RMHF_2.5D_v2 by TkskKurumi.; Preview image by Digiplay:; ; Original pages:; https://civitai.com/models/14978?modelVersionId=40101,Multimodel
MuseRWKV,Text Generation,PyTorch; Safetensors; Transformers,,,,2,,15,1892.735967,,https://huggingface.co/breadlicker45/MuseRWKV,"this has too little layers, but it will still make music",Natural Language Processing
span-marker-xlm-roberta-large-verbs,Token Classification,PyTorch; Safetensors; SpanMarker,,apache-2.0,,2,,24,4604.798741,,https://huggingface.co/tomaarsen/span-marker-xlm-roberta-large-verbs,"This is a SpanMarker model that can be used for identifying verbs in text.
In particular, this SpanMarker model uses xlm-roberta-large as the underlying encoder.
See span_marker_verbs_train.ipynb for the training script used to create this model.; Note that this model is an experiment about the feasibility of SpanMarker as a POS tagger. I would generally recommend using spaCy or NLTK instead, as these are more computationally efficient approaches.; To use this model for inference, first install the span_marker library:; You can then run inference with this model like so:; See the SpanMarker repository for documentation and additional information on this library.",Natural Language Processing
PhotoSomnia_vFinal,Text-to-Image,Diffusers,,other,,2,,444,2181.122704,3,https://huggingface.co/digiplay/PhotoSomnia_vFinal,Model info :; https://civitai.com/models/18637/photosomnia; Original Author's DEMO image :; ; Sample image thru huggingface's API :,Multimodel
LLaMA-7B-2bit-alpaca,,,,apache-2.0,,2,,0,71.70218723,,https://huggingface.co/GreenBitAI/LLaMA-7B-2bit-alpaca,"This is GreenBitAI's instruction-tuned LoRA parameters for our 2-bit 7B LLaMA model trained on the Alpaca-clean 50k dataset.; Please refer to our Github page for the code to run the model and more information.; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
Others,,,,creativeml-openrail-m,,2,,0,0.001521568,,https://huggingface.co/Gyunyu-pudding/Others,"Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
llama-33b-lxctx-PI-16384-LoRA,,,,,,2,,0,975.0025754,,https://huggingface.co/bhenrym14/llama-33b-lxctx-PI-16384-LoRA,"Mostly untested!; This is base Llama-33b with minimal additional training to extend the useful context window.; This is a QLoRA fine-tune; Pretraining took 10 hours on 1x RTX 6000 Ada.; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
Gugugo-koen-1.3B-V0.95,Translation,PyTorch; Safetensors; Transformers,English; Korean,apache-2.0,,2,,30,5449.332926,1,https://huggingface.co/squarelike/Gugugo-koen-1.3B-V0.95,https://github.com/jwj7140/Gugugo; Prompt Template:,Natural Language Processing
MeinaMix_v11,Text-to-Image,Diffusers,,other,,2,,521,2181.122688,1,https://huggingface.co/digiplay/MeinaMix_v11,"Model info :; https://civitai.com/models/7240?modelVersionId=119057; Sample images generated by huggingface's API :; 
; prompt :",Multimodel
skin-generator-minecraft,Text-to-Image,Diffusers,English,openrail,,2,,325,0.004228783,,https://huggingface.co/agentapp/skin-generator-minecraft,"This Stable Diffusion model was fine-tuned to generate a pre-version 1.8 Minecraft character skins, based on a text prompt.; The model was fine-tuned on the dataset for 13,000 steps using the 'train_text_to_image.py' script provided with the diffusers library.  A checkpoint has been included in the 'checkpoint' directory.; Some postprocessing is required to import and use the generated skins in Minecraft.; This model is a fork from monadicial/minecraft-skin-generator. This fork will contain the production model for a frontend that processing the results so the output can be used; Here are some example text prompts and the images they generate:",Multimodel
Colorful_v2.0,Text-to-Image,Diffusers,,other,,2,,34,2181.122208,,https://huggingface.co/digiplay/Colorful_v2.0,https://civitai.com/models/7279?modelVersionId=13196,Multimodel
llama-7b-prosocialdialog-lora,,,,,,2,,0,16.80182293,,https://huggingface.co/surika/llama-7b-prosocialdialog-lora,"No model card; New: Create and edit this model card directly on the website!; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
anime-diffusion-v0,Text-to-Image,Diffusers,,creativeml-openrail-m,,2,,148,2181.123993,1,https://huggingface.co/Ryzan/anime-diffusion-v0,"This is currently a base model
; This model does not use any finetuning techniques such as face restoration or in-painting as of yet; Test the concept via A1111 Colab fast-Colab-A1111; Sample pictures of this concept:
; See more results from this model under the sample_images folder",Multimodel
sorceroboros-33b-s2a4-gptq,Text Generation,Transformers,English,,,2,ehartford/WizardLM_evol_instruct_V2_196k_unfiltered_merged_split; jondurbin/airoboros-gpt4-1.4.1; openai/summarize_from_feedback; ehartford/wizard_vicuna_70k_unfiltered,3,18024.73269,,https://huggingface.co/chargoddard/sorceroboros-33b-s2a4-gptq,"Trained on a flavorful melange of the WizardLM, Airoboros, and Wizard Vicuna datasets.
This model was trained using both linear and NTK-aware RoPE scaling in tandem. When loading, ensure that compress_pos_emb (or scale) is set to 2, and alpha_value is set to 4. Both values must be set.; Expect context length of up to 8192 to work for sure. It will probably maintain coherence into the ~12k range, but I have not tested that.; Prompt format is vicuna 1.1:",Natural Language Processing
UltraLM-65b,Text Generation,PyTorch; Transformers,,,,2,,3,133654.8767,,https://huggingface.co/openbmb/UltraLM-65b,No model card; New: Create and edit this model card directly on the website!,Natural Language Processing
bark-small,Text-to-Speech,PyTorch; Transformers,13 languages,cc-by-nc-4.0,,2,,689,1724.293591,1,https://huggingface.co/suno/bark-small,"Bark is a transformer-based text-to-audio model created by Suno. 
Bark can generate highly realistic, multilingual speech as well as other audio - including music, 
background noise and simple sound effects. The model can also produce nonverbal 
communications like laughing, sighing and crying. To support the research community, 
we are providing access to pretrained model checkpoints ready for inference.; The original github repo and model card can be found here.; This model is meant for research purposes only. 
The model output is not censored and the authors do not endorse the opinions in the generated content. 
Use at your own risk.; Two checkpoints are released:; Try out Bark yourself!",Audio
open_llama_3b_v2_ggml,,,,apache-2.0,,2,,0,19957.76406,,https://huggingface.co/SlyEcho/open_llama_3b_v2_ggml,"Support is now merged to master branch.; There are now more quantization types in llama.cpp, some lower than 4 bits.
Currently these are not well supported because of technical reasons.
If you want to use them, you have to build llama.cpp (from build 829 (ff5d58f)) with the LLAMA_QKK_64 Make or CMake variable enabled (see PR #2001).
Then you can quantize the F16 or maybe Q8_0 version to what you want.; Coming soon ...; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
ggml-alicia-13b,Text Generation,,,,,2,,0,9451.521724,,https://huggingface.co/eachadea/ggml-alicia-13b,"(OpenOrca Preview + OrcaMiniV2 @ 0.4) + (Chronos @ 0.08) + (Hermes @ 0.08) + (Wizard Vicuna @ 0.08) + (Samantha @ 0.20); Recognized templates:; and; Unable to determine this model¡¯s library. Check the
								docs 
.
							",Natural Language Processing
ggml-hws-13b,Text Generation,,,,,2,,0,9625.601652,,https://huggingface.co/eachadea/ggml-hws-13b,"(Hermes + Wizard 1.1 @ 0.5) + Selfee @ 0.2; Recognizes templates:; and; Unable to determine this model¡¯s library. Check the
								docs 
.
							",Natural Language Processing
alpagasus-13b,Text Generation,PyTorch; Transformers,,other,https://arxiv.org/pdf/2307.08701.pdf,2,,0,53320.22401,,https://huggingface.co/gpt4life/alpagasus-13b,"This is an unofficial implementation of AlpaGasus-13B, which is a chat assistant trained by fine-tuning LLaMA on a Claud-filtered Alpaca dataset with around 5K triplets.; Please see the original LLaMA license before using this model.; AlpaGasus-13B is fine-tuned from LLaMA-13B with supervised instruction fine-tuning on the filtered Alpaca dataset.; Inference API has been turned off for this model.",Natural Language Processing
ct2fast-Llama-2-7b-chat-hf,Text Generation,Transformers; PyTorch,English,,https://arxiv.org/pdf/2307.09288.pdf,2,,11,6904.361012,,https://huggingface.co/michaelfeil/ct2fast-Llama-2-7b-chat-hf,"Speedup inference while reducing memory by 2x-4x using int8 inference in C++ on CPU or GPU.; quantized version of meta-llama/Llama-2-7b-chat-hf; Checkpoint compatible to ctranslate2>=3.17.1
and hf-hub-ctranslate2>=2.12.0; Converted on 2023-07-21 using; This is just a quantized version. Licence conditions are intended to be idential to original huggingface repo.",Natural Language Processing
ct2fast-Llama-2-70b-chat-hf,,,,,,2,,0,0.001521568,,https://huggingface.co/michaelfeil/ct2fast-Llama-2-70b-chat-hf,"still missing support from ctranslate2.; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
ct2fast-Llama-2-13b-chat-hf,Text Generation,Transformers; PyTorch,English,,https://arxiv.org/pdf/2307.09288.pdf,2,,18,13315.85098,,https://huggingface.co/michaelfeil/ct2fast-Llama-2-13b-chat-hf,"Speedup inference while reducing memory by 2x-4x using int8 inference in C++ on CPU or GPU.; quantized version of meta-llama/Llama-2-13b-chat-hf; Checkpoint compatible to ctranslate2>=3.17.1
and hf-hub-ctranslate2>=2.12.0; Converted on 2023-07-21 using; This is just a quantized version. Licence conditions are intended to be idential to original huggingface repo.",Natural Language Processing
llama-2-13b,Text Generation,PyTorch; Transformers,,,,2,,6,53319.72242,,https://huggingface.co/dhruvabansal/llama-2-13b,"Llama 2
Llama 2 is a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. This is the repository for the 13B pretrained model. Links to other models can be found in the index at the bottom.; Model Details
Note: Use of this model is governed by the Meta license. In order to download the model weights and tokenizer, please visit the website and accept our License before requesting access here.; Meta developed and publicly released the Llama 2 family of large language models (LLMs), a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. Our fine-tuned LLMs, called Llama-2-Chat, are optimized for dialogue use cases. Llama-2-Chat models outperform open-source chat models on most benchmarks we tested, and in our human evaluations for helpfulness and safety, are on par with some popular closed-source models like ChatGPT and PaLM.; Model Developers Meta; Variations Llama 2 comes in a range of parameter sizes ¡ª 7B, 13B, and 70B ¡ª as well as pretrained and fine-tuned variations.",Natural Language Processing
Chinese-LlaMA2-7B-chat,,,,,,2,,0,0.001484375,,https://huggingface.co/michaelwzhu/Chinese-LlaMA2-7B-chat,"No model card; New: Create and edit this model card directly on the website!; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
llama-2-ko-7b-chat-vicuna-hf-4bit,,TensorBoard,,,,2,,0,69.53523945,,https://huggingface.co/quantumaikr/llama-2-ko-7b-chat-vicuna-hf-4bit,"No model card; New: Create and edit this model card directly on the website!; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
Legal_Penguin,Text Generation,PyTorch; Transformers,,,,2,,50,26655.24088,,https://huggingface.co/DangFutures/Legal_Penguin,No model card; New: Create and edit this model card directly on the website!,Natural Language Processing
meta-llama-Llama-2-7b-chat-hf-w4-g128-awq,Text Generation,PyTorch; Transformers,English,,,2,,5,3983.855838,,https://huggingface.co/abhinavkulkarni/meta-llama-Llama-2-7b-chat-hf-w4-g128-awq,"Llama 2 is a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. This is the repository for the 7B pretrained model, converted for the Hugging Face Transformers format.; This model is a 4-bit 128 group size AWQ quantized model. For more information about AWQ quantization, please click here.; July 19, 2023; Please refer to the original LLaMA 2 model license (link).; Please refer to the AWQ quantization license (link).",Natural Language Processing
Llama-2-70b-chat-hf,Text Generation,PyTorch; Safetensors; Transformers,English,,,2,,882,282567.9802,,https://huggingface.co/NousResearch/Llama-2-70b-chat-hf,"Llama 2 is a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. This is the repository for the 70B fine-tuned model, optimized for dialogue use cases and converted for the Hugging Face Transformers format. Links to other models can be found in the index at the bottom.; Note: Use of this model is governed by the Meta license. In order to download the model weights and tokenizer, please visit the website and accept our License before requesting access here.; Meta developed and publicly released the Llama 2 family of large language models (LLMs), a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. Our fine-tuned LLMs, called Llama-2-Chat, are optimized for dialogue use cases. Llama-2-Chat models outperform open-source chat models on most benchmarks we tested, and in our human evaluations for helpfulness and safety, are on par with some popular closed-source models like ChatGPT and PaLM.; Model Developers Meta; Variations Llama 2 comes in a range of parameter sizes ¡ª 7B, 13B, and 70B ¡ª as well as pretrained and fine-tuned variations.",Natural Language Processing
GodziLLa-30B-instruct,Text Generation,PyTorch; Transformers,,cc-by-nc-4.0,https://arxiv.org/pdf/2009.03300.pdf; https://arxiv.org/pdf/1803.05457.pdf; https://arxiv.org/pdf/1905.07830.pdf; https://arxiv.org/pdf/2109.07958.pdf,2,,1,66191.90515,,https://huggingface.co/MayaPH/GodziLLa-30B-instruct,"GodziLLa-30B-instruct is GodziLLa-30B finetuned on a mixture of instructions. For a more general use case, please use GodziLLa-30B instead. This finetuned model is not meant for any other use outside of research on competing LoRA adapter behavior and instruction tuning. More specifically, since this is inherently a LlaMA model, commercial use is prohibited. This model's primary purpose is to stress test the limitations of composite LLMs and observe its performance with respect to other LLMs available on the Open LLM Leaderboard.; ; The following datasets were used to finetune GodziLLa-30B further.; COMING SOON; According to the leaderboard description, here are the benchmarks used for the evaluation:",Natural Language Processing
chinese-alpaca-pro-lora-7b,,,Chinese,apache-2.0,,2,,0,1168.10323,,https://huggingface.co/ziqingyang/chinese-alpaca-pro-lora-7b,"This repo contains the tokenizer, Chinese-Alpaca LoRA weights and configs for Chinese-LLaMA-Alpaca; Instructions for using the weights can be found at https://github.com/ymcui/Chinese-LLaMA-Alpaca.; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
LLama2-7b,Text Generation,PyTorch; Transformers,,,,2,,110,27597.31766,,https://huggingface.co/AlexWortega/LLama2-7b,No model card; New: Create and edit this model card directly on the website!,Natural Language Processing
Llama-2-13B-german-assistant-v1,Text Generation,PyTorch; Transformers,English; German,,,2,flozi00/conversations,13,27161.24562,,https://huggingface.co/flozi00/Llama-2-13B-german-assistant-v1,"This model is an finetuned version for german instructions and conversations in style of Open Assistant tokens. ""<|prompter|>"" ""<|endoftext|>"" ""<|assistant|>""; The dataset used is deduplicated and cleaned, with no codes inside. The focus is on instruction following and conversational tasks.; The model archictecture is based on Llama version 2 with 13B parameters, trained on 100% renewable energy powered hardware.; This work is contributed by private research of flozi00",Natural Language Processing
llama-2-7b-ggml,,,English,apache-2.0,https://arxiv.org/pdf/1910.09700.pdf,2,,0,14233.60657,,https://huggingface.co/lazyiitian/llama-2-7b-ggml,This model card aims to be a base template for new models. It has been generated using this raw template.; [More Information Needed]; [More Information Needed]; [More Information Needed]; [More Information Needed],
Luna-AI-Llama2-Uncensored-GGML,Text Generation,,,,,2,,0,61931.52376,,https://huggingface.co/Araki/Luna-AI-Llama2-Uncensored-GGML,"Quantization from:
Tap-M/Luna-AI-Llama2-Uncensored; Converted to the GGML format with:
llama.cpp master-294f424 (JUL 19, 2023); Tested with:
koboldcpp 1.35; Example usage:; Prompt format (refer to the original model for additional details):",Natural Language Processing
PersonaStyleCheckpoint,Text-to-Image,Diffusers,,other,,2,,161,4341.763291,3,https://huggingface.co/digiplay/PersonaStyleCheckpoint,"Model info :; https://civitai.com/models/31771?modelVersionId=38190; Sample image I made thru Huggingface's API :
; Original Author's DEMO images :; 

",Multimodel
Llama-2-13B-GPTQ-Orca,Text Generation,PyTorch,English,other,,2,,0,897.0170893,,https://huggingface.co/tridungduong16/Llama-2-13B-GPTQ-Orca,"These files are GPTQ model files for Meta's Llama 2 13B.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; Multiple quantisation parameters are provided, to allow you to choose the best one for your hardware and requirements.; Each separate quant is in a different branch.  See below for instructions on fetching from different branches.; Please make sure you're using the latest version of text-generation-webui.",Natural Language Processing
prometheus.safetensors,,,,,,2,,0,10854.40313,,https://huggingface.co/doctorderp/prometheus.safetensors,"https://www.youtube.com/watch?v=JB-BmFUdT7o; First, please take the time to watch the video, you wont regret it. ; I am proud to introduce to you an innovative workflow solution for all of your prompting needs! Prometheus is a custom model along with 30 Hypernetworks I like to call Latent Later Cameras. These are virtual cameras that have been embedded in to the latent space which allow you to choose the camera angle and camera shot for your subject.  These cameras put you in to the directors seat so that you always get the shot you envisioned in your mind. Besides being very flexible, the latent cameras also tend to be very cohesive and produce very good results through natural language prompting.  That means there is no need for a word salad in your positive or negative prompts.  In fact you can use the Hypernetworks without any negative prompts at all and still get very good results. As long as you follow very basic rules outlined in the video guide, on average you will get very good results. Thank you!; Please note the Hypernetworks work with all models...that are based on the 1.5 architecture... sorry if I misled in the video. Sorry no 2.0 or 2.1 support.  ; Don't forget to enable your dynamic prompts by checking the enable box, otherwise you can load the Hypernetworks manually, just know that the strength of the Hypernetworks should be at 0.55 by default, otherwise you will not get good results. ",
Llama-2-7b-chat-hf-dolly-ja-nf4,,PEFT,Japanese,,,2,,5,0,,https://huggingface.co/kunipm9/Llama-2-7b-chat-hf-dolly-ja-nf4,"This repository is publicly accessible, but
			you have to accept the conditions to access its files and content.
		; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		; The following bitsandbytes quantization config was used during training:; The following bitsandbytes quantization config was used during training:; PEFT 0.5.0.dev0",
ruGPT-3.5-13B-8bit,Text Generation,PyTorch; Transformers,Russian,,,2,,19,25038.60977,,https://huggingface.co/pe4enov/ruGPT-3.5-13B-8bit,§¬§Ó§Ñ§ß§ä§Ú§Ù§Ú§â§à§Ó§Ñ§ß§ß§Ñ§ñ §Ó§Ö§â§ã§Ú§ñ §Þ§à§Õ§Ö§Ý§Ú ruGPT-3.5,Natural Language Processing
ruGPT-3.5-13B-fp16,Text Generation,PyTorch; Transformers,Russian; English,mit,,2,,55,26333.54013,,https://huggingface.co/Gaivoronsky/ruGPT-3.5-13B-fp16,This is a generative model converted to fp16 format based on ai-forever/ruGPT-3.5-13B; Inference API has been turned off for this model.,Natural Language Processing
llama-2-7b-guanaco-dolly-8bit-sharded,Text Generation,PyTorch; Transformers,,apache-2.0,,2,databricks/databricks-dolly-15k; timdettmers/openassistant-guanaco,16,26959.87056,,https://huggingface.co/guardrail/llama-2-7b-guanaco-dolly-8bit-sharded,Model that is fine-tuned in 4-bit precision using QLoRA on timdettmers/openassistant-guanaco and databricks/databricks-dolly-15k. Sharded as well to be used on a free Google Colab instance. ; It can be easily imported using the AutoModelForCausalLM class from transformers:,Natural Language Processing
llama-2-70b-guanaco-qlora,Text Classification,,English,,,2,,0,1699.842911,,https://huggingface.co/Mikael110/llama-2-70b-guanaco-qlora,"This is a Llama-2 version of Guanaco. It was finetuned from the base Llama-70b model using the official training scripts found in the QLoRA repo. I wanted it to be as faithful as possible and therefore changed nothing in the training script beyond the model it was pointing to. The model prompt is therefore also the same as the original Guanaco model.; This repo contains the QLoRA adapter.; A 7b version of the adapter can be found here.
A 13b version of the adapter can be found here.; Legal Disclaimer: This model is bound by the usage restrictions of the original Llama-2 model. And comes with no warranty or gurantees of any kind.; Unable to determine this model¡¯s library. Check the
								docs 
.
							",Natural Language Processing
Anything_ink,,,,openrail,,2,,0,6123.524863,,https://huggingface.co/X779/Anything_ink,"This is a fine-tuning model based on stable diiffusion.The model is fine-tuned based on SD1.5.The model was fine-tuned with HCP-diffusion
The model prompt is extremely accurate.; ¡ª¡ª¡ª¡ª¡ª¡ª¡ª¡ª¡ª¡ª¡ª¡ª; Many of today's SD models have a variety of problems.I want to make use of my limited ability to improve the current situation.So I used a lot of AI-generated images to refine this model; ; ¡ª¡ª¡ª¡ª¡ª¡ª¡ª¡ª¡ª¡ª¡ª¡ª",
gogpt2-7b,Text Generation,PyTorch; Transformers,Chinese,apache-2.0,,2,BelleGroup/train_0.5M_CN; BelleGroup/train_1M_CN; c-s-ale/alpaca-gpt4-data-zh; BAAI/COIG,0,28878.2189,,https://huggingface.co/golaxy/gogpt2-7b,"; 


; ICTÖÐÓ¢ÎÄµ××ùÔöÇ¿´óÄ£ÐÍ£º70ÒÚ²ÎÊý¡¢130ÒÚ²ÎÊý; GoGPT-Github; ?ÔõÃ´´ÓÁãµ½Ò»ÑµÁ·Ò»¸öLLM·Ö´ÊÆ÷",Natural Language Processing
ruGPT-3.5-13B-8bit,Text Generation,Transformers; PyTorch,Russian; English,mit,,2,,13,13728.06477,,https://huggingface.co/Gaivoronsky/ruGPT-3.5-13B-8bit,This is a generative model converted to fp16 format based on ai-forever/ruGPT-3.5-13B; Inference API has been turned off for this model.,Natural Language Processing
llama2_7b_chat_uncensored-GGML,,,English,other,,2,ehartford/wizard_vicuna_70k_unfiltered,0,25507.84313,,https://huggingface.co/s3nh/llama2_7b_chat_uncensored-GGML,"Buy me a coffee if you like this project ;)
; GGML Format model files for This project.; Fine-tuned Llama-2 7B with an uncensored/unfiltered Wizard-Vicuna conversation dataset ehartford/wizard_vicuna_70k_unfiltered.
Used QLoRA for fine-tuning. Trained for one epoch on a 24GB GPU (NVIDIA A10G) instance, took ~19 hours to train.; The model was trained with the following prompt style:; Code used to train the model is available here.",
llama2-qlora-finetunined-Arabic,,PEFT,,,,2,,0,134.0023083,,https://huggingface.co/HeshamHaroon/llama2-qlora-finetunined-Arabic,"The following bitsandbytes quantization config was used during training:; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
13B-Ouroboros-GGML,Text Generation,Transformers,English,other,,2,Open-Orca/OpenOrca; anon8231489123/ShareGPT_Vicuna_unfiltered; jondurbin/airoboros-uncensored,12,119316.495,,https://huggingface.co/TheBloke/13B-Ouroboros-GGML,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GGML format model files for CalderaAI's 13B Ouroboros.; GGML files are for CPU + GPU inference using llama.cpp and libraries and UIs which support this format, such as:; These are guaranteed to be compatible with any UIs, tools and libraries released since late May. They may be phased out soon, as they are largely superseded by the new k-quant methods.",Natural Language Processing
honest_llama2_chat_7B,Text Generation,PyTorch; Transformers,,mit,https://arxiv.org/pdf/2306.03341.pdf,2,,1,13804.09181,,https://huggingface.co/likenneth/honest_llama2_chat_7B,"Ever wondering a less hallucinating LLaMA-2? Using the inference-time intervention (ITI) discussed in my recent preprint: https://arxiv.org/pdf/2306.03341.pdf, I baked the intervention learned from TruthfulQA into a LLaMA-2 7B model.
I don¡¯t have big enough GPU to bake ITI into larger LLaMA-2 but the code to do so are all released in https://github.com/likenneth/honest_llama. Let me know if you are interested do that :)
You can load and play around starting from below:",Natural Language Processing
theallysMixIV-verisimilar,Text-to-Image,Diffusers,,creativeml-openrail-m,,2,,730,4372.482283,4,https://huggingface.co/Yntec/theallysMixIV-verisimilar,Original page:; https://civitai.com/models/40369/theallys-mix-iv-verisimilar,Multimodel
Upstage-Llama1-65B-Instruct-GPTQ,Text Generation,Transformers,English,other,,2,sciq; metaeval/ScienceQA_text_only; GAIR/lima; Open-Orca/OpenOrca; openbookqa,1,35535.14254,,https://huggingface.co/TheBloke/Upstage-Llama1-65B-Instruct-GPTQ,"Chat & support: my new Discord server; Want to contribute? TheBloke's Patreon page; These files are GPTQ model files for Upstage's Llama 65B Instruct.; Multiple GPTQ parameter permutations are provided; see Provided Files below for details of the options provided, their parameters, and the software used to create them.; Multiple quantisation parameters are provided, to allow you to choose the best one for your hardware and requirements.",Natural Language Processing
Llama-2-13b-chat-german,Text Generation,PyTorch; Transformers,German; English,,https://arxiv.org/pdf/2307.09288.pdf,2,,0,26657.10847,1,https://huggingface.co/jphme/Llama-2-13b-chat-german,"Edit: You can find a Demo (German) here; Llama-2-13b-chat-german is a variant of Meta¡äs Llama 2 13b Chat model, finetuned on an additional dataset in German language.; This model is optimized for German text, providing proficiency in understanding, generating, and interacting with German language content. However the model is not yet fully optimized for German language, as it has been trained on a small, experimental dataset and has limited capabilities due to the small parameter count.
Some of the fineunting data is also targeted towards factual retrieval (only answer questions from information in the context and refuse to hallucinate) and the model should perform better for these tasks than original Llama 2 Chat.; I am working on improving the model¡äs capabilities and will update the model if there is sufficient interest.; A quantized GGML version for use with llama.cpp, kobold.cpp and other GUIs for CPU inference can be found here.",Natural Language Processing
hermes-limarp-13b-merged,Text Generation,PyTorch; Transformers,,,,2,,3,26657.08419,,https://huggingface.co/Oniichat/hermes-limarp-13b-merged,No model card; New: Create and edit this model card directly on the website!,Natural Language Processing
Chinese-Llama-2-7b-ggml-model-q4_0,,,,apache-2.0,,2,,0,3921.921511,,https://huggingface.co/rffx0/Chinese-Llama-2-7b-ggml-model-q4_0,"Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
Llama-2-22B-GGML,Text Generation,Transformers,,,,2,togethercomputer/RedPajama-Data-1T-Sample,0,50606.08312,,https://huggingface.co/IHaveNoClueAndIMustPost/Llama-2-22B-GGML,"This is Llama2-22b in a couple of GGML formats. I have no idea what I'm doing so if something doesn't work as it should or not at all that's likely on me, not the models themselves.
While I haven't had any issues so far do note that the original repo states ""Not intended for use as-is - this model is meant to serve as a base for further tuning"".; Approximate VRAM requirements at 4K context:",Natural Language Processing
Llama2-Chinese-7b-Chat-LoRA,Question Answering,Transformers,Chinese; English,apache-2.0,,2,,0,40.49278427,,https://huggingface.co/FlagAlpha/Llama2-Chinese-7b-Chat-LoRA,ÓÉÓÚLlama2±¾ÉíµÄÖÐÎÄ¶ÔÆë½ÏÈõ£¬ÎÒÃÇ²ÉÓÃÖÐÎÄÖ¸Áî¼¯£¬¶Ômeta-llama/Llama-2-7b-chat-hf½øÐÐLoRAÎ¢µ÷£¬Ê¹Æä¾ß±¸½ÏÇ¿µÄÖÐÎÄ¶Ô»°ÄÜÁ¦¡£; ? ¸Ã°æ±¾½ö°üº¬LoRAÖÐÎÄÎ¢µ÷²ÎÊý£¬ÐèÒªÓë»ù´¡µÄmeta-llama/Llama-2-7b-chat-hfÄ£ÐÍ½áºÏÊ¹ÓÃ; Github£ºLlama2-Chinese; ÔÚÏßÌåÑéÁ´½Ó£ºllama.family; »¶Ó­À´µ½Llama2ÖÐÎÄÉçÇø£¡,Natural Language Processing
Llama2-Chinese-7b-Chat,Question Answering,PyTorch; Transformers,Chinese; English,apache-2.0,,2,,0,13804.03936,,https://huggingface.co/FlagAlpha/Llama2-Chinese-7b-Chat,ÓÉÓÚLlama2±¾ÉíµÄÖÐÎÄ¶ÔÆë½ÏÈõ£¬ÎÒÃÇ²ÉÓÃÖÐÎÄÖ¸Áî¼¯£¬¶Ômeta-llama/Llama-2-7b-chat-hf½øÐÐLoRAÎ¢µ÷£¬Ê¹Æä¾ß±¸½ÏÇ¿µÄÖÐÎÄ¶Ô»°ÄÜÁ¦¡£; ? ¸Ã°æ±¾ÎªLoRAÖÐÎÄÎ¢µ÷²ÎÊýFlagAlpha/Llama2-Chinese-7b-Chat-LoRAºÍmeta-llama/Llama-2-7b-chat-hf²ÎÊý½áºÏºóµÄ°æ±¾£¬¿ÉÖ±½ÓÊ¹ÓÃ; Github£ºLlama2-Chinese; ÔÚÏßÌåÑéÁ´½Ó£ºllama.family; »¶Ó­À´µ½Llama2ÖÐÎÄÉçÇø£¡,Natural Language Processing
openllama_3b_EvolInstruct_lora_merged-4bit-32g,Text Generation,PyTorch; Transformers,,cc-by-4.0,,2,,0,2335.249771,,https://huggingface.co/KnutJaegersberg/openllama_3b_EvolInstruct_lora_merged-4bit-32g,"Prompt: ""Below is an instruction that describes a task. Write a response that appropriately completes the request. \n\n### Instruction:\n INSTRUCTION. \n### Response:\n""",Natural Language Processing
TWingshadow_v1.2,Text-to-Image,Diffusers,,other,,2,,0,4198.403507,,https://huggingface.co/digiplay/TWingshadow_v1.2,"Models info :; https://civitai.com/models/105935; Original Author's DEMO images :; 

",Multimodel
bert-base-multilingual-uncased,Fill-Mask,PyTorch; TensorFlow; JAX; Safetensors; Transformers,102 languages,apache-2.0,https://arxiv.org/pdf/1810.04805.pdf,43,wikipedia,326832,3015.58133,34,https://huggingface.co/bert-base-multilingual-uncased,"Pretrained model on the top 102 languages with the largest Wikipedia using a masked language modeling (MLM) objective.
It was introduced in this paper and first released in
this repository. This model is uncased: it does not make a difference
between english and English.; Disclaimer: The team releasing BERT did not write a model card for this model so this model card has been written by
the Hugging Face team.; BERT is a transformers model pretrained on a large corpus of multilingual data in a self-supervised fashion. This means
it was pretrained on the raw texts only, with no humans labelling them in any way (which is why it can use lots of
publicly available data) with an automatic process to generate inputs and labels from those texts. More precisely, it
was pretrained with two objectives:; This way, the model learns an inner representation of the languages in the training set that can then be used to
extract features useful for downstream tasks: if you have a dataset of labeled sentences for instance, you can train a
standard classifier using the features produced by the BERT model as inputs.; You can use the raw model for either masked language modeling or next sentence prediction, but it's mostly intended to
be fine-tuned on a downstream task. See the model hub to look for
fine-tuned versions on a task that interests you.",Natural Language Processing
bert-large-cased,Fill-Mask,PyTorch; TensorFlow; JAX; Safetensors; Transformers,English,apache-2.0,https://arxiv.org/pdf/1810.04805.pdf,11,bookcorpus; wikipedia,99088,6871.684006,35,https://huggingface.co/bert-large-cased,"Pretrained model on English language using a masked language modeling (MLM) objective. It was introduced in
this paper and first released in
this repository. This model is cased: it makes a difference
between english and English.; Disclaimer: The team releasing BERT did not write a model card for this model so this model card has been written by
the Hugging Face team.; BERT is a transformers model pretrained on a large corpus of English data in a self-supervised fashion. This means it
was pretrained on the raw texts only, with no humans labelling them in any way (which is why it can use lots of
publicly available data) with an automatic process to generate inputs and labels from those texts. More precisely, it
was pretrained with two objectives:; This way, the model learns an inner representation of the English language that can then be used to extract features
useful for downstream tasks: if you have a dataset of labeled sentences for instance, you can train a standard
classifier using the features produced by the BERT model as inputs.; This model has the following configuration:",Natural Language Processing
bert-large-uncased-whole-word-masking-finetuned-squad,Question Answering,PyTorch; TensorFlow; JAX; Safetensors; Transformers,English,apache-2.0,https://arxiv.org/pdf/1810.04805.pdf,92,bookcorpus; wikipedia,163700,6769.328652,48,https://huggingface.co/bert-large-uncased-whole-word-masking-finetuned-squad,"Pretrained model on English language using a masked language modeling (MLM) objective. It was introduced in
this paper and first released in
this repository. This model is uncased: it does not make a difference
between english and English.; Differently to other BERT models, this model was trained with a new technique: Whole Word Masking. In this case, all of the tokens corresponding to a word are masked at once. The overall masking rate remains the same.; The training is identical -- each masked WordPiece token is predicted independently. ; After pre-training, this model was fine-tuned on the SQuAD dataset with one of our fine-tuning scripts. See below for more information regarding this fine-tuning.; Disclaimer: The team releasing BERT did not write a model card for this model so this model card has been written by
the Hugging Face team.",Natural Language Processing
distilbert-base-multilingual-cased,Fill-Mask,PyTorch; TensorFlow; ONNX; Safetensors; Transformers,104 languages,apache-2.0,https://arxiv.org/pdf/1910.01108.pdf; https://arxiv.org/pdf/1910.09700.pdf,64,wikipedia,4652765,2906.940657,6,https://huggingface.co/distilbert-base-multilingual-cased,"This model is a distilled version of the BERT base multilingual model. The code for the distillation process can be found here. This model is cased: it does make a difference between english and English.; The model is trained on the concatenation of Wikipedia in 104 different languages listed here.
The model has 6 layers, 768 dimension and 12 heads, totalizing 134M parameters (compared to 177M parameters for mBERT-base).
On average, this model, referred to as DistilmBERT, is twice as fast as mBERT-base.; We encourage potential users of this model to check out the BERT base multilingual model card to learn more about usage, limitations and potential biases.; You can use the raw model for either masked language modeling or next sentence prediction, but it's mostly intended to be fine-tuned on a downstream task. See the model hub to look for fine-tuned versions on a task that interests you.; Note that this model is primarily aimed at being fine-tuned on tasks that use the whole sentence (potentially masked) to make decisions, such as sequence classification, token classification or question answering. For tasks such as text generation you should look at model like GPT2.",Natural Language Processing
distilroberta-base,Fill-Mask,PyTorch; TensorFlow; JAX; Rust; Safetensors; Transformers,English,apache-2.0,https://arxiv.org/pdf/1910.01108.pdf; https://arxiv.org/pdf/1910.09700.pdf,76,openwebtext,7409128,1966.280316,29,https://huggingface.co/distilroberta-base,"This model is a distilled version of the RoBERTa-base model. It follows the same training procedure as DistilBERT.
The code for the distillation process can be found here.
This model is case-sensitive: it makes a difference between english and English.; The model has 6 layers, 768 dimension and 12 heads, totalizing 82M parameters (compared to 125M parameters for RoBERTa-base).
On average DistilRoBERTa is twice as fast as Roberta-base.; We encourage users of this model card to check out the RoBERTa-base model card to learn more about usage, limitations and potential biases.; You can use the raw model for masked language modeling, but it's mostly intended to be fine-tuned on a downstream task. See the model hub to look for fine-tuned versions on a task that interests you.; Note that this model is primarily aimed at being fine-tuned on tasks that use the whole sentence (potentially masked) to make decisions, such as sequence classification, token classification or question answering. For tasks such as text generation you should look at model like GPT2.",Natural Language Processing
gpt2-medium,Text Generation,PyTorch; TensorFlow; JAX; Rust; ONNX; Safetensors; Transformers,English,mit,https://arxiv.org/pdf/1910.09700.pdf,64,,223491,7795.498318,385,https://huggingface.co/gpt2-medium,"Model Description: GPT-2 Medium is the 355M parameter version of GPT-2, a transformer-based language model created and released by OpenAI. The model is a pretrained model on English language using a causal language modeling (CLM) objective. ; Use the code below to get started with the model. You can use this model directly with a pipeline for text generation. Since the generation relies on some randomness, we
set a seed for reproducibility:; Here is how to use this model to get the features of a given text in PyTorch:; and in TensorFlow:; In their model card about GPT-2, OpenAI wrote: ",Natural Language Processing
roberta-large,Fill-Mask,PyTorch; TensorFlow; JAX; ONNX; Safetensors; Transformers,English,mit,https://arxiv.org/pdf/1907.11692.pdf; https://arxiv.org/pdf/1806.02847.pdf,116,bookcorpus; wikipedia,2506730,7713.413208,62,https://huggingface.co/roberta-large,"Pretrained model on English language using a masked language modeling (MLM) objective. It was introduced in
this paper and first released in
this repository. This model is case-sensitive: it
makes a difference between english and English.; Disclaimer: The team releasing RoBERTa did not write a model card for this model so this model card has been written by
the Hugging Face team.; RoBERTa is a transformers model pretrained on a large corpus of English data in a self-supervised fashion. This means
it was pretrained on the raw texts only, with no humans labelling them in any way (which is why it can use lots of
publicly available data) with an automatic process to generate inputs and labels from those texts. ; More precisely, it was pretrained with the Masked language modeling (MLM) objective. Taking a sentence, the model
randomly masks 15% of the words in the input then run the entire masked sentence through the model and has to predict
the masked words. This is different from traditional recurrent neural networks (RNNs) that usually see the words one
after the other, or from autoregressive models like GPT which internally mask the future tokens. It allows the model to
learn a bidirectional representation of the sentence.; This way, the model learns an inner representation of the English language that can then be used to extract features
useful for downstream tasks: if you have a dataset of labeled sentences for instance, you can train a standard
classifier using the features produced by the BERT model as inputs.",Natural Language Processing
t5-11b,Translation,PyTorch; TensorFlow; Transformers,5 languages,apache-2.0,https://arxiv.org/pdf/1805.12471.pdf; https://arxiv.org/pdf/1708.00055.pdf; https://arxiv.org/pdf/1704.05426.pdf; https://arxiv.org/pdf/1606.05250.pdf; https://arxiv.org/pdf/1808.09121.pdf; https://arxiv.org/pdf/1810.12885.pdf; https://arxiv.org/pdf/1905.10044.pdf; https://arxiv.org/pdf/1910.09700.pdf,37,c4,31672,92571.77334,101,https://huggingface.co/t5-11b,"; The developers of the Text-To-Text Transfer Transformer (T5) write: ; With T5, we propose reframing all NLP tasks into a unified text-to-text-format where the input and output are always text strings, in contrast to BERT-style models that can only output either a class label or a span of the input. Our text-to-text framework allows us to use the same model, loss function, and hyperparameters on any NLP task.; T5-11B is the checkpoint with 11 billion parameters. ; The developers write in a blog post that the model: ",Natural Language Processing
t5-3b,Translation,PyTorch; TensorFlow; Transformers,5 languages,apache-2.0,https://arxiv.org/pdf/1805.12471.pdf; https://arxiv.org/pdf/1708.00055.pdf; https://arxiv.org/pdf/1704.05426.pdf; https://arxiv.org/pdf/1606.05250.pdf; https://arxiv.org/pdf/1808.09121.pdf; https://arxiv.org/pdf/1810.12885.pdf; https://arxiv.org/pdf/1905.10044.pdf; https://arxiv.org/pdf/1910.09700.pdf,18,c4,116336,23349.37262,102,https://huggingface.co/t5-3b,"; The developers of the Text-To-Text Transfer Transformer (T5) write: ; With T5, we propose reframing all NLP tasks into a unified text-to-text-format where the input and output are always text strings, in contrast to BERT-style models that can only output either a class label or a span of the input. Our text-to-text framework allows us to use the same model, loss function, and hyperparameters on any NLP task.; T5-3B is the checkpoint with 3 billion parameters. ; The developers write in a blog post that the model: ",Natural Language Processing
xlm-roberta-base,Fill-Mask,PyTorch; TensorFlow; JAX; ONNX; Safetensors; Transformers,94 languages,mit,https://arxiv.org/pdf/1911.02116.pdf,339,,13823623,6506.336128,43,https://huggingface.co/xlm-roberta-base,"XLM-RoBERTa model pre-trained on 2.5TB of filtered CommonCrawl data containing 100 languages. It was introduced in the paper Unsupervised Cross-lingual Representation Learning at Scale by Conneau et al. and first released in this repository. ; Disclaimer: The team releasing XLM-RoBERTa did not write a model card for this model so this model card has been written by the Hugging Face team.; XLM-RoBERTa is a multilingual version of RoBERTa. It is pre-trained on 2.5TB of filtered CommonCrawl data containing 100 languages. ; RoBERTa is a transformers model pretrained on a large corpus in a self-supervised fashion. This means it was pretrained on the raw texts only, with no humans labelling them in any way (which is why it can use lots of publicly available data) with an automatic process to generate inputs and labels from those texts.; More precisely, it was pretrained with the Masked language modeling (MLM) objective. Taking a sentence, the model randomly masks 15% of the words in the input then run the entire masked sentence through the model and has to predict the masked words. This is different from traditional recurrent neural networks (RNNs) that usually see the words one after the other, or from autoregressive models like GPT which internally mask the future tokens. It allows the model to learn a bidirectional representation of the sentence.",Natural Language Processing
MSTSb_stsb-xlm-r-multilingual,Sentence Similarity,PyTorch; Sentence Transformers; Transformers,,,,1,,44,1150.796429,,https://huggingface.co/AIDA-UPM/MSTSb_stsb-xlm-r-multilingual,"This is a sentence-transformers model: It maps sentences & paragraphs to a 768 dimensional dense vector space and can be used for tasks like clustering or semantic search.; Using this model becomes easy when you have sentence-transformers installed:; Then you can use the model like this:; Without sentence-transformers, you can use the model like this: First, you pass your input through the transformer model, then you have to apply the right pooling-operation on-top of the contextualized word embeddings.; For an automated evaluation of this model, see the Sentence Embeddings Benchmark: https://seb.sbert.net",Natural Language Processing
ICD-10-Code-Prediction,Text Classification,PyTorch; Transformers,,apache-2.0,,15,,1299,482.9372956,5,https://huggingface.co/AkshatSurolia/ICD-10-Code-Prediction,The Publicly Available Clinical BERT Embeddings paper contains four unique clinicalBERT models: initialized with BERT-Base (cased_L-12_H-768_A-12) or BioBERT (BioBERT-Base v1.0 + PubMed 200K + PMC 270K) & trained on either all MIMIC notes or only discharge summaries.  ; Load the model via the transformers library:; Run the model with clinical diagonosis text:; Return the Top-5 predicted ICD-10 codes:,Natural Language Processing
gpt2-spanish-classics,Text Generation,PyTorch; Transformers,,,,1,,22,510.0020173,,https://huggingface.co/Aleksandar1932/gpt2-spanish-classics,No model card; New: Create and edit this model card directly on the website!,Natural Language Processing
qanlu,Question Answering,PyTorch; Transformers,English,cc-by-4.0,,6,atis,524,497.3317019,2,https://huggingface.co/AmazonScience/qanlu,"Question Answering NLU (QANLU) is an approach that maps the NLU task into question answering, 
leveraging pre-trained question-answering models to perform well on few-shot settings. Instead of 
training an intent classifier or a slot tagger, for example, we can ask the model intent- and 
slot-related questions in natural language: ; Note the ""Yes. No. "" prepended in the context. Those are to allow the model to answer intent-related questions (e.g. ""Is the user looking for a restaurant?"").; Thus, by asking questions for each intent and slot in natural language, we can effectively construct an NLU hypothesis. For more details, please read the paper: Language model is all you need: Natural language understanding as question answering.; Instructions for how to train and evaluate a QANLU model, as well as the necessary code for ATIS are in the Amazon Science repository.; This model has been fine-tuned on ATIS (English) and is intended to demonstrate the power of this approach. For other domains or tasks, it should be further fine-tuned 
on relevant data.",Natural Language Processing
indian-foods,Image Classification,PyTorch; TensorBoard; Transformers,,,,3,,32,343.0024529,1,https://huggingface.co/Amrrs/indian-foods,Autogenerated by HuggingPics???; Create your own image classifier for anything by running the demo on Google Colab.; Report any issues with the demo at the github repo.; ; ,Computer Vision
rebel-large,Text2Text Generation,PyTorch; Safetensors; Transformers,English,cc-by-nc-sa-4.0,,76,Babelscape/rebel-dataset,33784,3340.837838,16,https://huggingface.co/Babelscape/rebel-large,"



; This is the model card for the Findings of EMNLP 2021 paper REBEL: Relation Extraction By End-to-end Language generation. We present a new linearization approach and a reframing of Relation Extraction as a seq2seq task. The paper can be found here. If you use the code, please reference this work in your paper:; The original repository for the paper can be found here; Be aware that the inference widget at the right does not output special tokens, which are necessary to distinguish the subject, object and relation types. For a demo of REBEL and its pre-training dataset check the Spaces demo.",Natural Language Processing
query-gen-msmarco-t5-base-v1,Text2Text Generation,PyTorch; JAX; Transformers,,,,12,,1104,1784.780507,,https://huggingface.co/BeIR/query-gen-msmarco-t5-base-v1,"This model is the t5-base model from docTTTTTquery.; The T5-base model was trained on the MS MARCO Passage Dataset, which consists of about 500k real search queries from Bing together with the relevant passage.; The model can be used for query generation to learn semantic search models without requiring annotated training data: Synthetic Query Generation.",Natural Language Processing
bert-base-arabic-camelbert-da-sentiment,Text Classification,PyTorch; TensorFlow; Transformers,Arabic,apache-2.0,https://arxiv.org/pdf/2103.06678.pdf,17,,655212,873.3046334,2,https://huggingface.co/CAMeL-Lab/bert-base-arabic-camelbert-da-sentiment,"CAMeLBERT-DA SA Model is a Sentiment Analysis (SA) model that was built by fine-tuning the CAMeLBERT Dialectal Arabic (DA) model.
For the fine-tuning, we used the ASTD, ArSAS, and SemEval datasets.
Our fine-tuning procedure and the hyperparameters we used can be found in our paper *""The Interplay of Variant, Size, and Task Type in Arabic Pre-trained Language Models.""; You can use the CAMeLBERT-DA SA model directly as part of our CAMeL Tools SA component (recommended) or as part of the transformers pipeline.; To use the model with the CAMeL Tools SA component:; You can also use the SA model directly with a transformers pipeline:; Note: to download our models, you would need transformers>=3.5.0.
Otherwise, you could download the models manually.",Natural Language Processing
bert-base-arabic-camelbert-da,Fill-Mask,PyTorch; TensorFlow; JAX; Transformers,Arabic,apache-2.0,https://arxiv.org/pdf/2103.06678.pdf,12,,293,1312.30954,,https://huggingface.co/CAMeL-Lab/bert-base-arabic-camelbert-da,"CAMeLBERT is a collection of BERT models pre-trained on Arabic texts with different sizes and variants.
We release pre-trained language models for Modern Standard Arabic (MSA), dialectal Arabic (DA), and classical Arabic (CA), in addition to a model pre-trained on a mix of the three.
We also provide additional models that are pre-trained on a scaled-down set of the MSA variant (half, quarter, eighth, and sixteenth).
The details are described in the paper ""The Interplay of Variant, Size, and Task Type in Arabic Pre-trained Language Models.""; This model card describes CAMeLBERT-DA (bert-base-arabic-camelbert-da), a model pre-trained on the DA (dialectal Arabic) dataset.; You can use the released model for either masked language modeling or next sentence prediction.
However, it is mostly intended to be fine-tuned on an NLP task, such as NER, POS tagging, sentiment analysis, dialect identification, and poetry classification.
We release our fine-tuninig code here.; You can use this model directly with a pipeline for masked language modeling:; Note: to download our models, you would need transformers>=3.5.0. Otherwise, you could download the models manually.",Natural Language Processing
bert-base-arabic-camelbert-mix-ner,Token Classification,PyTorch; TensorFlow; Transformers,Arabic,apache-2.0,https://arxiv.org/pdf/2103.06678.pdf,4,,2067,870.3053422,,https://huggingface.co/CAMeL-Lab/bert-base-arabic-camelbert-mix-ner,"CAMeLBERT-Mix NER Model is a Named Entity Recognition (NER) model that was built by fine-tuning the CAMeLBERT Mix model.
For the fine-tuning, we used the ANERcorp dataset.
Our fine-tuning procedure and the hyperparameters we used can be found in our paper ""The Interplay of Variant, Size, and Task Type in Arabic Pre-trained Language Models.
"" Our fine-tuning code can be found here.; You can use the CAMeLBERT-Mix NER model directly as part of our CAMeL Tools NER component (recommended) or as part of the transformers pipeline.; To use the model with the CAMeL Tools NER component:; You can also use the NER model directly with a transformers pipeline:; Note: to download our models, you would need transformers>=3.5.0.
Otherwise, you could download the models manually.",Natural Language Processing
distilbert-base-multilingual-cased-ner-hrl,Token Classification,PyTorch; TensorFlow; Safetensors; Transformers,,,,51,,431856,1617.979142,13,https://huggingface.co/Davlan/distilbert-base-multilingual-cased-ner-hrl,"language: ; distilbert-base-multilingual-cased-ner-hrl is a Named Entity Recognition model for 10 high resourced languages (Arabic, German, English, Spanish, French, Italian, Latvian, Dutch, Portuguese and Chinese) based on a fine-tuned  Distiled BERT base model. It has been trained to recognize three types of entities: location (LOC), organizations (ORG), and person (PER). 
Specifically, this model is a distilbert-base-multilingual-cased model that was fine-tuned on an aggregation of 10 high-resourced languages; You can use this model with Transformers pipeline for NER.; This model is limited by its training dataset of entity-annotated news articles from a specific span of time. This may not generalize well for all use cases in different domains.  ; The training data for the 10 languages are from: ",Natural Language Processing
gpt2-spanish,Text Generation,PyTorch; TensorFlow; JAX; Transformers,Spanish,mit,,23,ebooks,889,1258.311494,2,https://huggingface.co/DeepESP/gpt2-spanish,"GPT2-Spanish is a language generation model trained from scratch with 11.5GB of Spanish texts and with a Byte Pair Encoding (BPE) tokenizer that was trained for this purpose. The parameters used are the same as the small version of the original OpenAI GPT2 model.; This model was trained with a corpus of 11.5GB of texts corresponding to 3.5GB of Wikipedia articles and 8GB of books (narrative, short stories, theater, poetry, essays, and popularization).; The texts are tokenized using a byte-level version of Byte Pair Encoding (BPE) (for Unicode characters) and a vocabulary size of 50257. The inputs are sequences of 1024 consecutive tokens.; This tokenizer was trained from scratch with the Spanish corpus, since it was evidenced that the tokenizer of the English models presented limitations to capture the semantic relations of Spanish, due to the morphosyntactic differences between both languages.; Apart from the special token ""<|endoftext|>"" for text ending in the OpenAI GPT-2 models, the tokens ""<|talk|>"", ""<|ax1|>"", ""<|ax2|>"" (..)""<|ax9|>"" were included so that they can serve as prompts in future training.",Natural Language Processing
bert-myanmar-base-uncased,Fill-Mask,PyTorch; Transformers,,,,1,,15,425.1828845,,https://huggingface.co/GKLMIP/bert-myanmar-base-uncased,"The Usage of tokenizer for Myanmar is same as Laos in https://github.com/GKLMIP/Pretrained-Models-For-Laos.; If you use our model, please consider citing our paper:",Natural Language Processing
distilbert-base-es-cased,Fill-Mask,PyTorch; Safetensors; Transformers,Spanish,apache-2.0,,1,wikipedia,5513,510.1725042,,https://huggingface.co/Geotrend/distilbert-base-es-cased,"We are sharing smaller versions of distilbert-base-multilingual-cased that handle a custom number of languages.; Our versions give exactly the same representations produced by the original model which preserves the original accuracy.; For more information please visit our paper: Load What You Need: Smaller Versions of Multilingual BERT.; To generate other smaller versions of multilingual transformers please visit our Github repo.; Please contact amine@geotrend.fr for any question, feedback or request.",Natural Language Processing
bert-base-dutch-cased,Fill-Mask,PyTorch; TensorFlow; JAX; Transformers,Dutch,,https://arxiv.org/pdf/1912.09582.pdf,17,,25138,1405.244075,7,https://huggingface.co/GroNLP/bert-base-dutch-cased,"Wietse de Vries ?
Andreas van Cranenburgh ?
Arianna Bisazza ?
Tommaso Caselli ?
Gertjan van Noord ?
Malvina Nissim; BERTje is a Dutch pre-trained BERT model developed at the University of Groningen.; For details, check out our paper on arXiv, the code on Github and related work on Semantic Scholar.; The paper and Github page mention fine-tuned models that are available here.; WARNING: The vocabulary size of BERTje has changed in 2021. If you use an older fine-tuned model and experience problems with the GroNLP/bert-base-dutch-cased tokenizer, use use the following tokenizer:",Natural Language Processing
DialoGPT-Medium-zerotwo,Conversational,PyTorch; Transformers,,,,1,,55,1477.14844,,https://huggingface.co/HAttORi/DialoGPT-Medium-zerotwo,,Natural Language Processing
opus-mt-ar-en,Translation,PyTorch; TensorFlow; Rust; Transformers,Arabic; English,apache-2.0,,14,,85307,1184.811487,3,https://huggingface.co/Helsinki-NLP/opus-mt-ar-en,source languages: ar; target languages: en; OPUS readme: ar-en; dataset: opus; model: transformer-align,Natural Language Processing
opus-mt-de-en,Translation,PyTorch; TensorFlow; Rust; Transformers,German; English,apache-2.0,,17,,530755,1134.801654,6,https://huggingface.co/Helsinki-NLP/opus-mt-de-en,source languages: de; target languages: en; OPUS readme: de-en; dataset: opus; model: transformer-align,Natural Language Processing
opus-mt-en-ar,Translation,PyTorch; TensorFlow; Rust; Transformers,English; Arabic,apache-2.0,,14,,9336,1184.803072,8,https://huggingface.co/Helsinki-NLP/opus-mt-en-ar,source group: English ; target group: Arabic ; OPUS readme: eng-ara; model: transformer; source language(s): eng,Natural Language Processing
opus-mt-en-es,Translation,PyTorch; TensorFlow; JAX; Transformers,English; Spanish,apache-2.0,,44,,81530,938.1853818,69,https://huggingface.co/Helsinki-NLP/opus-mt-en-es,source group: English ; target group: Spanish ; OPUS readme: eng-spa; model: transformer; source language(s): eng,Natural Language Processing
opus-mt-en-ru,Translation,PyTorch; TensorFlow; Rust; Transformers,English; Russian,apache-2.0,,22,,45854,1181.46727,9,https://huggingface.co/Helsinki-NLP/opus-mt-en-ru,source languages: en; target languages: ru; OPUS readme: en-ru; dataset: opus; model: transformer-align,Natural Language Processing
opus-mt-fr-en,Translation,PyTorch; TensorFlow; JAX; Transformers,French; English,apache-2.0,,18,,366149,903.8862685,17,https://huggingface.co/Helsinki-NLP/opus-mt-fr-en,source languages: fr; target languages: en; OPUS readme: fr-en; dataset: opus; model: transformer-align,Natural Language Processing
opus-mt-mul-en,Translation,PyTorch; TensorFlow; Transformers,120 languages,apache-2.0,,37,,111359,623.9126524,7,https://huggingface.co/Helsinki-NLP/opus-mt-mul-en,source group: Multiple languages ; target group: English ; OPUS readme: mul-eng; model: transformer; source language(s): abk acm ady afb afh_Latn afr akl_Latn aln amh ang_Latn apc ara arg arq ary arz asm ast avk_Latn awa aze_Latn bak bam_Latn bel bel_Latn ben bho bod bos_Latn bre brx brx_Latn bul bul_Latn cat ceb ces cha che chr chv cjy_Hans cjy_Hant cmn cmn_Hans cmn_Hant cor cos crh crh_Latn csb_Latn cym dan deu dsb dtp dws_Latn egl ell enm_Latn epo est eus ewe ext fao fij fin fkv_Latn fra frm_Latn frr fry fuc fuv gan gcf_Latn gil gla gle glg glv gom gos got_Goth grc_Grek grn gsw guj hat hau_Latn haw heb hif_Latn hil hin hnj_Latn hoc hoc_Latn hrv hsb hun hye iba ibo ido ido_Latn ike_Latn ile_Latn ilo ina_Latn ind isl ita izh jav jav_Java jbo jbo_Cyrl jbo_Latn jdt_Cyrl jpn kab kal kan kat kaz_Cyrl kaz_Latn kek_Latn kha khm khm_Latn kin kir_Cyrl kjh kpv krl ksh kum kur_Arab kur_Latn lad lad_Latn lao lat_Latn lav ldn_Latn lfn_Cyrl lfn_Latn lij lin lit liv_Latn lkt lld_Latn lmo ltg ltz lug lzh lzh_Hans mad mah mai mal mar max_Latn mdf mfe mhr mic min mkd mlg mlt mnw moh mon mri mwl mww mya myv nan nau nav nds niu nld nno nob nob_Hebr nog non_Latn nov_Latn npi nya oci ori orv_Cyrl oss ota_Arab ota_Latn pag pan_Guru pap pau pdc pes pes_Latn pes_Thaa pms pnb pol por ppl_Latn prg_Latn pus quc qya qya_Latn rap rif_Latn roh rom ron rue run rus sag sah san_Deva scn sco sgs shs_Latn shy_Latn sin sjn_Latn slv sma sme smo sna snd_Arab som spa sqi srp_Cyrl srp_Latn stq sun swe swg swh tah tam tat tat_Arab tat_Latn tel tet tgk_Cyrl tha tir tlh_Latn tly_Latn tmw_Latn toi_Latn ton tpw_Latn tso tuk tuk_Latn tur tvl tyv tzl tzl_Latn udm uig_Arab uig_Cyrl ukr umb urd uzb_Cyrl uzb_Latn vec vie vie_Hani vol_Latn vro war wln wol wuu xal xho yid yor yue yue_Hans yue_Hant zho zho_Hans zho_Hant zlm_Latn zsm_Latn zul zza,Natural Language Processing
opus-mt-ru-en,Translation,PyTorch; TensorFlow; Rust; Transformers,Russian; English,cc-by-4.0,,28,,349619,1181.469262,6,https://huggingface.co/Helsinki-NLP/opus-mt-ru-en,"Model Description:; This model can be used for translation and text-to-text generation.; CONTENT WARNING: Readers should be aware this section contains content that is disturbing, offensive, and can propagate historical and current stereotypes.; Significant research has explored bias and fairness issues with language models (see, e.g., Sheng et al. (2021) and Bender et al. (2021)).; Further details about the dataset for this model can be found in the OPUS readme: ru-en",Natural Language Processing
convert_wav2vec2_to_hf,,,,,,5,,0,0.008318062,,https://huggingface.co/HfSpeechUtils/convert_wav2vec2_to_hf,"This repo has two scripts that can show how to convert a fairseq checkpoint to HF Transformers.; It's important to always check in a forward pass that the two checkpoints are the same. The procedure should be as follows:; The ""0"" means that checkpoint is not a fine-tuned one.
4. Verify that models are equal:; Check the scripts to better understand how they work or contact https://huggingface.co/patrickvonplaten; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
camembert-ner-with-dates,Token Classification,PyTorch; ONNX; Safetensors; Transformers,French,mit,,23,Jean-Baptiste/wikiner_fr,17733,1320.797707,12,https://huggingface.co/Jean-Baptiste/camembert-ner-with-dates,"[camembert-ner-with-dates] is an extension of french camembert-ner model with an additionnal tag for dates.
Model was trained on enriched version of wikiner-fr dataset (~170 634  sentences).; On my test data (mix of chat and email), this model got an f1 score of ~83% (in comparison dateparser was ~70%).
Dateparser library can still be be used on the output of this model in order to convert text to python datetime object 
(https://dateparser.readthedocs.io/en/latest/).; Global; By entity",Natural Language Processing
camembert-ner,Token Classification,PyTorch; ONNX; Safetensors; Transformers,French,mit,,79,Jean-Baptiste/wikiner_fr,926322,1321.106688,67,https://huggingface.co/Jean-Baptiste/camembert-ner,"[camembert-ner] is a NER model that was fine-tuned from camemBERT on wikiner-fr dataset.
Model was trained on wikiner-fr dataset (~170 634  sentences).
Model was validated on emails/chat data and overperformed other models on this type of data specifically. 
In particular the model seems to work better on entity that don't start with an upper case.; Training data was classified as follow:; Overall; By entity; For those who could be interested, here is a short article on how I used the results of this model to train a LSTM model for signature detection in emails:
https://medium.com/@jean-baptiste.polle/lstm-model-for-email-signature-detection-8e990384fefa",Natural Language Processing
sentence-bert-swedish-cased,Sentence Similarity,PyTorch; Sentence Transformers; Transformers,Swedish,apache-2.0,https://arxiv.org/pdf/2004.09813.pdf,10,,255,500.6046146,1,https://huggingface.co/KBLab/sentence-bert-swedish-cased,"This is a sentence-transformers model: It maps Swedish sentences & paragraphs to a 768 dimensional dense vector space and can be used for tasks like clustering or semantic search. This model is a bilingual Swedish-English model trained according to instructions in the paper Making Monolingual Sentence Embeddings Multilingual using Knowledge Distillation and the documentation accompanying its companion python package. We have used the strongest available pretrained English Bi-Encoder (all-mpnet-base-v2) as a teacher model, and the pretrained Swedish KB-BERT as the student model. ; A more detailed description of the model can be found in an article we published on the KBLab blog here and for the updated model here. ; Update: We have released updated versions of the model since the initial release. The original model described in the blog post is v1.0. The current version is v2.0. The newer versions are trained on longer paragraphs, and have a longer max sequence length. v2.0 is trained with a stronger teacher model and is the current default.; Using this model becomes easy when you have sentence-transformers installed:; Then you can use the model like this:",Natural Language Processing
t5-darija-summarization,Text2Text Generation,PyTorch; Transformers,Arabic,,,4,,52,3238.441105,,https://huggingface.co/Kamel/t5-darija-summarization,"This dataset contains 19,806 news articles written in Moroccan Arabic dialect along with their titles. The articles were crawled from Goud.ma website between 01/01/2018 and 12/31/2020. 
The articles are written mainly in Moroccan Arabic dialect (Darija) but some of them contain Modern Standard Arabic (MSA) passages. All the titles are written in Darija. 
The following table summarize some tatistics on the MArSum Dataset.; The following figure describes the creation process of MArSum:; ; You may refer to our paper, cited below, for more details on this process.; The dataset is split into Train/Test subsets using a 90/10 split strategy. Both subsets are available for direct donwload.",Natural Language Processing
GPT-J-6B-Shinen,Text Generation,PyTorch; Transformers,English,mit,https://arxiv.org/pdf/2101.00027.pdf,13,,5858,12393.00497,2,https://huggingface.co/KoboldAI/GPT-J-6B-Shinen,"GPT-J 6B-Shinen is a finetune created using EleutherAI's GPT-J 6B model. Compared to GPT-Neo-2.7-Horni, this model is much heavier on the sexual content.
Warning: THIS model is NOT suitable for use by minors. The model will output X-rated content.; The training data contains user-generated stories from sexstories.com. All stories are tagged using the following way:; You can use this model directly with a pipeline for text generation. This example generates a different sequence each time it's run:; The core functionality of GPT-J is taking a string of text and predicting the next token. While language models are widely used for tasks other than this, there are a lot of unknowns with this work. When prompting GPT-J it is important to remember that the statistically most likely next token is often not the token that produces the most ""accurate"" text. Never depend upon GPT-J to produce factually accurate output.; GPT-J was trained on the Pile, a dataset known to contain profanity, lewd, and otherwise abrasive language. Depending upon use case GPT-J may produce socially unacceptable text. See Sections 5 and 6 of the Pile paper for a more detailed analysis of the biases in the Pile.",Natural Language Processing
GPT-Neo-2.7B-Shinen,Text Generation,PyTorch; Transformers,English,mit,,17,,8686,5500.21656,,https://huggingface.co/KoboldAI/GPT-Neo-2.7B-Shinen,"GPT-Neo 2.7B-Shinen is a finetune created using EleutherAI's GPT-Neo 2.7B model. Compared to GPT-Neo-2.7-Horni, this model is much heavier on the sexual content.; Warning: THIS model is NOT suitable for use by minors. The model will output X-rated content.; The training data contains user-generated stories from sexstories.com. All stories are tagged using the following way:; You can use this model directly with a pipeline for text generation. This example generates a different sequence each time it's run:; GPT-Neo was trained as an autoregressive language model. This means that its core functionality is taking a string of text and predicting the next token. While language models are widely used for tasks other than this, there are a lot of unknowns with this work.
GPT-Neo-Shinen was trained on a dataset known to contain profanity, lewd, and otherwise abrasive language. GPT-Neo-Shinen WILL produce socially unacceptable text without warning.
GPT-Neo-Shinen will respond to particular prompts and offensive content may occur without warning. We recommend having a human curate or filter the outputs before releasing them, both to censor undesirable content and to improve the quality of the results.",Natural Language Processing
fairseq-dense-355M,Text Generation,PyTorch; Safetensors; Transformers,English,,https://arxiv.org/pdf/2112.10684.pdf,4,,170,1623.325475,,https://huggingface.co/KoboldAI/fairseq-dense-355M,"This is a Hugging Face transformers-compatible conversion of the original dense 355M-parameter model from the paper ""Efficient Large Scale Language Modeling with Mixtures of Experts"" from Artetxe et al. Please refer to the original model card, which can be found at https://github.com/facebookresearch/fairseq/blob/main/examples/moe_lm/model_card.md.",Natural Language Processing
SGPT-5.8B-weightedmean-nli-bitfit,Sentence Similarity,PyTorch; Sentence Transformers,,,https://arxiv.org/pdf/2202.08904.pdf,5,,582,24067.43896,5,https://huggingface.co/Muennighoff/SGPT-5.8B-weightedmean-nli-bitfit,"For usage instructions, refer to our codebase: https://github.com/Muennighoff/sgpt ; For eval results, refer to our paper: https://arxiv.org/abs/2202.08904; The model was trained with the parameters:; DataLoader:; torch.utils.data.dataloader.DataLoader of length 249592 with parameters:",Natural Language Processing
hebrew-gpt_neo-xl-poetry,Text Generation,PyTorch; JAX; Safetensors; Transformers,Hebrew,mit,,2,,13,16263.60505,,https://huggingface.co/Norod78/hebrew-gpt_neo-xl-poetry,"Hebrew poetry text generation model which was fine tuned upon on hebrew-gpt_neo-xl.; An assortment of various Hebrew books, magazines and poetry corpuses; Similar to this one ; Available here  ",Natural Language Processing
RoBERTalex,Fill-Mask,PyTorch; Transformers,Spanish,apache-2.0,https://arxiv.org/pdf/1907.11692.pdf; https://arxiv.org/pdf/2110.12201.pdf,9,legal_ES; temu_legal,493,506.3295576,1,https://huggingface.co/PlanTL-GOB-ES/RoBERTalex,"The RoBERTalex is a transformer-based masked language model for the Spanish language. It is based on the RoBERTa base model and has been pre-trained using a large Spanish Legal Domain Corpora, with a total of 8.9GB of text.; The RoBERTalex model is ready-to-use only for masked language modeling to perform the Fill Mask task (try the inference API or read the next section).
However, it is intended to be fine-tuned on non-generative downstream tasks such as Question Answering, Text Classification, or Named Entity Recognition.
You can use the raw model for fill mask or fine-tune it to a downstream task.; Here is how to use this model:; Here is how to use this model to get the features of a given text in PyTorch:; At the time of submission, no measures have been taken to estimate the bias embedded in the model. However, we are well aware that our models may be biased since the corpora have been collected using crawling techniques on multiple web sources. We intend to conduct research in these areas in the future, and if completed, this model card will be updated.",Natural Language Processing
roberta-base-biomedical-es,Fill-Mask,PyTorch; Transformers,Spanish,apache-2.0,https://arxiv.org/pdf/2109.03570.pdf; https://arxiv.org/pdf/2109.07765.pdf,3,,99,506.2643966,,https://huggingface.co/PlanTL-GOB-ES/roberta-base-biomedical-es,"Biomedical pretrained language model for Spanish. For more details about the corpus, the pretraining and the evaluation, check the official repository and read our preprint.; The model is ready-to-use only for masked language modelling to perform the Fill Mask task (try the inference API or read the next section). However, it is intended to be fine-tuned on downstream tasks such as Named Entity Recognition or Text Classification.; This model is a RoBERTa-based model trained on a
biomedical corpus in Spanish collected from several sources (see next section). ; The training corpus has been tokenized using a byte version of Byte-Pair Encoding (BPE)
used in the original RoBERTA model with a vocabulary size of 52,000 tokens. The pretraining consists of a masked language model training at the subword level following the approach employed for the RoBERTa base model with the same hyperparameters as in the original work. The training lasted a total of 48 hours with 16 NVIDIA V100 GPUs of 16GB DDRAM, using Adam optimizer with a peak learning rate of 0.0005 and an effective batch size of 2,048 sentences.; The training corpus is composed of several biomedical corpora in Spanish, collected from publicly available corpora and crawlers.
To obtain a high-quality training corpus, a cleaning pipeline with the following operations has been applied:",Natural Language Processing
roberta-base-ca,Fill-Mask,PyTorch; Transformers,Catalan,apache-2.0,,4,,49,506.2427615,,https://huggingface.co/PlanTL-GOB-ES/roberta-base-ca,"BERTa is a transformer-based masked language model for the Catalan language. 
It is based on the RoBERTA base model 
and has been trained on a medium-size corpus collected from publicly available corpora and crawlers.; This model was originally published as bsc/roberta-base-ca-cased.; The model is ready-to-use only for masked language modelling to perform the Fill Mask task (try the inference API or read the next section). 
However, it is intended to be fine-tuned on non-generative downstream tasks such as Question Answering, Text Classification or Named Entity Recognition.; Below, an example of how to use the masked language modelling task with a pipeline.; The training corpus consists of several corpora gathered from web crawling and public corpora.",Natural Language Processing
roberta-large-bne,Fill-Mask,PyTorch; Transformers,Spanish,apache-2.0,https://arxiv.org/pdf/1907.11692.pdf,11,bne,897,1458.145942,1,https://huggingface.co/PlanTL-GOB-ES/roberta-large-bne,"The roberta-large-bne is a transformer-based masked language model for the Spanish language. It is based on the RoBERTa large model and has been pre-trained using the largest Spanish corpus known to date, with a total of 570GB of clean and deduplicated text processed for this work, compiled from the web crawlings performed by the  National Library of Spain (Biblioteca Nacional de Espa?a) from 2009 to 2019.; The roberta-large-bne model is ready-to-use only for masked language modeling to perform the Fill Mask task (try the inference API or read the next section).
However, it is intended to be fine-tuned on non-generative downstream tasks such as Question Answering, Text Classification, or Named Entity Recognition.
You can use the raw model for fill mask or fine-tune it to a downstream task.; Here is how to use this model:; Here is how to use this model to get the features of a given text in PyTorch:; At the time of submission, no measures have been taken to estimate the bias and toxicity embedded in the model. However, we are well aware that our models may be biased since the corpora have been collected using crawling techniques on multiple web sources. We intend to conduct research in these areas in the future, and if completed, this model card will be updated.",Natural Language Processing
distilbert_punctuator_en,Token Classification,PyTorch; Safetensors; Transformers,,,,6,,401,531.6865506,,https://huggingface.co/Qishuai/distilbert_punctuator_en,The model is fine-tuned based on DistilBertForTokenClassification for adding punctuations to plain text (uncased English); Combination of following three dataset:; Validation with 500 samples of dataset scraped from https://www.thenews.com.pk website. Reference; Metrics Report:; Validation with 86 news ted talks of 2020 which are not included in training dataset Reference,Natural Language Processing
FacialEmoRecog,Image Classification,PyTorch; Transformers,English,mit,,13,Jeneral/fer2013,257,343.0016212,1,https://huggingface.co/Rajaram1996/FacialEmoRecog,Create your own image classifier for anything by running this repo  ,Computer Vision
prot_bert_bfd,Fill-Mask,PyTorch; TensorFlow; Transformers,protein,,,9,BFD,27863,3614.728674,1,https://huggingface.co/Rostlab/prot_bert_bfd,"Pretrained model on protein sequences using a masked language modeling (MLM) objective. It was introduced in
this paper and first released in
this repository. This model is trained on uppercase amino acids: it only works with capital letter amino acids.; ProtBert-BFD is based on Bert model which pretrained on a large corpus of protein sequences in a self-supervised fashion.
This means it was pretrained on the raw protein sequences only, with no humans labelling them in any way (which is why it can use lots of
publicly available data) with an automatic process to generate inputs and labels from those protein sequences.; One important difference between our Bert model and the original Bert version is the way of dealing with sequences as separate documents
This means the Next sentence prediction is not used, as each sequence is treated as a complete document.
The masking follows the original Bert training with randomly masks 15% of the amino acids in the input. ; At the end, the feature extracted from this model revealed that the LM-embeddings from unlabeled data (only protein sequences) captured important biophysical properties governing protein
shape.
This implied learning some of the grammar of the language of life realized in protein sequences.; The model could be used for protein feature extraction or to be fine-tuned on downstream tasks.
We have noticed in some tasks you could gain more accuracy by fine-tuning the model rather than using it as a feature extractor.",Natural Language Processing
distilbert-base-nepali,Fill-Mask,PyTorch; Safetensors; Transformers,,apache-2.0,https://arxiv.org/pdf/1911.02116.pdf; https://arxiv.org/pdf/1910.01108.pdf,4,Sakonii/nepalitext-language-model-dataset,82,537.8030725,,https://huggingface.co/Sakonii/distilbert-base-nepali,"This model is pre-trained on nepalitext dataset consisting of over 13 million Nepali text sequences using a masked language modeling (MLM) objective. Our approach trains a Sentence Piece Model (SPM) for text tokenization similar to XLM-ROBERTa and trains distilbert model for language modeling. Find more details in this paper.; It achieves the following results on the evaluation set:; Refer to original distilbert-base-uncased; This backbone model intends to be fine-tuned on Nepali language focused downstream task such as sequence classification, token classification or question answering. 
The language model being trained on a data with texts grouped to a block size of 512, it handles text sequence up to 512 tokens and may not perform satisfactorily on shorter sequences.; This model can be used directly with a pipeline for masked language modeling:",Natural Language Processing
recreate-history,Token Classification,PyTorch; Transformers,Bengali,apache-2.0,,1,xtreme,44,69.32442211,,https://huggingface.co/SaulLu/recreate-history,sahajBERT fine-tuned for NER using the bengali split of WikiANN . ; Named Entities predicted by the model:; You can use this model directly with a pipeline for masked language modeling:; WIP; The model was initialized it with pre-trained weights of sahajBERT at step 19519 and trained on the bengali of WikiANN ,Natural Language Processing
bart-base-detox,Text2Text Generation,PyTorch; Safetensors; Transformers,English,,,3,,817,1118.590837,,https://huggingface.co/s-nlp/bart-base-detox,"Model Overview; This is the model presented in the paper ""ParaDetox: Detoxification with Parallel Data"". ; The model itself is BART (base) model trained on parallel detoxification dataset ParaDetox achiving SOTA results for detoxification task. More details, code and data can be found here.; How to use; Citation",Natural Language Processing
roberta-base-formality-ranker,Text Classification,PyTorch; Safetensors; Transformers,English,,,4,GYAFC; Pavlick-Tetreault-2016,1640,1000.588528,,https://huggingface.co/s-nlp/roberta-base-formality-ranker,"The model has been trained to predict for English sentences, whether they are formal or informal. ; Base model: roberta-base; Datasets: GYAFC from Rao and Tetreault, 2018 and online formality corpus from Pavlick and Tetreault, 2016.; Data augmentation: changing texts to upper or lower case; removing all punctuation, adding dot at the end of a sentence. It was applied because otherwise the model is over-reliant on punctuation and capitalization and does not pay enough attention to other features.; Loss: binary classification (on GYAFC), in-batch ranking (on PT data).",Natural Language Processing
AraT5-base,,PyTorch; TensorFlow; Transformers,Arabic,,,13,,1580,2316.869212,,https://huggingface.co/UBC-NLP/AraT5-base,"This is the repository accompanying our paper AraT5: Text-to-Text Transformers for Arabic Language Understanding and Generation. In this is the repository we Introduce AraT5MSA, AraT5Tweet, and AraT5: three powerful Arabic-specific text-to-text Transformer based models;; Below is an example for fine-tuning AraT5-base for News Title Generation on the Aranews dataset ; For more details about the fine-tuning example, please read this notebook  ; In addition, we release the fine-tuned checkpoint of the News Title Generation (NGT) which is described in the paper. The model available at Huggingface (UBC-NLP/AraT5-base-title-generation).; For more details, please visit our own GitHub.",
Czert-B-base-cased-long-zero-shot,Feature Extraction,PyTorch; Transformers,,,https://arxiv.org/pdf/2103.13031.pdf,2,,45,534.2213491,,https://huggingface.co/UWB-AIR/Czert-B-base-cased-long-zero-shot,"This repository keeps trained Czert-B-base-cased-long-zero-shot model for the paper Czert ¨C Czech BERT-like Model for Language Representation

For more information, see the paper; This is long version of Czert-B-base-cased created without any finetunning on long documents. Positional embedings were created by simply repeating the positional embeddings of the original Czert-B model. For tokenization, please use BertTokenizer. Cannot be used with AutoTokenizer. ; You can download MLM & NSP only pretrained models
CZERT-A-v1
CZERT-B-v1; After some additional experiments, we found out that the tokenizers config was exported wrongly. In Czert-B-v1, the tokenizer parameter ""do_lower_case""  was wrongly set to true. In Czert-A-v1 the parameter ""strip_accents""  was incorrectly set to true. ; Both mistakes are repaired in v2.
CZERT-A-v2
CZERT-B-v2",Multimodel
FinancialBERT-Sentiment-Analysis,Text Classification,PyTorch; Transformers,English,,,28,financial_phrasebank,7198,439.6795608,4,https://huggingface.co/ahmedrachid/FinancialBERT-Sentiment-Analysis,"FinancialBERT is a BERT model pre-trained on a large corpora of financial texts. The purpose is to enhance financial NLP research and practice in financial domain, hoping that financial practitioners and researchers can benefit from this model without the necessity of the significant computational resources required to train the model. ; The model was fine-tuned for Sentiment Analysis task on Financial PhraseBank dataset. Experiments show that this model outperforms the general BERT and other financial domain-specific models.; More details on FinancialBERT's pre-training process can be found at: https://www.researchgate.net/publication/358284785_FinancialBERT_-_A_Pretrained_Language_Model_for_Financial_Text_Mining; FinancialBERT model was fine-tuned on Financial PhraseBank, a dataset consisting of 4840 Financial News categorised by sentiment (negative, neutral, positive).; The evaluation metrics used are: Precision, Recall and F1-score. The following is the classification report on the test set.",Natural Language Processing
frame-interpolation-film-style,,Keras,,,,9,,186,2.858017578,53,https://huggingface.co/akhaliq/frame-interpolation-film-style,"No model card; New: Create and edit this model card directly on the website!; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
led-base-16384,Text2Text Generation,PyTorch; TensorFlow; Transformers,English,apache-2.0,https://arxiv.org/pdf/2004.05150.pdf,31,,10785,1297.32638,4,https://huggingface.co/allenai/led-base-16384,"Allenai's Longformer Encoder-Decoder (LED).; As described in Longformer: The Long-Document Transformer by Iz Beltagy, Matthew E. Peters, Arman Cohan, led-base-16384 was initialized from bart-base since both models share the exact same architecture. To be able to process 16K tokens, bart-base's position embedding matrix was simply copied 16 times.; This model is especially interesting for long-range summarization and question answering.; This notebook shows how led-base-16384 can effectively be fine-tuned on a downstream task.",Natural Language Processing
specter,Feature Extraction,PyTorch; TensorFlow; JAX; Transformers,English,apache-2.0,https://arxiv.org/pdf/2004.07180.pdf,51,SciDocs,18493,1320.219289,2,https://huggingface.co/allenai/specter,"SPECTER is a pre-trained language model to generate document-level embedding of documents. It is pre-trained on a powerful signal of document-level relatedness: the citation graph. Unlike existing pretrained language models, SPECTER can be easily applied to downstream applications without task-specific fine-tuning. ; If you're coming here because you want to embed papers, SPECTER has now been superceded by SPECTER 2.0. Use that instead.; Paper: SPECTER: Document-level Representation Learning using Citation-informed Transformers; Original Repo: Github; Evaluation Benchmark: SciDocs",Multimodel
bort,Fill-Mask,PyTorch; TensorFlow; JAX; Transformers,,,https://arxiv.org/pdf/2010.10499.pdf,10,,632,713.3277352,2,https://huggingface.co/amazon/bort,"?? Disclaimer ?? ; This model is community-contributed, and not supported by Amazon, Inc.; Amazon's BORT; BORT is a highly compressed version of bert-large that is up to 10 times faster at inference. 
The model is an optimal sub-architecture of bert-large that was found using neural architecture search.; Paper",Natural Language Processing
bert-multilingual-passage-reranking-msmarco,Text Classification,PyTorch; TensorFlow; JAX; Transformers,102 languages,apache-2.0,https://arxiv.org/pdf/1901.04085.pdf,18,msmarco,6023,2008.860656,2,https://huggingface.co/amberoad/bert-multilingual-passage-reranking-msmarco,"Input: Supports over 100 Languages. See List of supported languages for all available.; Purpose: This module takes a search query [1] and a passage [2] and calculates if the passage matches the query. 
It can be used as an improvement for Elasticsearch Results and boosts the relevancy by up to 100%. ; Architecture: On top of BERT there is a Densly Connected NN which takes the 768 Dimensional [CLS] Token as input and provides the output (Arxiv).; Output: Just a single value between between -10 and 10. Better matching query,passage pairs tend to have a higher a score.; Both query[1] and passage[2] have to fit in 512 Tokens.
As you normally want to rerank the first dozens of search results keep in mind the inference time of approximately 300 ms/query.",Natural Language Processing
roberta-base-ner-conll2003,Token Classification,PyTorch; Transformers,,mit,,1,conll2003,16,498.5909025,,https://huggingface.co/andi611/roberta-base-ner-conll2003,"This model is a fine-tuned version of roberta-base on the conll2003 dataset.
It achieves the following results on the evaluation set:; More information needed; More information needed; More information needed; The following hyperparameters were used during training:",Natural Language Processing
bert-for-patents,Fill-Mask,PyTorch; TensorFlow; Safetensors; Transformers,English,apache-2.0,,43,,6992,4403.524335,3,https://huggingface.co/anferico/bert-for-patents,"BERT for Patents is a model trained by Google on 100M+ patents (not just US patents). It is based on BERTLARGE.; If you want to learn more about the model, check out the blog post, white paper and GitHub page containing the original TensorFlow checkpoint.",Natural Language Processing
german-gpt2,Text Generation,PyTorch; TensorFlow; JAX; Transformers,German,mit,,1,,802,1682.450523,5,https://huggingface.co/anonymous-german-nlp/german-gpt2,Note: This model was de-anonymized and now lives at:; https://huggingface.co/dbmdz/german-gpt2; Please use the new model name instead!,Natural Language Processing
wav2vec2-xls-r-300m-bengali,Automatic Speech Recognition,PyTorch; Transformers,Bengali,apache-2.0,,2,openslr; SLR53; AI4Bharat/IndicCorp,645,1290.289093,,https://huggingface.co/arijitx/wav2vec2-xls-r-300m-bengali,"This model is a fine-tuned version of facebook/wav2vec2-xls-r-300m on the OPENSLR_SLR53 - bengali dataset.
It achieves the following results on the evaluation set. ; Without language model : ; With 5 gram language model trained on 30M sentences randomly chosen from AI4Bharat IndicCorp dataset : ; Note : 5% of a total 10935 samples have been used for evaluation. Evaluation set has 10935 examples which was not part of training training was done on first 95% and eval was done on last 5%. Training was stopped after 180k steps. Output predictions are available under files section.; The following hyperparameters were used during training:",Audio
xlm-roberta-base-uncased-all-english,Token Classification,PyTorch; Transformers,,,,1,,23,1141.731294,,https://huggingface.co/tner/xlm-roberta-base-uncased-all-english,XLM-RoBERTa finetuned on NER. Check more detail at TNER repository.,Natural Language Processing
KcELECTRA-base,,PyTorch; Transformers,Korean; English,mit,,14,,3370,437.7936505,2,https://huggingface.co/beomi/KcELECTRA-base,"** Updates on 2022.10.08 **; ??? ??? Transformer ?? ???? ??? ??? ??, ?? ??, ? ? ? ??? ???? ???? ??? ?????. ??, ??? NSMC? ?? User-Generated Noisy text domain ????? ???? ??? ??? ??? ???? ???, ??? ? ???? ????? ???? ?? ???? ???? ?????.; KcELECTRA? ?? ?? ??? ????? ???? ??, ??? ???? ??? ???? ???, ?????? ELECTRA??? ???? ??? Pretrained ELECTRA ?????.; ?? KcBERT ?? ???? ?? ? vocab ??? ?? ??? ???? ??? ???????.; KcELECTRA? Huggingface? Transformers ?????? ?? ??? ??? ??? ? ????. (??? ?? ????? ???? ????.)",
bert-base-go-emotion,Text Classification,PyTorch; Transformers,English,apache-2.0,,26,go_emotions,97708,438.6861209,12,https://huggingface.co/bhadresh-savani/bert-base-go-emotion,Notebook,Natural Language Processing
bluebert_pubmed_uncased_L-12_H-768_A-12,,PyTorch; Transformers,English,cc0-1.0,,4,pubmed,1506,1797.918327,,https://huggingface.co/bionlp/bluebert_pubmed_uncased_L-12_H-768_A-12,"A BERT model pre-trained on PubMed abstracts; Please see https://github.com/ncbi-nlp/bluebert; We provide preprocessed PubMed texts that were used to pre-train the BlueBERT models. 
The corpus contains ~4000M words extracted from the PubMed ASCII code version. ; Pre-trained model: https://huggingface.co/bert-base-uncased; Below is a code snippet for more details.",
Ko-DialoGPT,Conversational,PyTorch; Transformers,Korean,cc-by-nc-sa-4.0,,7,,381,514.5238339,,https://huggingface.co/byeongal/Ko-DialoGPT,,Natural Language Processing
SapBERT-UMLS-2020AB-all-lang-from-XLMR,Feature Extraction,PyTorch; Safetensors; Transformers,,,https://arxiv.org/pdf/2010.11784.pdf,1,,844,2278.353948,,https://huggingface.co/cambridgeltl/SapBERT-UMLS-2020AB-all-lang-from-XLMR,"language: multilingual; tags:; datasets:; [news] A cross-lingual extension of SapBERT will appear in the main onference of ACL 2021! 
[news] SapBERT will appear in the conference proceedings of NAACL 2021!; SapBERT (Liu et al. 2020) trained with UMLS 2020AB, using xlm-roberta-base as the base model. Please use [CLS] as the representation of the input.",Multimodel
twitter-roberta-base-irony,Text Classification,PyTorch; TensorFlow; JAX; Transformers,,,https://arxiv.org/pdf/2010.12421.pdf,9,,4142685,1500.326774,,https://huggingface.co/cardiffnlp/twitter-roberta-base-irony,This is a roBERTa-base model trained on ~58M tweets and finetuned for irony detection with the TweetEval benchmark.; Output: ,Natural Language Processing
monot5-base-msmarco-10k,Text2Text Generation,PyTorch; JAX; Transformers,,,,10,,15420,1784.779449,,https://huggingface.co/castorini/monot5-base-msmarco-10k,"This model is a T5-base reranker fine-tuned on the MS MARCO passage dataset for 10k steps (or 1 epoch).; This model usually has a better zero-shot performance than monot5-base-msmarco, i.e., it performs better on datasets different from MS MARCO.; For more details on how to use it, check the following links:; Paper describing the model: Document Ranking with a Pretrained Sequence-to-Sequence Model",Natural Language Processing
bert-base-chinese-ner,Token Classification,PyTorch; JAX; Transformers,Chinese,gpl-3.0,,44,,182342,814.1130421,1,https://huggingface.co/ckiplab/bert-base-chinese-ner,"This project provides traditional Chinese transformers models (including ALBERT, BERT, GPT2) and NLP tools (including word segmentation, part-of-speech tagging, named entity recognition).; ß@£°¸Ìá¹©ÁË·±ówÖÐÎÄµÄ transformers Ä£ÐÍ£¨°üº¬ ALBERT¡¢BERT¡¢GPT2£©¼°×ÔÈ»ÕZÑÔÌÀí¹¤¾ß£¨°üº¬àÔ~¡¢Ô~ÐÔËÓ¡¢ów±æ×R£©¡£; Please use BertTokenizerFast as tokenizer instead of AutoTokenizer.; ÕÊ¹ÓÃ BertTokenizerFast ¶ø·Ç AutoTokenizer¡£; For full usage and more information, please refer to https://github.com/ckiplab/ckip-transformers.",Natural Language Processing
distilroberta-base-climate-detector,Text Classification,PyTorch; Safetensors; Transformers,English,apache-2.0,,4,climatebert/climate_detection,36592,660.6144625,,https://huggingface.co/climatebert/distilroberta-base-climate-detector,"This is the fine-tuned ClimateBERT language model with a classification head for detecting climate-related paragraphs.; Using the climatebert/distilroberta-base-climate-f language model as starting point, the distilroberta-base-climate-detector model is fine-tuned on our climatebert/climate_detection dataset.; Note: This model is trained on paragraphs. It may not perform well on sentences.; You can use the model with a pipeline for text classification:",Natural Language Processing
rut5-base-paraphraser,Text2Text Generation,PyTorch; Safetensors; Transformers,Russian,mit,,11,cointegrated/ru-paraphrase-NMT-Leipzig,743,1954.811596,,https://huggingface.co/cointegrated/rut5-base-paraphraser,This is a paraphraser for Russian sentences described in this Habr post. ; It is recommended to use the model with the encoder_no_repeat_ngram_size argument:,Natural Language Processing
ms-marco-MiniLM-L-12-v2,Text Classification,PyTorch; JAX; Transformers,,apache-2.0,,25,,494680,267.2315812,12,https://huggingface.co/cross-encoder/ms-marco-MiniLM-L-12-v2,"This model was trained on the MS Marco Passage Ranking task.; The model can be used for Information Retrieval: Given a query, encode the query will all possible passages (e.g. retrieved with ElasticSearch). Then sort the passages in a decreasing order. See SBERT.net Retrieve & Re-rank for more details. The training code is available here: SBERT.net Training MS Marco; The usage becomes easier when you have SentenceTransformers installed. Then, you can use the pre-trained models like this:; In the following table, we provide various pre-trained Cross-Encoders together with their performance on the TREC Deep Learning 2019 and the MS Marco Passage Reranking dataset. ;  Note: Runtime was computed on a V100 GPU.",Natural Language Processing
ms-marco-MiniLM-L-2-v2,Text Classification,PyTorch; JAX; Transformers,,apache-2.0,,1,,10494,125.2315841,,https://huggingface.co/cross-encoder/ms-marco-MiniLM-L-2-v2,"This model was trained on the MS Marco Passage Ranking task.; The model can be used for Information Retrieval: Given a query, encode the query will all possible passages (e.g. retrieved with ElasticSearch). Then sort the passages in a decreasing order. See SBERT.net Retrieve & Re-rank for more details. The training code is available here: SBERT.net Training MS Marco; The usage becomes easier when you have SentenceTransformers installed. Then, you can use the pre-trained models like this:; In the following table, we provide various pre-trained Cross-Encoders together with their performance on the TREC Deep Learning 2019 and the MS Marco Passage Reranking dataset. ;  Note: Runtime was computed on a V100 GPU.",Natural Language Processing
ms-marco-MiniLM-L-6-v2,Text Classification,PyTorch; JAX; Transformers,,apache-2.0,,19,,215288,182.0315841,52,https://huggingface.co/cross-encoder/ms-marco-MiniLM-L-6-v2,"This model was trained on the MS Marco Passage Ranking task.; The model can be used for Information Retrieval: Given a query, encode the query will all possible passages (e.g. retrieved with ElasticSearch). Then sort the passages in a decreasing order. See SBERT.net Retrieve & Re-rank for more details. The training code is available here: SBERT.net Training MS Marco; The usage becomes easier when you have SentenceTransformers installed. Then, you can use the pre-trained models like this:; In the following table, we provide various pre-trained Cross-Encoders together with their performance on the TREC Deep Learning 2019 and the MS Marco Passage Reranking dataset. ;  Note: Runtime was computed on a V100 GPU.",Natural Language Processing
nli-deberta-v3-large,Zero-Shot Classification,PyTorch; Transformers,English,apache-2.0,,11,multi_nli; snli,4823,1784.226114,,https://huggingface.co/cross-encoder/nli-deberta-v3-large,"This model was trained using SentenceTransformers Cross-Encoder class. This model is based on microsoft/deberta-v3-large; The model was trained on the SNLI and MultiNLI datasets. For a given sentence pair, it will output three scores corresponding to the labels: contradiction, entailment, neutral.; For futher evaluation results, see SBERT.net - Pretrained Cross-Encoder.; Pre-trained models can be used like this:; You can use the model also directly with Transformers library (without SentenceTransformers library):",Natural Language Processing
bias-detection-model,Text Classification,TensorFlow; Transformers,English,,,17,,2928,268.2312017,1,https://huggingface.co/d4data/bias-detection-model,"An English sequence classification model, trained on MBAD Dataset to detect bias and fairness in sentences (news articles). This model was built on top of distilbert-base-uncased model and trained for 30 epochs with a batch size of 16, a learning rate of 5e-5, and a maximum sequence length of 512.; The easiest way is to load the inference api from huggingface and second method is through the pipeline object offered by transformers library.; This model is part of the Research topic ""Bias and Fairness in AI"" conducted by Deepak John Reji, Shaina Raza. If you use this work (code, model or dataset), please star at:; Bias & Fairness in AI, (2022), GitHub repository, https://github.com/dreji18/Fairness-in-AI",Natural Language Processing
dalle-mini,Text-to-Image,JAX; Transformers,English,apache-2.0,https://arxiv.org/pdf/2102.08981.pdf; https://arxiv.org/pdf/2012.09841.pdf; https://arxiv.org/pdf/1910.13461.pdf; https://arxiv.org/pdf/1910.09700.pdf,305,,215,1829.570575,60,https://huggingface.co/dalle-mini/dalle-mini,"This model card focuses on the model associated with the DALL¡¤E mini space on Hugging Face, available here. The app is called ¡°dalle-mini¡±, but  incorporates ¡°DALL¡¤E Mini¡¯¡¯ and ¡°DALL¡¤E Mega¡± models (further details on this distinction forthcoming).; The DALL¡¤E Mega model is the largest version of DALLE Mini. For more information specific to DALL¡¤E Mega, see the DALL¡¤E Mega model card.; The model is intended to be used to generate images based on text prompts for research and personal consumption.  Intended uses include supporting creativity, creating humorous content, and providing generations for people curious about the model¡¯s behavior.  Intended uses exclude those described in the Misuse and Out-of-Scope Use section.; The model could also be used for downstream use cases, including:; Downstream uses exclude the uses described in Misuse and Out-of-Scope Use.",Multimodel
gpt2-small-spanish,Text Generation,PyTorch; TensorFlow; JAX; Transformers,Spanish,apache-2.0,,19,wikipedia,1661,1507.334505,4,https://huggingface.co/datificate/gpt2-small-spanish,"La descripci¨®n en Espa?ol se encuentra despu¨¦s de la descripci¨®n en Ingl¨¦s.; GPT2-small-spanish is a state-of-the-art language model for Spanish based on the GPT-2 small model. ; It was trained on Spanish Wikipedia using Transfer Learning and Fine-tuning techniques. The training took around 70 hours with four GPU NVIDIA GTX 1080-Ti with 11GB of DDR5 and with around 3GB of (processed) training data. ; It was fine-tuned from the English pre-trained GPT-2 small using the Hugging Face libraries (Transformers and Tokenizers) wrapped into the fastai v2 Deep Learning framework. All the fine-tuning fastai v2 techniques were used.; The training is purely based on the GPorTuguese-2 model developed by Pierre Guillou. The training details are in this article: ""Faster than training from scratch ¡ª Fine-tuning the English GPT-2 in any language with Hugging Face and fastai v2 (practical case with Portuguese)"".",Natural Language Processing
gpt2-french-small,Text Generation,PyTorch; JAX; Safetensors; Transformers,French,,,6,,622,1520.68951,,https://huggingface.co/dbddv01/gpt2-french-small,"A small french language model for french text generation (and possibly more NLP tasks...); Introduction; This french gpt2 model is based on openai GPT-2 small model.; It was trained on a very small (190Mb) dataset  from french wikipedia using Transfer Learning and Fine-tuning techniques in just over a day, on one Colab pro with 1GPU 16GB.; It was created applying the recept of Pierre Guillou",Natural Language Processing
wav2vec2-xls-r-300m-italian,Automatic Speech Recognition,PyTorch; Safetensors; Transformers,Italian,apache-2.0,,2,mozilla-foundation/common_voice_7_0,24,3502.568744,1,https://huggingface.co/dbdmg/wav2vec2-xls-r-300m-italian,"This model is a fine-tuned version of facebook/wav2vec2-xls-r-300m on the MOZILLA-FOUNDATION/COMMON_VOICE_7_0 - IT dataset.
It achieves the following results on the evaluation set:; More information needed; More information needed; More information needed; The following hyperparameters were used during training:",Audio
bert-large-cased-finetuned-conll03-english,Token Classification,PyTorch; TensorFlow; JAX; Rust; Transformers,,,,29,,298708,5447.88939,7,https://huggingface.co/dbmdz/bert-large-cased-finetuned-conll03-english,No model card; New: Create and edit this model card directly on the website!,Natural Language Processing
xlm-roberta-large-squad2,Question Answering,PyTorch; Safetensors; Transformers,multilingual,cc-by-4.0,,46,squad_v2,5050,4592.596702,7,https://huggingface.co/deepset/xlm-roberta-large-squad2,"Language model: xlm-roberta-largeLanguage: MultilingualDownstream-task: Extractive QATraining data: SQuAD 2.0Eval data: SQuAD dev set - German MLQA - German XQuADTraining run: MLFlow linkInfrastructure: 4x Tesla v100; Evaluated on the SQuAD 2.0 English dev set with the official eval script.; Evaluated on German MLQA: test-context-de-question-de.json; Evaluated on German XQuAD: xquad.de.json; For doing QA at scale (i.e. many docs instead of single paragraph), you can load the model also in haystack:",Natural Language Processing
roberta-cls-consec,Text Classification,PyTorch; JAX; Safetensors; Transformers,,,https://arxiv.org/pdf/2012.03619.pdf,10,,431,1502.326875,,https://huggingface.co/dennlinger/roberta-cls-consec,"This network has been fine-tuned for the task described in the paper Topical Change Detection in Documents via Embeddings of Long Sequences and is our best-performing base-transformer model. You can find more detailed information in our GitHub page for the paper here, or read the paper itself. The weights are based on RoBERTa-base.; The preferred way is through pipelines; The model expects two segments that are separated with the [SEP] token. In our training setup, we had entire paragraphs as samples (or up to 512 tokens across two paragraphs), specifically trained on a Terms of Service data set. Note that this might lead to poor performance on ""general"" topics, such as news articles or Wikipedia.; The training task is to determine whether two text segments (paragraphs) belong to the same topical section or not. This can be utilized to create a topical segmentation of a document by consecutively predicting the ""coherence"" of two segments.If you are experimenting via the Huggingface Model API, the following are interpretations of the LABELs:; The results of this model can be found in the paper. We average over models from five different random seeds, which is why the specific results for this model might be different from the exact values in the paper.",Natural Language Processing
bert-multi-english-german-squad2,Question Answering,PyTorch; Safetensors; Transformers,German; English; multilingual,mit,,29,,1634,1418.97758,1,https://huggingface.co/deutsche-telekom/bert-multi-english-german-squad2,"We created German Squad 2.0 (deQuAD 2.0) and merged with SQuAD2.0 into an English and German training data for question answering. The bert-base-multilingual-cased is used to fine-tune bilingual QA downstream task.; SQuAD2.0 was auto-translated into German. We hired professional editors to proofread the translated transcripts, correct mistakes and double check the answers to further polish the text and enhance annotation quality. The final German deQuAD dataset contains 130k training and 11k test samples.; Copyright (c) 2021 Fang Xu, Deutsche Telekom AG ",Natural Language Processing
bert-base-polish-uncased-v1,Fill-Mask,PyTorch; JAX; Transformers,Polish,,,6,,7199,1060.492881,,https://huggingface.co/dkleczek/bert-base-polish-uncased-v1,"Polish version of BERT language model is here! It is now available in two variants: cased and uncased, both can be downloaded and used via HuggingFace transformers library. I recommend using the cased model, more info on the differences and benchmark results below. ; ; Below is the list of corpora used along with the output of wc command (counting lines, words and characters). These corpora were divided into sentences with srxsegmenter (see references), concatenated and tokenized with HuggingFace BERT Tokenizer. ; Polbert is released via HuggingFace Transformers library.; For an example use as language model, see this notebook file. ",Natural Language Processing
letr-sol-profanity-filter,Text Classification,PyTorch; Transformers,,,,1,,76,436.2554291,,https://huggingface.co/dobbytk/letr-sol-profanity-filter,No model card; New: Create and edit this model card directly on the website!,Natural Language Processing
kenlm,,,24 languages,mit,,20,wikipedia; oscar,0,0.019619141,1,https://huggingface.co/edugp/kenlm,"This repo contains several KenLM models trained on different tokenized datasets and languages.KenLM models are probabilistic n-gram languge models that models. One use case of these models consist on fast perplexity estimation for filtering or sampling large datasets. For example, one could use a KenLM model trained on French Wikipedia to run inference on a large dataset and filter out samples that are very unlike to appear on Wikipedia (high perplexity), or very simple non-informative sentences that could appear repeatedly (low perplexity).; At the root of this repo you will find different directories named after the dataset models were trained on (e.g. wikipedia, oscar). Within each directory, you will find several models trained on different language subsets of the dataset (e.g. en (English), es (Spanish), fr (French)). For each language you will find three different files; The models have been trained using some of the preprocessing steps from cc_net, in particular replacing numbers with zeros and normalizing punctuation. So, it is important to keep the default values for the parameters: lower_case, remove_accents, normalize_numbers and punctuation when using the pre-trained models in order to replicate the same pre-processing steps at inference time.; In the example above we see that, since Wikipedia is a collection of encyclopedic articles, a KenLM model trained on it will naturally give lower perplexity scores to sentences with formal language and no grammar mistakes than colloquial sentences with grammar mistakes.; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
text2tags,Summarization,PyTorch; Safetensors; Transformers,Italian,,,3,,48,618.0632326,,https://huggingface.co/efederici/text2tags,"The model has been trained on a collection of 28k news articles with tags. Its purpose is to create tags suitable for the given article. We can use this model also for information-retrieval purposes (GenQ), fine-tuning sentence-transformers for asymmetric semantic search. ; If you like this project, consider supporting it with a cup of coffee! ???
; 
 
    Pieter Bruegel the Elder, The Fight Between Carnival and Lent, 1559
; Sample code with an article from IlPost:; Assuming paragraphs are divided by: '\n\n'.",Natural Language Processing
bert-base-turkish-cased-mean-nli-stsb-tr,Sentence Similarity,PyTorch; Sentence Transformers; Transformers,Turkish,apache-2.0,,9,nli_tr; emrecan/stsb-mt-turkish,815,443.7399625,,https://huggingface.co/emrecan/bert-base-turkish-cased-mean-nli-stsb-tr,"This is a sentence-transformers model: It maps sentences & paragraphs to a 768 dimensional dense vector space and can be used for tasks like clustering or semantic search. The model was trained on Turkish machine translated versions of NLI and STS-b datasets, using example training scripts from sentence-transformers GitHub repository.; Using this model becomes easy when you have sentence-transformers installed:; Then you can use the model like this:; Without sentence-transformers, you can use the model like this: First, you pass your input through the transformer model, then you have to apply the right pooling-operation on-top of the contextualized word embeddings.; Evaluation results on test and development sets are given below:",Natural Language Processing
guwenbert-base,Fill-Mask,PyTorch; JAX; Transformers,Chinese,apache-2.0,,8,,1326,834.095155,,https://huggingface.co/ethanyt/guwenbert-base,"; This is a RoBERTa model pre-trained on Classical Chinese. You can fine-tune GuwenBERT for downstream tasks, such as sentence breaking, punctuation, named entity recognition, and so on.; For more information about RoBERTa, take a look at the RoBERTa's offical repo.; The training data is daizhige dataset (´ùÖª¸ó¹Å´úÎÄÏ×) which is contains of 15,694 books in Classical Chinese, covering Buddhism, Confucianism, Medicine, History, Zi, Yi, Yizang, Shizang, Taoism, and Jizang. 
76% of them are punctuated.
The total number of characters is 1.7B (1,743,337,673).
All traditional Characters are converted to simplified characters.
The vocabulary is constructed from this data set and the size is 23,292.; The models are initialized with hfl/chinese-roberta-wwm-ext and then pre-trained with a 2-step strategy.
In the first step, the model learns MLM with only word embeddings updated during training, until convergence. In the second step, all parameters are updated during training.",Natural Language Processing
guwenbert-large,Fill-Mask,PyTorch; JAX; Transformers,Chinese,apache-2.0,,4,,95,2693.215166,,https://huggingface.co/ethanyt/guwenbert-large,"; This is a RoBERTa model pre-trained on Classical Chinese. You can fine-tune GuwenBERT for downstream tasks, such as sentence breaking, punctuation, named entity recognition, and so on.; For more information about RoBERTa, take a look at the RoBERTa's offical repo.; The training data is daizhige dataset (´ùÖª¸ó¹Å´úÎÄÏ×) which is contains of 15,694 books in Classical Chinese, covering Buddhism, Confucianism, Medicine, History, Zi, Yi, Yizang, Shizang, Taoism, and Jizang. 
76% of them are punctuated.
The total number of characters is 1.7B (1,743,337,673).
All traditional Characters are converted to simplified characters.
The vocabulary is constructed from this data set and the size is 23,292.; The models are initialized with hfl/chinese-roberta-wwm-ext-large and then pre-trained with a 2-step strategy.
In the first step, the model learns MLM with only word embeddings updated during training, until convergence. In the second step, all parameters are updated during training.",Natural Language Processing
drln,,Transformers,,apache-2.0,https://arxiv.org/pdf/1906.12021.pdf; https://arxiv.org/pdf/2104.07566.pdf,2,eugenesiow/Div2k; eugenesiow/Set5; eugenesiow/Set14; eugenesiow/BSD100; eugenesiow/Urban100,939,415.0099681,2,https://huggingface.co/eugenesiow/drln,"DRLN model pre-trained on DIV2K (800 images training, augmented to 4000 images, 100 images validation) for 2x, 3x and 4x image super resolution. It was introduced in the paper Densely Residual Laplacian Super-resolution by Anwar et al. (2020) and first released in this repository. ; The goal of image super resolution is to restore a high resolution (HR) image from a single low resolution (LR) image. The image below shows the ground truth (HR), the bicubic upscaling and model upscaling.; ; Super-Resolution convolutional neural networks have recently demonstrated high-quality restoration for single images. However, existing algorithms often require very deep architectures and long training times. Furthermore, current convolutional neural networks for super-resolution are unable to exploit features at multiple scales and weigh them equally, limiting their learning capability. In this exposition, we present a compact and accurate super-resolution algorithm namely, Densely Residual Laplacian Network (DRLN). The proposed network employs cascading residual on the residual structure to allow the flow of low-frequency information to focus on learning high and mid-level features. In addition, deep supervision is achieved via the densely concatenated residual blocks settings, which also helps in learning from high-level complex features. Moreover, we propose Laplacian attention to model the crucial features to learn the inter and intra-level dependencies between the feature maps. Furthermore, comprehensive quantitative and qualitative evaluations on low-resolution, noisy low-resolution, and real historical image benchmark datasets illustrate that our DRLN algorithm performs favorably against the state-of-the-art methods visually and accurately.; You can use the pre-trained models for upscaling your images 2x, 3x and 4x. You can also use the trainer to train a model on your own dataset.",
blenderbot-3B,Conversational,PyTorch; Transformers,English,apache-2.0,https://arxiv.org/pdf/1907.06616.pdf,101,blended_skill_talk,7944,5601.794175,16,https://huggingface.co/facebook/blenderbot-3B,"Building open-domain chatbots is a challenging area for machine learning research. While prior work has shown that scaling neural models in the number of parameters and the size of the data they are trained on gives improved results, we show that other ingredients are important for a high-performing chatbot. Good conversation requires a number of skills that an expert conversationalist blends in a seamless way: providing engaging talking points and listening to their partners, both asking and answering questions, and displaying knowledge, empathy and personality appropriately, depending on the situation. We show that large scale models can learn these skills when given appropriate training data and choice of generation strategy. We build variants of these recipes with 90M, 2.7B and 9.4B parameter neural models, and make our models and code publicly available. Human evaluations show our best models are superior to existing approaches in multi-turn dialogue in terms of engagingness and humanness measurements. We then discuss the limitations of this work by analyzing failure cases of our models.",Natural Language Processing
convnext-large-224,Image Classification,PyTorch; TensorFlow; Transformers,,apache-2.0,https://arxiv.org/pdf/2201.03545.pdf,24,imagenet-1k,1128,1582.072363,,https://huggingface.co/facebook/convnext-large-224,"ConvNeXT model trained on ImageNet-1k at resolution 224x224. It was introduced in the paper A ConvNet for the 2020s by Liu et al. and first released in this repository. ; Disclaimer: The team releasing ConvNeXT did not write a model card for this model so this model card has been written by the Hugging Face team.; ConvNeXT is a pure convolutional model (ConvNet), inspired by the design of Vision Transformers, that claims to outperform them. The authors started from a ResNet and ""modernized"" its design by taking the Swin Transformer as inspiration.; ; You can use the raw model for image classification. See the model hub to look for
fine-tuned versions on a task that interests you.",Computer Vision
detr-resnet-50-panoptic,Image Segmentation,PyTorch; Transformers,,apache-2.0,https://arxiv.org/pdf/2005.12872.pdf,77,coco,11828,172.0179594,75,https://huggingface.co/facebook/detr-resnet-50-panoptic,"DEtection TRansformer (DETR) model trained end-to-end on COCO 2017 panoptic (118k annotated images). It was introduced in the paper End-to-End Object Detection with Transformers by Carion et al. and first released in this repository. ; Disclaimer: The team releasing DETR did not write a model card for this model so this model card has been written by the Hugging Face team.; The DETR model is an encoder-decoder transformer with a convolutional backbone. Two heads are added on top of the decoder outputs in order to perform object detection: a linear layer for the class labels and a MLP (multi-layer perceptron) for the bounding boxes. The model uses so-called object queries to detect objects in an image. Each object query looks for a particular object in the image. For COCO, the number of object queries is set to 100. ; The model is trained using a ""bipartite matching loss"": one compares the predicted classes + bounding boxes of each of the N = 100 object queries to the ground truth annotations, padded up to the same length N (so if an image only contains 4 objects, 96 annotations will just have a ""no object"" as class and ""no bounding box"" as bounding box). The Hungarian matching algorithm is used to create an optimal one-to-one mapping between each of the N queries and each of the N annotations. Next, standard cross-entropy (for the classes) and a linear combination of the L1 and generalized IoU loss (for the bounding boxes) are used to optimize the parameters of the model.; DETR can be naturally extended to perform panoptic segmentation, by adding a mask head on top of the decoder outputs.",Computer Vision
dino-vits16,Feature Extraction,PyTorch; Transformers,,apache-2.0,https://arxiv.org/pdf/2104.14294.pdf,8,imagenet-1k,5829,86.70500065,,https://huggingface.co/facebook/dino-vits16,"Vision Transformer (ViT) model trained using the DINO method. It was introduced in the paper Emerging Properties in Self-Supervised Vision Transformers by Mathilde Caron, Hugo Touvron, Ishan Misra, Herv¨¦ J¨¦gou, Julien Mairal, Piotr Bojanowski, Armand Joulin and first released in this repository. ; Disclaimer: The team releasing DINO did not write a model card for this model so this model card has been written by the Hugging Face team.; The Vision Transformer (ViT) is a transformer encoder model (BERT-like) pretrained on a large collection of images in a self-supervised fashion, namely ImageNet-1k, at a resolution of 224x224 pixels. ; Images are presented to the model as a sequence of fixed-size patches (resolution 16x16), which are linearly embedded. One also adds a [CLS] token to the beginning of a sequence to use it for classification tasks. One also adds absolute position embeddings before feeding the sequence to the layers of the Transformer encoder.; Note that this model does not include any fine-tuned heads. ",Multimodel
hubert-large-ll60k,Feature Extraction,PyTorch; TensorFlow; Transformers,English,apache-2.0,https://arxiv.org/pdf/2106.07447.pdf,15,libri-light,522561,2580.48505,1,https://huggingface.co/facebook/hubert-large-ll60k,"Facebook's Hubert; The large model pretrained on 16kHz sampled speech audio. When using the model make sure that your speech input is also sampled at 16Khz.; Note: This model does not have a tokenizer as it was pretrained on audio alone. In order to use this model speech recognition, a tokenizer should be created and the model should be fine-tuned on labeled text data. Check out this blog for more in-detail explanation of how to fine-tune the model.; The model was pretrained on Libri-Light.; Paper",Multimodel
hubert-large-ls960-ft,Automatic Speech Recognition,PyTorch; TensorFlow; Transformers,English,apache-2.0,https://arxiv.org/pdf/2106.07447.pdf,36,libri-light; librispeech_asr,45370,2580.48595,9,https://huggingface.co/facebook/hubert-large-ls960-ft,"Facebook's Hubert; The large model fine-tuned on 960h of Librispeech on 16kHz sampled speech audio. When using the model make sure that your speech input is also sampled at 16Khz. ; The model is a fine-tuned version of hubert-large-ll60k.; Paper; Authors: Wei-Ning Hsu, Benjamin Bolte, Yao-Hung Hubert Tsai, Kushal Lakhotia, Ruslan Salakhutdinov, Abdelrahman Mohamed",Audio
maskformer-swin-tiny-coco,Image Segmentation,PyTorch; Transformers,,other,https://arxiv.org/pdf/2107.06278.pdf,1,coco,1009,167.0147765,,https://huggingface.co/facebook/maskformer-swin-tiny-coco,"MaskFormer model trained on COCO panoptic segmentation (tiny-sized version, Swin backbone). It was introduced in the paper Per-Pixel Classification is Not All You Need for Semantic Segmentation and first released in this repository. ; Disclaimer: The team releasing MaskFormer did not write a model card for this model so this model card has been written by the Hugging Face team.; MaskFormer addresses instance, semantic and panoptic segmentation with the same paradigm: by predicting a set of masks and corresponding labels. Hence, all 3 tasks are treated as if they were instance segmentation.; ; You can use this particular checkpoint for semantic segmentation. See the model hub to look for other
fine-tuned versions on a task that interests you.",Computer Vision
rag-token-nq,,PyTorch; TensorFlow; Transformers,English,apache-2.0,https://arxiv.org/pdf/2005.11401.pdf,29,wiki_dpr,5932,4218.886501,,https://huggingface.co/facebook/rag-token-nq,"This is the RAG-Token Model of the the paper Retrieval-Augmented Generation for Knowledge-Intensive NLP Tasks 
by Patrick Lewis, Ethan Perez, Aleksandara Piktus et al.; The model is a uncased model, which means that capital letters are simply converted to lower-case letters.; The model consits of a question_encoder, retriever and a generator. The retriever extracts relevant passages from the wiki_dpr train datasets, which is linked above.
The question_encoder and retriever are based on facebook/dpr-question_encoder-single-nq-base and facebook/bart-large, which were jointly finetuned on 
on the wiki_dpr QA dataset in an end-to-end fashion.; Note: In the usage example below only the dummy retriever of wiki_dpr is used because the complete lecagy index requires over 75 GB of RAM.
The model can generate answers to any factoid question as follows:; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
tts_transformer-ar-cv7,Text-to-Speech,Fairseq,Arabic,,https://arxiv.org/pdf/1809.08895.pdf; https://arxiv.org/pdf/2109.06912.pdf,5,common_voice,262,722.4194772,5,https://huggingface.co/facebook/tts_transformer-ar-cv7,Transformer text-to-speech model from fairseq S^2 (paper/code):; See also fairseq S^2 example.,Audio
vit-mae-base,,PyTorch; TensorFlow; Transformers,,apache-2.0,https://arxiv.org/pdf/2111.06377.pdf,12,imagenet-1k,54456,896.0049044,,https://huggingface.co/facebook/vit-mae-base,"Vision Transformer (ViT) model pre-trained using the MAE method. It was introduced in the paper Masked Autoencoders Are Scalable Vision Learners by Kaiming He, Xinlei Chen, Saining Xie, Yanghao Li, Piotr Doll¨¢r, Ross Girshick and first released in this repository. ; Disclaimer: The team releasing MAE did not write a model card for this model so this model card has been written by the Hugging Face team.; The Vision Transformer (ViT) is a transformer encoder model (BERT-like). Images are presented to the model as a sequence of fixed-size patches.; During pre-training, one randomly masks out a high portion (75%) of the image patches. First, the encoder is used to encode the visual patches. Next, a learnable (shared) mask token is added at the positions of the masked patches. The decoder takes the encoded visual patches and mask tokens as input and reconstructs raw pixel values for the masked positions.; By pre-training the model, it learns an inner representation of images that can then be used to extract features useful for downstream tasks: if you have a dataset of labeled images for instance, you can train a standard classifier by placing a linear layer on top of the pre-trained encoder.",
wav2vec2-base,,PyTorch; Transformers,English,apache-2.0,https://arxiv.org/pdf/2006.11477.pdf,28,librispeech_asr,78058,380.0051176,4,https://huggingface.co/facebook/wav2vec2-base,"Facebook's Wav2Vec2; The base model pretrained on 16kHz sampled speech audio. When using the model make sure that your speech input is also sampled at 16Khz. ; Note: This model does not have a tokenizer as it was pretrained on audio alone. In order to use this model speech recognition, a tokenizer should be created and the model should be fine-tuned on labeled text data. Check out this blog for more in-detail explanation of how to fine-tune the model.; Paper; Authors: Alexei Baevski, Henry Zhou, Abdelrahman Mohamed, Michael Auli",
wav2vec2-large-robust,,PyTorch; Transformers,English,apache-2.0,https://arxiv.org/pdf/2104.01027.pdf,13,libri_light; common_voice; switchboard; fisher,3411,1300.485248,,https://huggingface.co/facebook/wav2vec2-large-robust,"Facebook's Wav2Vec2; The large model pretrained on 16kHz sampled speech audio. 
Speech datasets from multiple domains were used to pretrain the model:; When using the model make sure that your speech input is also sampled at 16Khz.; Note: This model does not have a tokenizer as it was pretrained on audio alone. In order to use this model speech recognition, a tokenizer should be created and the model should be fine-tuned on labeled text data. Check out this blog for more in-detail explanation of how to fine-tune the model.; Paper Robust Wav2Vec2",
wav2vec2-large-xlsr-53,,PyTorch; JAX; Transformers,multilingual,apache-2.0,https://arxiv.org/pdf/2006.13979.pdf,50,common_voice,37577,2600.964869,4,https://huggingface.co/facebook/wav2vec2-large-xlsr-53,"Facebook's XLSR-Wav2Vec2; The base model pretrained on 16kHz sampled speech audio. When using the model make sure that your speech input is also sampled at 16Khz. Note that this model should be fine-tuned on a downstream task, like Automatic Speech Recognition. Check out this blog for more information.; Paper; Authors: Alexis Conneau, Alexei Baevski, Ronan Collobert, Abdelrahman Mohamed, Michael Auli; Abstract
This paper presents XLSR which learns cross-lingual speech representations by pretraining a single model from the raw waveform of speech in multiple languages. We build on wav2vec 2.0 which is trained by solving a contrastive task over masked latent speech representations and jointly learns a quantization of the latents shared across languages. The resulting model is fine-tuned on labeled data and experiments show that cross-lingual pretraining significantly outperforms monolingual pretraining. On the CommonVoice benchmark, XLSR shows a relative phoneme error rate reduction of 72% compared to the best known results. On BABEL, our approach improves word error rate by 16% relative compared to a comparable system. Our approach enables a single multilingual speech recognition model which is competitive to strong individual models. Analysis shows that the latent discrete speech representations are shared across languages with increased sharing for related languages. We hope to catalyze research in low-resource speech understanding by releasing XLSR-53, a large model pretrained in 53 languages.",
wmt19-ru-en,Translation,PyTorch; Safetensors; Transformers,Russian; English,apache-2.0,https://arxiv.org/pdf/1907.06616.pdf,13,wmt19,28879,2377.453423,4,https://huggingface.co/facebook/wmt19-ru-en,"This is a ported version of fairseq wmt19 transformer for ru-en.; For more details, please see, Facebook FAIR's WMT19 News Translation Task Submission.; The abbreviation FSMT stands for FairSeqMachineTranslation; All four models are available:; Pretrained weights were left identical to the original model released by fairseq. For more details, please, see the paper.",Natural Language Processing
bert-restore-punctuation,Token Classification,PyTorch; Transformers,English,mit,,47,yelp_polarity,11001,1307.239814,10,https://huggingface.co/felflare/bert-restore-punctuation,"; This a bert-base-uncased model finetuned for punctuation restoration on Yelp Reviews. ; The model predicts the punctuation and upper-casing of plain, lower-cased text. An example use case can be ASR output. Or other cases when text has lost punctuation.; This model is intended for direct use as a punctuation restoration model for the general English language. Alternatively, you can use this for further fine-tuning on domain-specific texts for punctuation restoration tasks.; Model restores the following punctuations -- [! ? . , - : ; ' ]",Natural Language Processing
indo-medical-bert-base-uncased,Fill-Mask,PyTorch; Transformers,,,,1,,25,334.3750322,,https://huggingface.co/firqaaa/indo-medical-bert-base-uncased,,Natural Language Processing
pos-english,Token Classification,PyTorch; Flair,English,,,17,ontonotes,89644,249.2057655,4,https://huggingface.co/flair/pos-english,"This is the standard part-of-speech tagging model for English that ships with Flair.; F1-Score: 98,19 (Ontonotes); Predicts fine-grained POS tags:; Based on Flair embeddings and LSTM-CRF.; Requires: Flair (pip install flair)",Natural Language Processing
flaubert_base_uncased,Fill-Mask,PyTorch; Transformers,French,mit,,2,flaubert,12691,552.4617594,,https://huggingface.co/flaubert/flaubert_base_uncased,"FlauBERT is a French BERT trained on a very large and heterogeneous French corpus. Models of different sizes are trained using the new CNRS (French National Centre for Scientific Research) Jean Zay supercomputer.; Along with FlauBERT comes FLUE: an evaluation setup for French NLP systems similar to the popular GLUE benchmark. The goal is to enable further reproducible experiments in the future and to share models and progress on the French language.For more details please refer to the official website.; Note: flaubert-small-cased is partially trained so performance is not guaranteed. Consider using it for debugging purpose only.; Notes: if your transformers version is <=2.10.0, modelname should take one
of the following values:; If you use FlauBERT or the FLUE Benchmark for your scientific publication, or if you find the resources in this repository useful, please cite one of the following papers:",Natural Language Processing
multi-QA_v1-mpnet-asymmetric-A,Sentence Similarity,PyTorch; Sentence Transformers,,,https://arxiv.org/pdf/2102.07033.pdf; https://arxiv.org/pdf/2104.08727.pdf,2,,1931,438.6888625,2,https://huggingface.co/flax-sentence-embeddings/multi-QA_v1-mpnet-asymmetric-A,"SentenceTransformers is a set of models and frameworks that enable training and generating sentence embeddings from given data. The generated sentence embeddings can be utilized for Clustering, Semantic Search and other tasks. We used two separate pretrained mpnet-base models and trained them using contrastive learning objective. Question and answer pairs from StackExchange and other datasets were used as training data to make the model robust to Question / Answer embedding similarity.; We developed this model during the 
Community week using JAX/Flax for NLP & CV, 
organized by Hugging Face. We developed this model as part of the project:
Train the Best Sentence Embedding Model Ever with 1B Training Pairs. We benefited from efficient hardware infrastructure to run the project: 7 TPUs v3-8, as well
as assistance from Google¡¯s Flax, JAX, and Cloud team members about efficient deep learning frameworks.; This model set is intended to be used as a sentence encoder for a search engine. Given an input sentence, it ouptuts a vector which captures 
the sentence semantic information. The sentence vector may be used for semantic-search, clustering or sentence similarity tasks.; Two models should be used on conjunction for Semantic Search purposes.; Here is how to use this model to get the features of a given text using SentenceTransformers library:",Natural Language Processing
bart-base-chinese,Text2Text Generation,PyTorch; Transformers,Chinese,,https://arxiv.org/pdf/2109.05729.pdf,66,,5655,561.2600001,1,https://huggingface.co/fnlp/bart-base-chinese,"12/30/2022; An updated version of CPT & Chinese BART are released. In the new version, we changed the following parts:; We initialize the new version of models with the old version of checkpoints with vocabulary alignment. Token embeddings found in the old checkpoints are copied. And other newly added parameters are randomly initialized. We further train the new CPT & Chinese BART 50K steps with batch size 2048, max-seq-length 1024, peak learning rate 2e-5, and warmup ratio 0.1.; The result compared to the previous checkpoints is as followings:; The result shows that the updated models maintain comparative performance compared with previous checkpoints. There are still some cases that the updated model is slightly worse than the previous one, which results from the following reasons: 1) Training additional a few steps did not lead to significant performance improvement; 2) some downstream tasks are not affected by the newly added tokens and longer encoding sequences, but sensitive to the fine-tuning hyperparameters.",Natural Language Processing
bart-large-chinese,Text2Text Generation,PyTorch; Transformers,Chinese,,https://arxiv.org/pdf/2109.05729.pdf,39,,1594,1669.380021,1,https://huggingface.co/fnlp/bart-large-chinese,"12/30/2022; An updated version of CPT & Chinese BART are released. In the new version, we changed the following parts:; We initialize the new version of models with the old version of checkpoints with vocabulary alignment. Token embeddings found in the old checkpoints are copied. And other newly added parameters are randomly initialized. We further train the new CPT & Chinese BART 50K steps with batch size 2048, max-seq-length 1024, peak learning rate 2e-5, and warmup ratio 0.1.; The result compared to the previous checkpoints is as followings:; The result shows that the updated models maintain comparative performance compared with previous checkpoints. There are still some cases that the updated model is slightly worse than the previous one, which results from the following reasons: 1) Training additional a few steps did not lead to significant performance improvement; 2) some downstream tasks are not affected by the newly added tokens and longer encoding sequences, but sensitive to the fine-tuning hyperparameters.",Natural Language Processing
french-camembert-postag-model,Token Classification,PyTorch; TensorFlow; Safetensors; Transformers,French,,,2,,188550,1329.798874,,https://huggingface.co/gilf/french-camembert-postag-model,"The  french-camembert-postag-model is a part of speech tagging model for French that was trained on the free-french-treebank dataset available on 
github. The base tokenizer and model used for training is 'camembert-base'.; It uses the following tags:; More information on the tags can be found here:; http://alpage.inria.fr/statgram/frdep/Publications/crabbecandi-taln2008-final.pdf; The usage of this model follows the common transformers patterns. Here is a short example of its usage:",Natural Language Processing
kobart-base-v1,Feature Extraction,PyTorch; Safetensors; Transformers,Korean,mit,,1,,1904,992.277322,5,https://huggingface.co/gogamza/kobart-base-v1,,Multimodel
byt5-small,Text2Text Generation,PyTorch; TensorFlow; JAX; Transformers,102 languages,apache-2.0,https://arxiv.org/pdf/1907.06292.pdf; https://arxiv.org/pdf/2105.13626.pdf,25,mc4,25294,3686.410609,3,https://huggingface.co/google/byt5-small,"ByT5 is a tokenizer-free version of Google's T5 and generally follows the architecture of MT5.; ByT5 was only pre-trained on mC4 excluding any supervised training with an average span-mask of 20 UTF-8 characters. Therefore, this model has to be fine-tuned before it is useable on a downstream task.; ByT5 works especially well on noisy text data,e.g., google/byt5-small significantly outperforms mt5-small on TweetQA.; Paper: ByT5: Towards a token-free future with pre-trained byte-to-byte models; Authors: Linting Xue, Aditya Barua, Noah Constant, Rami Al-Rfou, Sharan Narang, Mihir Kale, Adam Roberts, Colin Raffel ",Natural Language Processing
mt5-small,Text2Text Generation,PyTorch; TensorFlow; JAX; Transformers,102 languages,apache-2.0,https://arxiv.org/pdf/2010.11934.pdf,50,mc4,53278,3690.713977,6,https://huggingface.co/google/mt5-small,"Google's mT5; mT5 is pretrained on the mC4 corpus, covering 101 languages:; Afrikaans, Albanian, Amharic, Arabic, Armenian, Azerbaijani, Basque, Belarusian, Bengali, Bulgarian, Burmese, Catalan, Cebuano, Chichewa, Chinese, Corsican, Czech, Danish, Dutch, English, Esperanto, Estonian, Filipino, Finnish, French, Galician, Georgian, German, Greek, Gujarati, Haitian Creole, Hausa, Hawaiian, Hebrew, Hindi, Hmong, Hungarian, Icelandic, Igbo, Indonesian, Irish, Italian, Japanese, Javanese, Kannada, Kazakh, Khmer, Korean, Kurdish, Kyrgyz, Lao, Latin, Latvian, Lithuanian, Luxembourgish, Macedonian, Malagasy, Malay, Malayalam, Maltese, Maori, Marathi, Mongolian, Nepali, Norwegian, Pashto, Persian, Polish, Portuguese, Punjabi, Romanian, Russian, Samoan, Scottish Gaelic, Serbian, Shona, Sindhi, Sinhala, Slovak, Slovenian, Somali, Sotho, Spanish, Sundanese, Swahili, Swedish, Tajik, Tamil, Telugu, Thai, Turkish, Ukrainian, Urdu, Uzbek, Vietnamese, Welsh, West Frisian, Xhosa, Yiddish, Yoruba, Zulu.; Note: mT5 was only pre-trained on mC4 excluding any supervised training. Therefore, this model has to be fine-tuned before it is useable on a downstream task.; Pretraining Dataset: mC4",Natural Language Processing
pegasus-big_patent,Text2Text Generation,PyTorch; Transformers,,,,3,,184,2336.631836,2,https://huggingface.co/google/pegasus-big_patent,No model card; New: Create and edit this model card directly on the website!,Natural Language Processing
t5-v1_1-xxl,Text2Text Generation,PyTorch; TensorFlow; Transformers,English,apache-2.0,https://arxiv.org/pdf/2002.05202.pdf; https://arxiv.org/pdf/1910.10683.pdf,15,c4,6946,91136.78065,25,https://huggingface.co/google/t5-v1_1-xxl,"Google's T5 Version 1.1; T5 Version 1.1 includes the following improvements compared to the original T5 model- GEGLU activation in feed-forward hidden layer, rather than ReLU - see here.; Dropout was turned off in pre-training (quality win). Dropout should be re-enabled during fine-tuning.; Pre-trained on C4 only without mixing in the downstream tasks.; no parameter sharing between embedding and classifier layer",Natural Language Processing
tapas-large-finetuned-sqa,Table Question Answering,PyTorch; TensorFlow; Transformers,English,apache-2.0,https://arxiv.org/pdf/2004.02349.pdf; https://arxiv.org/pdf/2010.00571.pdf,4,msr_sqa,360,2765.065846,,https://huggingface.co/google/tapas-large-finetuned-sqa,"This model has 2 versions which can be used. The default version corresponds to the tapas_sqa_inter_masklm_large_reset checkpoint of the original Github repository.
This model was pre-trained on MLM and an additional step which the authors call intermediate pre-training, and then fine-tuned on SQA. It uses relative position embeddings (i.e. resetting the position index at every cell of the table).; The other (non-default) version which can be used is: ; Disclaimer: The team releasing TAPAS did not write a model card for this model so this model card has been written by
the Hugging Face team and contributors.; TAPAS is a BERT-like transformers model pretrained on a large corpus of English data from Wikipedia in a self-supervised fashion. 
This means it was pretrained on the raw tables and associated texts only, with no humans labelling them in any way (which is why it
can use lots of publicly available data) with an automatic process to generate inputs and labels from those texts. More precisely, it
was pretrained with two objectives:; This way, the model learns an inner representation of the English language used in tables and associated texts, which can then be used 
to extract features useful for downstream tasks such as answering questions about a table, or determining whether a sentence is entailed
or refuted by the contents of a table. Fine-tuning is done by adding a cell selection head on top of the pre-trained model, and then jointly
train this randomly initialized classification head with the base model on SQA. ",Natural Language Processing
tapas-large-finetuned-wtq,Table Question Answering,PyTorch; TensorFlow; Transformers,English,apache-2.0,https://arxiv.org/pdf/2004.02349.pdf; https://arxiv.org/pdf/2010.00571.pdf; https://arxiv.org/pdf/1508.00305.pdf,43,wikitablequestions,10702,2765.065474,12,https://huggingface.co/google/tapas-large-finetuned-wtq,"This model has 2 versions which can be used. The default version corresponds to the tapas_wtq_wikisql_sqa_inter_masklm_large_reset checkpoint of the original Github repository.
This model was pre-trained on MLM and an additional step which the authors call intermediate pre-training, and then fine-tuned in a chain on SQA, WikiSQL and finally WTQ. It uses relative position embeddings (i.e. resetting the position index at every cell of the table).; The other (non-default) version which can be used is: ; Disclaimer: The team releasing TAPAS did not write a model card for this model so this model card has been written by
the Hugging Face team and contributors.; TAPAS is a BERT-like transformers model pretrained on a large corpus of English data from Wikipedia in a self-supervised fashion. 
This means it was pretrained on the raw tables and associated texts only, with no humans labelling them in any way (which is why it
can use lots of publicly available data) with an automatic process to generate inputs and labels from those texts. More precisely, it
was pretrained with two objectives:; This way, the model learns an inner representation of the English language used in tables and associated texts, which can then be used 
to extract features useful for downstream tasks such as answering questions about a table, or determining whether a sentence is entailed
or refuted by the contents of a table. Fine-tuning is done by adding a cell selection head and aggregation head on top of the pre-trained model, and then jointly train these randomly initialized classification heads with the base model on SQa, WikiSQL and finally WTQ. ",Natural Language Processing
arabic-ner,Token Classification,PyTorch; TensorFlow; JAX; Safetensors; Transformers,Arabic,,,8,,2483,1764.154314,1,https://huggingface.co/hatmimoha/arabic-ner,Pretrained BERT-based (arabic-bert-base) Named Entity Recognition model for Arabic.; The pre-trained model can recognize the following entities:; ? ??? ?? ???? ??????? ??????? ?????? ???? ??? ? ?????? ??? ??? ???? ; ??? ????? ??????? ????? ??? ??? ????? ?? ???? ????? ; ? ????? ?????? ???????? ??????? ???? ??????? ??? ????? ?? ??? ????? ?????????,Natural Language Processing
character-bert,Feature Extraction,PyTorch; Transformers,,,,2,,74,728.9229253,,https://huggingface.co/helboukkouri/character-bert,No model card; New: Create and edit this model card directly on the website!,Multimodel
chinese-macbert-base,Fill-Mask,PyTorch; TensorFlow; JAX; Transformers,Chinese,apache-2.0,https://arxiv.org/pdf/2004.13922.pdf,82,,23236,1299.374995,1,https://huggingface.co/hfl/chinese-macbert-base,"



; 



; This repository contains the resources in our paper ""Revisiting Pre-trained Models for Chinese Natural Language Processing"", which will be published in ""Findings of EMNLP"". You can read our camera-ready paper through ACL Anthology or arXiv pre-print.; Revisiting Pre-trained Models for Chinese Natural Language ProcessingYiming Cui, Wanxiang Che, Ting Liu, Bing Qin, Shijin Wang, Guoping Hu; You may also interested in,",Natural Language Processing
chinese-macbert-large,Fill-Mask,PyTorch; TensorFlow; JAX; Transformers,Chinese,apache-2.0,https://arxiv.org/pdf/2004.13922.pdf,19,,2468,4106.614996,,https://huggingface.co/hfl/chinese-macbert-large,"



; 



; This repository contains the resources in our paper ""Revisiting Pre-trained Models for Chinese Natural Language Processing"", which will be published in ""Findings of EMNLP"". You can read our camera-ready paper through ACL Anthology or arXiv pre-print.; Revisiting Pre-trained Models for Chinese Natural Language ProcessingYiming Cui, Wanxiang Che, Ting Liu, Bing Qin, Shijin Wang, Guoping Hu; You may also interested in,",Natural Language Processing
rbt3,Fill-Mask,PyTorch; TensorFlow; JAX; Transformers,Chinese,apache-2.0,https://arxiv.org/pdf/1906.08101.pdf; https://arxiv.org/pdf/2004.13922.pdf,11,,7635,464.3734476,,https://huggingface.co/hfl/rbt3,"For further accelerating Chinese natural language processing, we provide Chinese pre-trained BERT with Whole Word Masking. ; Pre-Training with Whole Word Masking for Chinese BERTYiming Cui, Wanxiang Che, Ting Liu, Bing Qin, Ziqing Yang, Shijin Wang, Guoping Hu; This repository is developed based on£ºhttps://github.com/google-research/bert; You may also interested in,; More resources by HFL: https://github.com/ymcui/HFL-Anthology",Natural Language Processing
sentence_similarity_spanish_es,Sentence Similarity,PyTorch; Sentence Transformers; Transformers,Spanish,,,22,,11826,439.7125629,1,https://huggingface.co/hiiamsid/sentence_similarity_spanish_es,"This is a sentence-transformers model: It maps sentences & paragraphs to a 768 dimensional dense vector space and can be used for tasks like clustering or semantic search.; Using this model becomes easy when you have sentence-transformers installed:; Then you can use the model like this:; Without sentence-transformers, you can use the model like this: First, you pass your input through the transformer model, then you have to apply the right pooling-operation on-top of the contextualized word embeddings.; For an automated evaluation of this model, see the Sentence Embeddings Benchmark: https://seb.sbert.net",Natural Language Processing
ConvTasNet_Libri2Mix_sepnoisy_16k,,,,,,1,,0,20.8011158,,https://huggingface.co/hugggof/ConvTasNet_Libri2Mix_sepnoisy_16k,"No model card; New: Create and edit this model card directly on the website!; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
elonmusk,Text Generation,PyTorch; Transformers,English,,,10,,2356,513.3436067,1,https://huggingface.co/huggingtweets/elonmusk,"I was made with huggingtweets.; Create your own bot based on your favorite user with the demo!; The model uses the following pipeline.; ; To understand how the model was developed, check the W&B report.",Natural Language Processing
funnyordie,Text Generation,PyTorch; Transformers,English,,,1,,11,512.593348,,https://huggingface.co/huggingtweets/funnyordie,"I was made with huggingtweets.; Create your own bot based on your favorite user with the demo!; The model uses the following pipeline.; ; To understand how the model was developed, check the W&B report.",Natural Language Processing
honeytech,Text Generation,PyTorch; Transformers,English,,,1,,7,512.59256,,https://huggingface.co/huggingtweets/honeytech,"I was made with huggingtweets.; Create your own bot based on your favorite user with the demo!; The model uses the following pipeline.; ; To understand how the model was developed, check the W&B report.",Natural Language Processing
michaeljackson,Text Generation,PyTorch; JAX; Transformers,English,,,1,,54,1009.328796,,https://huggingface.co/huggingtweets/michaeljackson,"I was made with huggingtweets.; Create your own bot based on your favorite user with the demo!; The model uses the following pipeline.; ; To understand how the model was developed, check the W&B report.",Natural Language Processing
porns_xx,Text Generation,PyTorch; Transformers,English,,,14,,214,512.59256,,https://huggingface.co/huggingtweets/porns_xx,"I was made with huggingtweets.; Create your own bot based on your favorite user with the demo!; The model uses the following pipeline.; ; To understand how the model was developed, check the W&B report.",Natural Language Processing
financial-summarization-pegasus,Summarization,PyTorch; TensorFlow; Safetensors; Transformers,English,,https://arxiv.org/pdf/1912.08777.pdf,78,xsum,4297,7006.082799,9,https://huggingface.co/human-centered-summarization/financial-summarization-pegasus,"This model was fine-tuned on a novel financial news dataset, which consists of 2K articles from Bloomberg, on topics such as stock, markets, currencies, rate and cryptocurrencies. ; It is based on the PEGASUS model and in particular PEGASUS fine-tuned on the Extreme Summarization (XSum) dataset: google/pegasus-xsum model. PEGASUS was originally proposed by Jingqing Zhang, Yao Zhao, Mohammad Saleh and Peter J. Liu in PEGASUS: Pre-training with Extracted Gap-sentences for Abstractive Summarization. ; We provide a simple snippet of how to use this model for the task of financial summarization in PyTorch.; The results before and after the fine-tuning on our dataset are shown below:; You can find more details about this work in the following workshop paper. If you use our model in your research, please consider citing our paper:",Natural Language Processing
pangu_2_6B,Text Generation,PyTorch; Transformers,,,,14,,617,10752.88827,,https://huggingface.co/imone/pangu_2_6B,"PanGu-¦Á is proposed by a joint technical team headed by PCNL. It was first released in this repository  It is the first large-scale Chinese pre-trained language model with 200 billion parameters trained on 2048 Ascend processors using an automatic hybrid parallel training strategy. The whole training process is done on the ¡°Peng Cheng Cloud Brain II¡± computing platform with the domestic deep learning framework called MindSpore. The PengCheng¡¤PanGu-¦Á pre-training model can support rich applications, has strong few-shot learning capabilities, and has outstanding performance in text generation tasks such as knowledge question and answer, knowledge retrieval, knowledge reasoning, and reading comprehension.; This repository contains PyTorch implementation of PanGu model, with
2.6 billion parameters pretrained weights (FP32 precision), converted from original MindSpore checkpoint.; Currently PanGu model is not supported by transformers, 
so trust_remote_code=True is required to load model implementation in this repo.; Expected output:",Natural Language Processing
general_character_bert,,PyTorch; Transformers,English,,https://arxiv.org/pdf/2010.10392.pdf,3,wikipedia; openwebtext,22,418.0045898,,https://huggingface.co/imvladikon/general_character_bert,"Pretrained general_character_bert model 
from the 'CharacterBERT: Reconciling ELMo and BERT for Word-Level Open-Vocabulary Representations From Characters' El Boukkouri H., et al., 2020; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
indobert-base-uncased,Fill-Mask,PyTorch; JAX; Transformers,Indonesian,mit,https://arxiv.org/pdf/2011.00677.pdf,14,"220M words (IndoWiki, IndoWC, News)]",970382,887.2323869,6,https://huggingface.co/indolem/indobert-base-uncased,"IndoBERT is the Indonesian version of BERT model. We train the model using over 220M words, aggregated from three main sources: ; We trained the model for 2.4M steps (180 epochs) with the final perplexity over the development set being 3.97 (similar to English BERT-base).; This IndoBERT was used to examine IndoLEM - an Indonesian benchmark that comprises of seven tasks for the Indonesian language, spanning morpho-syntax, semantics, and discourse. ; The paper is published at the 28th COLING 2020. Please refer to https://indolem.github.io for more details about the benchmarks.; If you use our work, please cite:",Natural Language Processing
berteus-base-cased,Feature Extraction,PyTorch; JAX; Transformers,Basque,,https://arxiv.org/pdf/2004.00033.pdf,2,,151,996.4326218,,https://huggingface.co/ixa-ehu/berteus-base-cased,"This is the Basque language pretrained model presented in Give your Text Representation Models some Love: the Case for Basque. This model has been trained on a Basque corpus comprising Basque crawled news articles from online newspapers and the Basque Wikipedia. The training corpus contains 224.6 million tokens, of which 35 million come from the Wikipedia.; BERTeus has been tested on four different downstream tasks for Basque: part-of-speech (POS) tagging, named entity recognition (NER), sentiment analysis and topic classification; improving the state of the art for all tasks. See summary of results below:; If using this model, please cite the following paper:",Multimodel
bert-stsb-aug,Sentence Similarity,PyTorch; Sentence Transformers; Transformers,,,,1,,10,438.6877198,,https://huggingface.co/jamescalam/bert-stsb-aug,"This is a sentence-transformers model: It maps sentences & paragraphs to a 768 dimensional dense vector space and can be used for tasks like clustering or semantic search.; It is used as a demo model within the NLP for Semantic Search course, for the chapter on In-domain Data Augmentation with BERT.; Using this model becomes easy when you have sentence-transformers installed:; Then you can use the model like this:; Without sentence-transformers, you can use the model like this: First, you pass your input through the transformer model, then you have to apply the right pooling-operation on-top of the contextualized word embeddings.",Natural Language Processing
bert-stsb-cross-encoder,Sentence Similarity,PyTorch; Sentence Transformers; Transformers,,,,1,,37,438.6843522,,https://huggingface.co/jamescalam/bert-stsb-cross-encoder,"This is a sentence-transformers cross encoder model.; It is used as a demo model within the NLP for Semantic Search course, for the chapter on In-domain Data Augmentation with BERT.",Natural Language Processing
ko-sbert-multitask,Sentence Similarity,PyTorch; TensorFlow; Sentence Transformers; Transformers,,,,3,,323,886.7332917,,https://huggingface.co/jhgan/ko-sbert-multitask,"This is a sentence-transformers model: It maps sentences & paragraphs to a 768 dimensional dense vector space and can be used for tasks like clustering or semantic search.; Using this model becomes easy when you have sentence-transformers installed:; Then you can use the model like this:; Without sentence-transformers, you can use the model like this: First, you pass your input through the transformer model, then you have to apply the right pooling-operation on-top of the contextualized word embeddings.; KorSTS, KorNLI ?? ?????? ?? ??? ??? ??? ? KorSTS ?? ?????? ??? ?????.",Natural Language Processing
xlm-roberta-large-xnli,Zero-Shot Classification,PyTorch; TensorFlow; Transformers,16 languages,mit,https://arxiv.org/pdf/1911.02116.pdf,129,multi_nli; xnli,7586,0,11,https://huggingface.co/joeddav/xlm-roberta-large-xnli,"This repository is publicly accessible, but
			you have to accept the conditions to access its files and content.
		; Log in 
			or
			Sign Up 
			to review the conditions and access this model content.
		; This model takes xlm-roberta-large and fine-tunes it on a combination of NLI data in 15 languages. It is intended to be used for zero-shot text classification, such as with the Hugging Face ZeroShotClassificationPipeline.; This model is intended to be used for zero-shot text classification, especially in languages other than English. It is fine-tuned on XNLI, which is a multilingual NLI dataset. The model can therefore be used with any of the languages in the XNLI corpus:; Since the base model was pre-trained trained on 100 different languages, the
model has shown some effectiveness in languages beyond those listed above as
well. See the full list of pre-trained languages in appendix A of the
XLM Roberata paper",Natural Language Processing
wav2vec2-large-xlsr-53-chinese-zh-cn,Automatic Speech Recognition,PyTorch; JAX; Transformers,Chinese,apache-2.0,,34,common_voice,63076,2621.493365,10,https://huggingface.co/jonatasgrosman/wav2vec2-large-xlsr-53-chinese-zh-cn,"Fine-tuned facebook/wav2vec2-large-xlsr-53 on Chinese using the train and validation splits of Common Voice 6.1, CSS10 and ST-CMDS.
When using this model, make sure that your speech input is sampled at 16kHz.; This model has been fine-tuned thanks to the GPU credits generously given by the OVHcloud :); The script used for training can be found here: https://github.com/jonatasgrosman/wav2vec2-sprint; The model can be used directly (without a language model) as follows...; Using the HuggingSound library:",Audio
wav2vec2-large-xlsr-53-hungarian,Automatic Speech Recognition,PyTorch; JAX; Transformers,Hungarian,apache-2.0,,2,common_voice,1224,2580.490389,6,https://huggingface.co/jonatasgrosman/wav2vec2-large-xlsr-53-hungarian,"Fine-tuned facebook/wav2vec2-large-xlsr-53 on Hungarian using the train and validation splits of Common Voice 6.1 and CSS10.
When using this model, make sure that your speech input is sampled at 16kHz.; This model has been fine-tuned thanks to the GPU credits generously given by the OVHcloud :); The script used for training can be found here: https://github.com/jonatasgrosman/wav2vec2-sprint; The model can be used directly (without a language model) as follows...; Using the HuggingSound library:",Audio
wav2vec2-large-xlsr-53-japanese,Automatic Speech Recognition,PyTorch; JAX; Transformers,Japanese,apache-2.0,,11,common_voice,27812,2600.999508,8,https://huggingface.co/jonatasgrosman/wav2vec2-large-xlsr-53-japanese,"Fine-tuned facebook/wav2vec2-large-xlsr-53 on Japanese using the train and validation splits of Common Voice 6.1, CSS10 and JSUT.
When using this model, make sure that your speech input is sampled at 16kHz.; This model has been fine-tuned thanks to the GPU credits generously given by the OVHcloud :); The script used for training can be found here: https://github.com/jonatasgrosman/wav2vec2-sprint; The model can be used directly (without a language model) as follows...; Using the HuggingSound library:",Audio
wav2vec2-large-xlsr-53-russian,Automatic Speech Recognition,PyTorch; JAX; Transformers,Russian,apache-2.0,,19,common_voice; mozilla-foundation/common_voice_6_0,688094,2584.272952,15,https://huggingface.co/jonatasgrosman/wav2vec2-large-xlsr-53-russian,"Fine-tuned facebook/wav2vec2-large-xlsr-53 on Russian using the train and validation splits of Common Voice 6.1 and CSS10.
When using this model, make sure that your speech input is sampled at 16kHz.; This model has been fine-tuned thanks to the GPU credits generously given by the OVHcloud :); The script used for training can be found here: https://github.com/jonatasgrosman/wav2vec2-sprint; The model can be used directly (without a language model) as follows...; Using the HuggingSound library:",Audio
wav2vec2-xls-r-1b-portuguese,Automatic Speech Recognition,PyTorch; Transformers,Portuguese,apache-2.0,,9,mozilla-foundation/common_voice_8_0,1043,3944.294163,4,https://huggingface.co/jonatasgrosman/wav2vec2-xls-r-1b-portuguese,"Fine-tuned facebook/wav2vec2-xls-r-1b on Portuguese using the train and validation splits of Common Voice 8.0, CORAA, Multilingual TEDx, and Multilingual LibriSpeech.
When using this model, make sure that your speech input is sampled at 16kHz.; This model has been fine-tuned by the HuggingSound tool, and thanks to the GPU credits generously given by the OVHcloud :); Using the HuggingSound library:; Writing your own inference script:; If you want to cite this model you can use this:",Audio
DialoGPT-small-Creed-Odyssey,Text Generation,PyTorch; JAX; Transformers,,,,1,,10,1009.227007,,https://huggingface.co/jonx18/DialoGPT-small-Creed-Odyssey,"The app was conceived with the idea of recreating and generate new dialogs for existing games.
In order to generate a dataset for training the steps followed were:",Natural Language Processing
hotdog-not-hotdog,Image Classification,PyTorch; TensorBoard; Core ML; Transformers,,,,10,,7323,343.0021887,171,https://huggingface.co/julien-c/hotdog-not-hotdog,Autogenerated by HuggingPics???; Create your own image classifier for anything by running the demo on Google Colab.; Report any issues with the demo at the github repo.; ; ,Computer Vision
SciBERT_patent_reference_extraction,,PyTorch; Transformers,,,https://arxiv.org/pdf/2101.01039.pdf,1,,0,440.2484703,,https://huggingface.co/kaesve/SciBERT_patent_reference_extraction,"This repository contains a finetuned SciBERT model that can extract references to scientific literature from patents.; See https://github.com/kaesve/patent-citation-extraction and https://arxiv.org/abs/2101.01039 for more information.; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
low-light-image-enhancement,Image-to-Image,Keras,,apache-2.0,,14,,43,347.1774805,1,https://huggingface.co/keras-io/low-light-image-enhancement,"Original Author: Soumik Rakshit 
Date created: 2021/09/18 
HF Contribution: Harveen Singh Chadha
Dataset: LOL Dataset; Zero-Reference Deep Curve Estimation or Zero-DCE formulates low-light image enhancement as the task of estimating an image-specific tonal curve with a deep neural network. In this example, we train a lightweight deep network, DCE-Net, to estimate pixel-wise and high-order tonal curves for dynamic range adjustment of a given image.; Zero-DCE takes a low-light image as input and produces high-order tonal curves as its output. These curves are then used for pixel-wise adjustment on the dynamic range of the input to obtain an enhanced image. The curve estimation process is done in such a way that it maintains the range of the enhanced image and preserves the contrast of neighboring pixels. This curve estimation is inspired by curves adjustment used in photo editing software such as Adobe Photoshop where users can adjust points throughout an image¡¯s tonal range.; Zero-DCE is appealing because of its relaxed assumptions with regard to reference images: it does not require any input/output image pairs during training. This is achieved through a set of carefully formulated non-reference loss functions, which implicitly measure the enhancement quality and guide the training of the network.; Sample Images:",Computer Vision
wav2vec2-large-xls-r-300m-Urdu,Automatic Speech Recognition,PyTorch; Safetensors; Transformers,Urdu,apache-2.0,,5,mozilla-foundation/common_voice_8_0,166,2580.541375,4,https://huggingface.co/kingabzpro/wav2vec2-large-xls-r-300m-Urdu,"This model is a fine-tuned version of facebook/wav2vec2-xls-r-300m on the common_voice dataset.
It achieves the following results on the evaluation set:; The following hyperparameters were used during training:",Audio
t5-base-qa-summary-emotion,Text2Text Generation,PyTorch; Transformers,English,apache-2.0,,3,coqa; squad_v2; go_emotions; cnn_dailymail,241,1216.169069,,https://huggingface.co/kiri-ai/t5-base-qa-summary-emotion,"Requires transformers>=4.0.0; This model was finetuned on the CoQa, Squad 2, GoEmotions and CNN/DailyMail.; It achieves a score of F1 79.5 on the Squad 2 dev set and a score of F1 70.6 on the CoQa dev set.; Summarisation and emotion detection has not been evaluated yet.; Kiri makes using state-of-the-art models easy, accessible and scalable.",Natural Language Processing
bert-base,Fill-Mask,PyTorch; Safetensors; Transformers,Korean,cc-by-sa-4.0,https://arxiv.org/pdf/2105.09680.pdf; https://arxiv.org/pdf/1910.09700.pdf,17,,120387,890.7372519,1,https://huggingface.co/klue/bert-base,"Model Description: KLUE BERT base is a pre-trained BERT Model on Korean Language. The developers of KLUE BERT base developed the model in the context of the development of the Korean Language Understanding Evaluation (KLUE) Benchmark.; The model can be used for tasks including topic classification, semantic textual similarity, natural language inference, named entity recognition, and other tasks outlined in the KLUE Benchmark.; The model should not be used to intentionally create hostile or alienating environments for people. In addition, the model was not trained to be factual or true representations of people or events, and therefore using the model to generate such content is out-of-scope for the abilities of this model.; Significant research has explored bias and fairness issues with language models (see, e.g., Sheng et al. (2021) and Bender et al. (2021)). The model developers discuss several ethical considerations related to the model in the paper, including: ; For ethical considerations related to the KLUE Benchmark, also see the paper.",Natural Language Processing
MEETING_SUMMARY,Summarization,PyTorch; TensorFlow; Safetensors; Transformers,English,apache-2.0,,122,cnndaily/newyorkdaily/xsum/samsum/dialogsum/AMI,28703,5010.009143,18,https://huggingface.co/knkarthick/MEETING_SUMMARY,"Model obtained by Fine Tuning 'facebook/bart-large-xsum' using AMI Meeting Corpus, SAMSUM Dataset, DIALOGSUM Dataset, XSUM Dataset!",Natural Language Processing
bart-large-xsum-samsum,Summarization,PyTorch; Safetensors; Transformers,English,apache-2.0,,27,samsum,21648,3340.82973,3,https://huggingface.co/lidiya/bart-large-xsum-samsum,This model was obtained by fine-tuning facebook/bart-large-xsum on Samsum dataset.,Natural Language Processing
chinese_pretrain_mrc_macbert_large,Question Answering,PyTorch; Transformers,Chinese,apache-2.0,,17,,688,1331.572557,,https://huggingface.co/luhua/chinese_pretrain_mrc_macbert_large,,Natural Language Processing
bert-imdb,Text Classification,PyTorch; JAX; Transformers,,,,1,,222,2724.051204,,https://huggingface.co/lvwerra/bert-imdb,BERT (bert-large-cased) trained for sentiment classification on the IMDB dataset.; The model was trained on 80% of the IMDB dataset for sentiment classification for three epochs with a learning rate of 1e-5 with the simpletransformers library. The library uses a learning rate schedule.; The model achieved 90% classification accuracy on the validation set.; The full experiment is available in the tlr repo.,Natural Language Processing
distilbert-imdb,Text Classification,PyTorch; TensorBoard; Transformers,,apache-2.0,,8,imdb,120327,268.694751,1,https://huggingface.co/lvwerra/distilbert-imdb,"This model is a fine-tuned version of distilbert-base-uncased on the imdb dataset (training notebook is here).
It achieves the following results on the evaluation set:; More information needed; More information needed; More information needed; The following hyperparameters were used during training:",Natural Language Processing
distilbert-political-tweets,Text Classification,PyTorch; TensorFlow; Transformers,English,lgpl-3.0,,12,m-newhauser/senator-tweets,52,536.6856671,1,https://huggingface.co/m-newhauser/distilbert-political-tweets,"This model is a fine-tuned version of distilbert-base-uncased on the m-newhauser/senator-tweets dataset, which contains all tweets made by United States senators during the first year of the Biden Administration.
It achieves the following results on the evaluation set:; The goal of this model is to classify short pieces of text as having either Democratic or Republican sentiment. The model was fine-tuned on 99,693 tweets (51.6% Democrat, 48.4% Republican) made by US senators in 2021.; Model accuracy may not hold up on pieces of text longer than a tweet.; The following hyperparameters were used during training:",Natural Language Processing
marefa-ner,Token Classification,PyTorch; Transformers,Arabic,,,10,Marefa-NER,5734,2302.874741,,https://huggingface.co/marefa-nlp/marefa-ner,"

; Version: 1.3; Last Update: 3-12-2021; Marefa-NER is a Large Arabic Named Entity Recognition (NER) model built on a completely new dataset and targets to extract up to 9 different types of entities; ????? ??????? ?????? ????? ????. ????? ???? ???? ?? ??? ???????? ????????? ?? ????? ???????. 
???? ?????? ??????? ????? ??? 9 ????? ?????? ?? ????? ????",Natural Language Processing
toxic-comment-model,Text Classification,PyTorch; Transformers,English,,,17,,108050,268.687061,1,https://huggingface.co/martin-ha/toxic-comment-model,"This model is a fine-tuned version of the DistilBERT model to classify toxic comments. ; You can use the model with the following code.; This model is intended to use for classify toxic online classifications. However, one limitation of the model is that it performs poorly for some comments that mention a specific identity subgroup, like Muslim. The following table shows a evaluation score for different identity group. You can learn the specific meaning of this metrics here. But basically, those metrics shows how well a model performs for a specific group. The larger the number, the better.; The table above shows that the model performs poorly for the muslim and jewish group. In fact, you pass the sentence ""Muslims are people who follow or practice Islam, an Abrahamic monotheistic religion."" Into the model, the model will classify it as toxic. Be mindful for this type of potential bias.; The training data comes this Kaggle competition. We use 10% of the train.csv data to train the model.",Natural Language Processing
korean_sentiment,Text Classification,PyTorch; Transformers,,,,5,,2337,499.1619898,1,https://huggingface.co/matthewburke/korean_sentiment,,Natural Language Processing
recipenlg,Text Generation,PyTorch; JAX; Transformers,,,,2,,321,1164.325644,1,https://huggingface.co/mbien/recipenlg,"Model accompanying our INLG 2020 paper: RecipeNLG: A Cooking Recipes Dataset for Semi-Structured Text Generation; Please visit the website of our project: recipenlg.cs.put.poznan.pl to download it.; Yes, sure! If you feel some information is missing in our paper, please check first in our thesis, which is much more detailed. In case of further questions, you're invited to send us a github issue, we will respond as fast as we can!",Natural Language Processing
german-news-sentiment-bert,Text Classification,PyTorch; JAX; Safetensors; Transformers,,,,4,,1145,1308.252622,,https://huggingface.co/mdraw/german-news-sentiment-bert,"Sentiment analysis model based on https://huggingface.co/oliverguhr/german-sentiment-bert, with additional training on German news texts about migration.; This model is part of the project https://github.com/text-analytics-20/news-sentiment-development, which explores sentiment development in German news articles about migration between 2007 and 2019.; Code for inference (predicting sentiment polarity) on raw text can be found at https://github.com/text-analytics-20/news-sentiment-development/blob/main/sentiment_analysis/bert.py; If you are not interested in polarity but just want to predict discrete class labels (0: positive, 1: negative, 2: neutral), you can also use the model with Oliver Guhr's germansentiment package as follows:; First install the package from PyPI:",Natural Language Processing
flair-arabic-multi-ner,Token Classification,PyTorch; Flair,Arabic; English,apache-2.0,,2,AQMAR; ANERcorp,766,550.4958729,,https://huggingface.co/megantosh/flair-arabic-multi-ner,"Training was conducted over 94 epochs, using a linear decaying learning rate of 2e-05, starting from 0.225 and a batch size of 32 with GloVe and Flair forward and backward embeddings.;  Due to the right-to-left in left-to-right context, some formatting errors might occur. and your code might appear like this, (link accessed on 2020-10-27) ; if you use this model, please consider citing this work:",Natural Language Processing
DialoGPT-large,Conversational,PyTorch; TensorFlow; JAX; Transformers,,mit,https://arxiv.org/pdf/1911.00536.pdf,177,,45489,8142.288943,93,https://huggingface.co/microsoft/DialoGPT-large,"DialoGPT is a SOTA large-scale pretrained dialogue response generation model for multiturn conversations. 
The human evaluation results indicate that the response generated from DialoGPT is comparable to human response quality under a single-turn conversation Turing test.
The model is trained on 147M multi-turn dialogue from Reddit discussion thread. ; Please find the information about preprocessing, training and full details of the DialoGPT in the original DialoGPT repository; ArXiv paper: https://arxiv.org/abs/1911.00536; Now we are ready to try out how the model works as a chatting partner!",Natural Language Processing
DialoGPT-small,Conversational,PyTorch; TensorFlow; JAX; Safetensors; Transformers,,mit,https://arxiv.org/pdf/1911.00536.pdf,52,,28586,1699.488994,23,https://huggingface.co/microsoft/DialoGPT-small,"DialoGPT is a SOTA large-scale pretrained dialogue response generation model for multiturn conversations. 
The human evaluation results indicate that the response generated from DialoGPT is comparable to human response quality under a single-turn conversation Turing test.
The model is trained on 147M multi-turn dialogue from Reddit discussion thread. ; Please find the information about preprocessing, training and full details of the DialoGPT in the original DialoGPT repository; ArXiv paper: https://arxiv.org/abs/1911.00536; Now we are ready to try out how the model works as a chatting partner!",Natural Language Processing
beit-base-patch16-384,Image Classification,PyTorch; JAX; Transformers,,apache-2.0,https://arxiv.org/pdf/2106.08254.pdf,3,imagenet; imagenet-21k,707,726.0747209,,https://huggingface.co/microsoft/beit-base-patch16-384,"BEiT model pre-trained in a self-supervised fashion on ImageNet-21k (14 million images, 21,841 classes) at resolution 224x224, and fine-tuned on ImageNet 2012 (1 million images, 1,000 classes) at resolution 384x384. It was introduced in the paper BEIT: BERT Pre-Training of Image Transformers by Hangbo Bao, Li Dong and Furu Wei and first released in this repository. ; Disclaimer: The team releasing BEiT did not write a model card for this model so this model card has been written by the Hugging Face team.; The BEiT model is a Vision Transformer (ViT), which is a transformer encoder model (BERT-like). In contrast to the original ViT model, BEiT is pretrained on a large collection of images in a self-supervised fashion, namely ImageNet-21k, at a resolution of 224x224 pixels. The pre-training objective for the model is to predict visual tokens from the encoder of OpenAI's DALL-E's VQ-VAE, based on masked patches.
Next, the model was fine-tuned in a supervised fashion on ImageNet (also referred to as ILSVRC2012), a dataset comprising 1 million images and 1,000 classes, also at resolution 224x224.; Images are presented to the model as a sequence of fixed-size patches (resolution 16x16), which are linearly embedded. Contrary to the original ViT models, BEiT models do use relative position embeddings (similar to T5) instead of absolute position embeddings, and perform classification of images by mean-pooling the final hidden states of the patches, instead of placing a linear layer on top of the final hidden state of the [CLS] token.; By pre-training the model, it learns an inner representation of images that can then be used to extract features useful for downstream tasks: if you have a dataset of labeled images for instance, you can train a standard classifier by placing a linear layer on top of the pre-trained encoder. One typically places a linear layer on top of the [CLS] token, as the last hidden state of this token can be seen as a representation of an entire image. Alternatively, one can mean-pool the final hidden states of the patch embeddings, and place a linear layer on top of that.",Computer Vision
codebert-base,Feature Extraction,PyTorch; TensorFlow; JAX; Rust; Transformers,,,https://arxiv.org/pdf/2002.08155.pdf,110,,777087,1997.325448,5,https://huggingface.co/microsoft/codebert-base,"Pretrained weights for CodeBERT: A Pre-Trained Model for Programming and Natural Languages.; The model is trained on bi-modal data (documents & code) of CodeSearchNet; This model is initialized with Roberta-base and trained with MLM+RTD objective (cf. the paper).; Please see the official repository for scripts that support ""code search"" and ""code-to-document generation"".",Multimodel
deberta-base,Fill-Mask,PyTorch; TensorFlow; Rust; Transformers,English,mit,https://arxiv.org/pdf/2006.03654.pdf,46,,5003278,1678.245342,4,https://huggingface.co/microsoft/deberta-base,"DeBERTa improves the BERT and RoBERTa models using disentangled attention and enhanced mask decoder. It outperforms BERT and RoBERTa on  majority of NLU tasks with 80GB training data. ; Please check the official repository for more details and updates.; We present the dev results on SQuAD 1.1/2.0 and MNLI tasks.; If you find DeBERTa useful for your work, please cite the following paper:",Natural Language Processing
deberta-v2-xlarge,Fill-Mask,PyTorch; TensorFlow; Transformers,English,mit,https://arxiv.org/pdf/2006.03654.pdf,14,,100247,5450.13513,1,https://huggingface.co/microsoft/deberta-v2-xlarge,"DeBERTa improves the BERT and RoBERTa models using disentangled attention and enhanced mask decoder. It outperforms BERT and RoBERTa on  majority of NLU tasks with 80GB training data.; Please check the official repository for more details and updates.; This is the DeBERTa V2 xlarge model with 24 layers, 1536 hidden size. The total parameters are 900M and it is trained with 160GB raw data.; We present the dev results on SQuAD 1.1/2.0 and several GLUE benchmark tasks.; If you find DeBERTa useful for your work, please cite the following paper:",Natural Language Processing
graphcodebert-base,Fill-Mask,PyTorch; TensorFlow; JAX; Transformers,,,https://arxiv.org/pdf/2009.08366.pdf,21,,55448,1656.325914,1,https://huggingface.co/microsoft/graphcodebert-base,"GraphCodeBERT is a graph-based pre-trained model based on the Transformer architecture for programming language, which also considers data-flow information along with code sequences. GraphCodeBERT consists of 12 layers, 768 dimensional hidden states, and 12 attention heads. The maximum sequence length for the model is 512. The model is trained on the CodeSearchNet dataset, which includes 2.3M functions with document pairs for six programming languages. ; More details can be found in the paper by Guo et. al.; Disclaimer: The team releasing BERT did not write a model card for this model so this model card has been written by the Hugging Face community members.",Natural Language Processing
layoutlm-base-uncased,,PyTorch; TensorFlow; Transformers,,,https://arxiv.org/pdf/1912.13318.pdf,24,,3081133,904.6856748,3,https://huggingface.co/microsoft/layoutlm-base-uncased,"Multimodal (text + layout/format + image) pre-training for document AI; Microsoft Document AI | GitHub; LayoutLM is a simple but effective pre-training method of text and layout for document image understanding and information extraction tasks, such as form understanding and receipt understanding. LayoutLM archives the SOTA results on multiple datasets. For more details, please refer to our paper: ; LayoutLM: Pre-training of Text and Layout for Document Image Understanding
Yiheng Xu, Minghao Li, Lei Cui, Shaohan Huang, Furu Wei, Ming Zhou, KDD 2020; We pre-train LayoutLM on IIT-CDIP Test Collection 1.0* dataset with two settings. ",
layoutlm-large-uncased,,PyTorch; TensorFlow; Transformers,,,https://arxiv.org/pdf/1912.13318.pdf,7,,1067,2785.964246,,https://huggingface.co/microsoft/layoutlm-large-uncased,"Multimodal (text + layout/format + image) pre-training for document AI; Microsoft Document AI | GitHub; LayoutLM is a simple but effective pre-training method of text and layout for document image understanding and information extraction tasks, such as form understanding and receipt understanding. LayoutLM archives the SOTA results on multiple datasets. For more details, please refer to our paper: ; LayoutLM: Pre-training of Text and Layout for Document Image Understanding
Yiheng Xu, Minghao Li, Lei Cui, Shaohan Huang, Furu Wei, Ming Zhou, KDD 2020; We pre-train LayoutLM on IIT-CDIP Test Collection 1.0* dataset with two settings. ",
layoutxlm-base,,PyTorch; Transformers,,cc-by-nc-sa-4.0,https://arxiv.org/pdf/2104.08836.pdf,39,,167222,1529.693711,,https://huggingface.co/microsoft/layoutxlm-base,"Multimodal (text + layout/format + image) pre-training for document AI; LayoutXLM is a multilingual variant of LayoutLMv2.; The documentation of this model in the Transformers library can be found here.; Microsoft Document AI | GitHub; LayoutXLM is a multimodal pre-trained model for multilingual document understanding, which aims to bridge the language barriers for visually-rich document understanding. Experiment results show that it has significantly outperformed the existing SOTA cross-lingual pre-trained models on the XFUND dataset.",
markuplm-large,,PyTorch; Transformers,English,,https://arxiv.org/pdf/2110.08518.pdf,12,,866,753.343167,,https://huggingface.co/microsoft/markuplm-large,"Multimodal (text +markup language) pre-training for Document AI; MarkupLM is a simple but effective multi-modal pre-training method of text and markup language for visually-rich document understanding and information extraction tasks, such as webpage QA and webpage information extraction. MarkupLM archives the SOTA results on multiple datasets. For more details, please refer to our paper:; MarkupLM: Pre-training of Text and Markup Language for Visually-rich Document Understanding  Junlong Li, Yiheng Xu, Lei Cui, Furu Wei; We refer to the docs and demo notebooks.; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
trocr-base-printed,Image-to-Text,PyTorch; Transformers,,,https://arxiv.org/pdf/2109.10282.pdf,86,,30041,1363.253567,85,https://huggingface.co/microsoft/trocr-base-printed,"TrOCR model fine-tuned on the SROIE dataset. It was introduced in the paper TrOCR: Transformer-based Optical Character Recognition with Pre-trained Models by Li et al. and first released in this repository. ; Disclaimer: The team releasing TrOCR did not write a model card for this model so this model card has been written by the Hugging Face team.; The TrOCR model is an encoder-decoder model, consisting of an image Transformer as encoder, and a text Transformer as decoder. The image encoder was initialized from the weights of BEiT, while the text decoder was initialized from the weights of RoBERTa.; Images are presented to the model as a sequence of fixed-size patches (resolution 16x16), which are linearly embedded. One also adds absolute position embeddings before feeding the sequence to the layers of the Transformer encoder. Next, the Transformer text decoder autoregressively generates tokens.; You can use the raw model for optical character recognition (OCR) on single text-line images. See the model hub to look for fine-tuned versions on a task that interests you.",Multimodel
trocr-base-stage1,Image-to-Text,PyTorch; Transformers,,,https://arxiv.org/pdf/2109.10282.pdf,6,,2352,1578.293195,1,https://huggingface.co/microsoft/trocr-base-stage1,"TrOCR pre-trained only model. It was introduced in the paper TrOCR: Transformer-based Optical Character Recognition with Pre-trained Models by Li et al. and first released in this repository. ; Disclaimer: The team releasing TrOCR did not write a model card for this model so this model card has been written by the Hugging Face team.; The TrOCR model is an encoder-decoder model, consisting of an image Transformer as encoder, and a text Transformer as decoder. The image encoder was initialized from the weights of BEiT, while the text decoder was initialized from the weights of RoBERTa.; Images are presented to the model as a sequence of fixed-size patches (resolution 16x16), which are linearly embedded. One also adds absolute position embeddings before feeding the sequence to the layers of the Transformer encoder. Next, the Transformer text decoder autoregressively generates tokens.; You can use the raw model for optical character recognition (OCR) on single text-line images. See the model hub to look for fine-tuned versions on a task that interests you.",Multimodel
trocr-large-handwritten,Image-to-Text,PyTorch; Transformers,,,https://arxiv.org/pdf/2109.10282.pdf,27,,6512,2284.853567,7,https://huggingface.co/microsoft/trocr-large-handwritten,"TrOCR model fine-tuned on the IAM dataset. It was introduced in the paper TrOCR: Transformer-based Optical Character Recognition with Pre-trained Models by Li et al. and first released in this repository. ; Disclaimer: The team releasing TrOCR did not write a model card for this model so this model card has been written by the Hugging Face team.; The TrOCR model is an encoder-decoder model, consisting of an image Transformer as encoder, and a text Transformer as decoder. The image encoder was initialized from the weights of BEiT, while the text decoder was initialized from the weights of RoBERTa.; Images are presented to the model as a sequence of fixed-size patches (resolution 16x16), which are linearly embedded. One also adds absolute position embeddings before feeding the sequence to the layers of the Transformer encoder. Next, the Transformer text decoder autoregressively generates tokens.; You can use the raw model for optical character recognition (OCR) on single text-line images. See the model hub to look for fine-tuned versions on a task that interests you.",Multimodel
trocr-large-printed,Image-to-Text,PyTorch; Transformers,,,https://arxiv.org/pdf/2109.10282.pdf,19,,19860,2489.653645,5,https://huggingface.co/microsoft/trocr-large-printed,"TrOCR model fine-tuned on the SROIE dataset. It was introduced in the paper TrOCR: Transformer-based Optical Character Recognition with Pre-trained Models by Li et al. and first released in this repository. ; Disclaimer: The team releasing TrOCR did not write a model card for this model so this model card has been written by the Hugging Face team.; The TrOCR model is an encoder-decoder model, consisting of an image Transformer as encoder, and a text Transformer as decoder. The image encoder was initialized from the weights of BEiT, while the text decoder was initialized from the weights of RoBERTa.; Images are presented to the model as a sequence of fixed-size patches (resolution 16x16), which are linearly embedded. One also adds absolute position embeddings before feeding the sequence to the layers of the Transformer encoder. Next, the Transformer text decoder autoregressively generates tokens.; You can use the raw model for optical character recognition (OCR) on single text-line images. See the model hub to look for fine-tuned versions on a task that interests you.",Multimodel
wavlm-base-plus-sv,,PyTorch; Transformers,English,,https://arxiv.org/pdf/1912.07875.pdf; https://arxiv.org/pdf/2106.06909.pdf; https://arxiv.org/pdf/2101.00390.pdf; https://arxiv.org/pdf/2110.13900.pdf,11,,10247,405.062539,5,https://huggingface.co/microsoft/wavlm-base-plus-sv,"Microsoft's WavLM; The model was pretrained on 16kHz sampled speech audio with utterance and speaker contrastive loss. When using the model, make sure that your speech input is also sampled at 16kHz. ; Note: This model does not have a tokenizer as it was pretrained on audio alone. In order to use this model speech recognition, a tokenizer should be created and the model should be fine-tuned on labeled text data. Check out this blog for more in-detail explanation of how to fine-tune the model.; The model was pre-trained on:; Paper: WavLM: Large-Scale Self-Supervised Pre-Training for Full Stack Speech Processing",
anekdot_funny2_rugpt3Small,Text Generation,PyTorch; JAX; Transformers,,,,1,,14,1205.983659,,https://huggingface.co/mmm-da/anekdot_funny2_rugpt3Small,No model card; New: Create and edit this model card directly on the website!,Natural Language Processing
bert-base-cased-goemotions-original,,PyTorch; Transformers,,,,5,,109446,433.2104092,,https://huggingface.co/monologg/bert-base-cased-goemotions-original,"No model card; New: Create and edit this model card directly on the website!; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
bert-base-spanish-wwm-cased-finetuned-spa-squad2-es,Question Answering,PyTorch; JAX; Transformers,Spanish,,,4,,1118,1612.261853,2,https://huggingface.co/mrm8488/bert-base-spanish-wwm-cased-finetuned-spa-squad2-es,"This model is provided by BETO team and fine-tuned on SQuAD-es-v2.0 for Q&A downstream task.; Language model ('dccuchile/bert-base-spanish-wwm-cased'):; BETO is a BERT model trained on a big Spanish corpus. BETO is of size similar to a BERT-Base and was trained with the Whole Word Masking technique. Below you find Tensorflow and Pytorch checkpoints for the uncased and cased versions, as well as some results for Spanish benchmarks comparing BETO with Multilingual BERT as well as other (not BERT-based) models.; SQuAD-es-v2.0; The model was trained on a Tesla P100 GPU and 25GB of RAM with the following command:",Natural Language Processing
distilbert-base-multi-cased-finetuned-typo-detection,Token Classification,PyTorch; Safetensors; Transformers,11 languages,,,5,,46,1078.976544,,https://huggingface.co/mrm8488/distilbert-base-multi-cased-finetuned-typo-detection,distilbert-base-multilingual-cased fine-tuned on GitHub Typo Corpus for typo detection (using NER style); Dataset: GitHub Typo Corpus ? for 15 languages; Fine-tune script on NER dataset provided by Huggingface ???¡á?; Fast usage with pipelines ?; It works?! We typed wrong Add and middleware,Natural Language Processing
distilroberta-finetuned-financial-news-sentiment-analysis,Text Classification,PyTorch; TensorBoard; Safetensors; Transformers,,apache-2.0,,67,financial_phrasebank,90616,659.5919138,8,https://huggingface.co/mrm8488/distilroberta-finetuned-financial-news-sentiment-analysis,"This model is a fine-tuned version of distilroberta-base on the financial_phrasebank dataset.
It achieves the following results on the evaluation set:; More information needed; More information needed; More information needed; The following hyperparameters were used during training:",Natural Language Processing
t5-base-finetuned-summarize-news,Text2Text Generation,PyTorch; JAX; Safetensors; Transformers,English,,https://arxiv.org/pdf/1910.10683.pdf,27,,265666,2676.783207,2,https://huggingface.co/mrm8488/t5-base-finetuned-summarize-news,"All credits to Abhishek Kumar Mishra; Google's T5 base fine-tuned on News Summary dataset for summarization downstream task.; The T5 model was presented in Exploring the Limits of Transfer Learning with a Unified Text-to-Text Transformer by Colin Raffel, Noam Shazeer, Adam Roberts, Katherine Lee, Sharan Narang, Michael Matena, Yanqi Zhou, Wei Li, Peter J. Liu in Here the abstract:; Transfer learning, where a model is first pre-trained on a data-rich task before being fine-tuned on a downstream task, has emerged as a powerful technique in natural language processing (NLP). The effectiveness of transfer learning has given rise to a diversity of approaches, methodology, and practice. In this paper, we explore the landscape of transfer learning techniques for NLP by introducing a unified framework that converts every language problem into a text-to-text format. Our systematic study compares pre-training objectives, architectures, unlabeled datasets, transfer approaches, and other factors on dozens of language understanding tasks. By combining the insights from our exploration with scale and our new ¡°Colossal Clean Crawled Corpus¡±, we achieve state-of-the-art results on many benchmarks covering summarization, question answering, text classification, and more. To facilitate future work on transfer learning for NLP, we release our dataset, pre-trained models, and code.; ",Natural Language Processing
bert-base-portuguese-cased,Fill-Mask,PyTorch; TensorFlow; JAX; Transformers,Portuguese,mit,,78,brWaC,368010,1403.209733,9,https://huggingface.co/neuralmind/bert-base-portuguese-cased,"; BERTimbau Base is a pretrained BERT model for Brazilian Portuguese that achieves state-of-the-art performances on three downstream NLP tasks: Named Entity Recognition, Sentence Textual Similarity and Recognizing Textual Entailment. It is available in two sizes: Base and Large.; For further information or requests, please go to BERTimbau repository.; If you use our work, please cite:",Natural Language Processing
fb-bart-large-finetuned-trade-the-event-finance-summarizer,Summarization,PyTorch; TensorBoard; Transformers,,,,5,,251,1672.46336,,https://huggingface.co/nickmuchi/fb-bart-large-finetuned-trade-the-event-finance-summarizer,"This model was trained from scratch on an unknown dataset.
It achieves the following results on the evaluation set:; More information needed; More information needed; More information needed; The following hyperparameters were used during training:",Natural Language Processing
deformable-detr,Object Detection,PyTorch; Transformers,,apache-2.0,https://arxiv.org/pdf/2010.04159.pdf,9,coco,12226,161.0104955,1,https://huggingface.co/SenseTime/deformable-detr,"Deformable DEtection TRansformer (DETR) model trained end-to-end on COCO 2017 object detection (118k annotated images). It was introduced in the paper Deformable DETR: Deformable Transformers for End-to-End Object Detection by Zhu et al. and first released in this repository. ; Disclaimer: The team releasing Deformable DETR did not write a model card for this model so this model card has been written by the Hugging Face team.; The DETR model is an encoder-decoder transformer with a convolutional backbone. Two heads are added on top of the decoder outputs in order to perform object detection: a linear layer for the class labels and a MLP (multi-layer perceptron) for the bounding boxes. The model uses so-called object queries to detect objects in an image. Each object query looks for a particular object in the image. For COCO, the number of object queries is set to 100. ; The model is trained using a ""bipartite matching loss"": one compares the predicted classes + bounding boxes of each of the N = 100 object queries to the ground truth annotations, padded up to the same length N (so if an image only contains 4 objects, 96 annotations will just have a ""no object"" as class and ""no bounding box"" as bounding box). The Hungarian matching algorithm is used to create an optimal one-to-one mapping between each of the N queries and each of the N annotations. Next, standard cross-entropy (for the classes) and a linear combination of the L1 and generalized IoU loss (for the bounding boxes) are used to optimize the parameters of the model.; ",Computer Vision
glpn-kitti,Depth Estimation,PyTorch; Transformers,,apache-2.0,https://arxiv.org/pdf/2201.07436.pdf,4,,28601,245.0113303,3,https://huggingface.co/vinvino02/glpn-kitti,"Global-Local Path Networks (GLPN) model trained on KITTI for monocular depth estimation. It was introduced in the paper Global-Local Path Networks for Monocular Depth Estimation with Vertical CutDepth by Kim et al. and first released in this repository. ; Disclaimer: The team releasing GLPN did not write a model card for this model so this model card has been written by the Hugging Face team.; GLPN uses SegFormer as backbone and adds a lightweight head on top for depth estimation.; ; You can use the raw model for monocular depth estimation. See the model hub to look for
fine-tuned versions on a task that interests you.",Computer Vision
legal-bert-base-uncased,Fill-Mask,PyTorch; TensorFlow; JAX; Transformers,English,cc-by-sa-4.0,,69,,61596,1416.229647,14,https://huggingface.co/nlpaueb/legal-bert-base-uncased,"LEGAL-BERT is a family of BERT models for the legal domain, intended to assist legal NLP research, computational law, and legal technology applications.  To pre-train the different variations of LEGAL-BERT, we collected 12 GB of diverse English legal text from several fields (e.g., legislation, court cases,  contracts) scraped from publicly available resources. Sub-domain variants (CONTRACTS-, EURLEX-, ECHR-) and/or general LEGAL-BERT perform better than using BERT out of the box for domain-specific tasks. A light-weight model (33% the size of BERT-BASE) pre-trained from scratch on legal data with competitive performance is also available.
; I. Chalkidis, M. Fergadiotis, P. Malakasiotis, N. Aletras and I. Androutsopoulos. ""LEGAL-BERT: The Muppets straight out of Law School"". In Findings of Empirical Methods in Natural Language Processing (EMNLP 2020) (Short Papers), to be held online, 2020. (https://aclanthology.org/2020.findings-emnlp.261); The pre-training corpora of LEGAL-BERT include:; 116,062 documents of EU legislation, publicly available from EURLEX (http://eur-lex.europa.eu), the repository of EU Law running under the EU Publication Office.; 61,826 documents of UK legislation, publicly available from the UK legislation portal (http://www.legislation.gov.uk).",Natural Language Processing
legal-led-base-16384,Summarization,PyTorch; Transformers,English,mit,,4,,91,649.2400813,,https://huggingface.co/nsi319/legal-led-base-16384,"This is a Longformer Encoder Decoder (led-base-16384) model for the legal domain, trained for long document abstractive summarization task. The length of the document can be upto 16,384 tokens.; The legal-led-base-16384 model was trained on sec-litigation-releases dataset consisting more than 2700 litigation releases and complaints.; When the model is used for summarizing legal documents, it achieves the following results:; Inference API has been turned off for this model.",Natural Language Processing
mit-b0,Image Classification,PyTorch; TensorFlow; Transformers,,other,https://arxiv.org/pdf/2105.15203.pdf,14,imagenet_1k,150409,29.07254829,14,https://huggingface.co/nvidia/mit-b0,"SegFormer encoder fine-tuned on Imagenet-1k. It was introduced in the paper SegFormer: Simple and Efficient Design for Semantic Segmentation with Transformers by Xie et al. and first released in this repository. ; Disclaimer: The team releasing SegFormer did not write a model card for this model so this model card has been written by the Hugging Face team.; SegFormer consists of a hierarchical Transformer encoder and a lightweight all-MLP decode head to achieve great results on semantic segmentation benchmarks such as ADE20K and Cityscapes. The hierarchical Transformer is first pre-trained on ImageNet-1k, after which a decode head is added and fine-tuned altogether on a downstream dataset.; This repository only contains the pre-trained hierarchical Transformer, hence it can be used for fine-tuning purposes.; You can use the model for fine-tuning of semantic segmentation. See the model hub to look for fine-tuned versions on a task that interests you.",Computer Vision
segformer-b5-finetuned-cityscapes-1024-1024,Image Segmentation,PyTorch; TensorFlow; Transformers,,other,https://arxiv.org/pdf/2105.15203.pdf,7,cityscapes,8103,679.0061197,2,https://huggingface.co/nvidia/segformer-b5-finetuned-cityscapes-1024-1024,"SegFormer model fine-tuned on CityScapes at resolution 1024x1024. It was introduced in the paper SegFormer: Simple and Efficient Design for Semantic Segmentation with Transformers by Xie et al. and first released in this repository. ; Disclaimer: The team releasing SegFormer did not write a model card for this model so this model card has been written by the Hugging Face team.; SegFormer consists of a hierarchical Transformer encoder and a lightweight all-MLP decode head to achieve great results on semantic segmentation benchmarks such as ADE20K and Cityscapes. The hierarchical Transformer is first pre-trained on ImageNet-1k, after which a decode head is added and fine-tuned altogether on a downstream dataset.; You can use the raw model for semantic segmentation. See the model hub to look for fine-tuned versions on a task that interests you.; Here is how to use this model to classify an image of the COCO 2017 dataset into one of the 1,000 ImageNet classes:",Computer Vision
deid_roberta_i2b2,Token Classification,PyTorch; Transformers,English,mit,https://arxiv.org/pdf/1907.11692.pdf,4,I2B2,81649,1456.673922,4,https://huggingface.co/obi/deid_roberta_i2b2,"Steps on how this model was trained can be found here: Training. The ""model_name_or_path"" was set to: ""roberta-large"".; Training details:; Post a Github issue on the repo: Robust DeID.",Natural Language Processing
clip-vit-base-patch32,Zero-Shot Image Classification,PyTorch; TensorFlow; JAX; Transformers,,,https://arxiv.org/pdf/2103.00020.pdf; https://arxiv.org/pdf/1908.04913.pdf,209,,3741682,1819.58821,203,https://huggingface.co/openai/clip-vit-base-patch32,"Disclaimer: The model card is taken and modified from the official CLIP repository, it can be found here.; The CLIP model was developed by researchers at OpenAI to learn about what contributes to robustness in computer vision tasks. The model was also developed to test the ability of models to generalize to arbitrary image classification tasks in a zero-shot manner. It was not developed for general model deployment - to deploy models like CLIP, researchers will first need to carefully study their capabilities in relation to the specific context they¡¯re being deployed within.; January 2021; The model uses a ViT-B/32 Transformer architecture as an image encoder and uses a masked self-attention Transformer as a text encoder. These encoders are trained to maximize the similarity of (image, text) pairs via a contrastive loss. ; The original implementation had two variants: one using a ResNet image encoder and the other using a Vision Transformer. This repository has the variant with the Vision Transformer.",Computer Vision
imagegpt-large,,PyTorch; Transformers,,apache-2.0,,25,imagenet-21k,42,5632.052744,,https://huggingface.co/openai/imagegpt-large,"ImageGPT (iGPT) model pre-trained on ImageNet ILSVRC 2012 (14 million images, 21,843 classes) at resolution 32x32. It was introduced in the paper Generative Pretraining from Pixels by Chen et al. and first released in this repository. See also the official blog post.; Disclaimer: The team releasing ImageGPT did not write a model card for this model so this model card has been written by the Hugging Face team.; The ImageGPT (iGPT) is a transformer decoder model (GPT-like) pretrained on a large collection of images in a self-supervised fashion, namely ImageNet-21k, at a resolution of 32x32 pixels. ; The goal for the model is simply to predict the next pixel value, given the previous ones.; By pre-training the model, it learns an inner representation of images that can then be used to:",
imagegpt-small,,PyTorch; Transformers,,apache-2.0,,9,imagenet-21k,16348,332.0527422,1,https://huggingface.co/openai/imagegpt-small,"ImageGPT (iGPT) model pre-trained on ImageNet ILSVRC 2012 (14 million images, 21,843 classes) at resolution 32x32. It was introduced in the paper Generative Pretraining from Pixels by Chen et al. and first released in this repository. See also the official blog post.; Disclaimer: The team releasing ImageGPT did not write a model card for this model so this model card has been written by the Hugging Face team.; The ImageGPT (iGPT) is a transformer decoder model (GPT-like) pretrained on a large collection of images in a self-supervised fashion, namely ImageNet-21k, at a resolution of 32x32 pixels. ; The goal for the model is simply to predict the next pixel value, given the previous ones.; By pre-training the model, it learns an inner representation of images that can then be used to:",
bert-large-cased-squad-v1.1-portuguese,Question Answering,PyTorch; TensorFlow; Transformers,Portuguese,mit,,26,brWaC; squad; squad_v1_pt,7637,2724.053373,3,https://huggingface.co/pierreguillou/bert-large-cased-squad-v1.1-portuguese,"; The model was trained on the dataset SQUAD v1.1 in portuguese from the Deep Learning Brasil group. ; The language model used is the BERTimbau Large (aka ""bert-large-portuguese-cased"") from Neuralmind.ai: BERTimbau is a pretrained BERT model for Brazilian Portuguese that achieves state-of-the-art performances on three downstream NLP tasks: Named Entity Recognition, Sentence Textual Similarity and Recognizing Textual Entailment. It is available in two sizes: Base and Large.; All the informations are in the blog post : NLP | Como treinar um modelo de Question Answering em qualquer linguagem baseado no BERT large, melhorando o desempenho do modelo utilizando o BERT base? (estudo de caso em portugu¨ºs); question_answering_BERT_large_cased_squad_v11_pt.ipynb (nbviewer version)",Natural Language Processing
ner-bert-base-cased-pt-lenerbr,Token Classification,PyTorch; Transformers,Portuguese,,,3,lener_br,85,433.6487082,1,https://huggingface.co/pierreguillou/ner-bert-base-cased-pt-lenerbr,"ner-bert-base-portuguese-cased-lenerbr is a NER model (token classification) in the legal domain in Portuguese that was finetuned on 20/12/2021 in Google Colab from the model pierreguillou/bert-base-cased-pt-lenerbr on the dataset LeNER_br by using a NER objective.; Due to the small size of BERTimbau base and finetuning dataset, the model overfitted before to reach the end of training. Here are the overall final metrics on the validation dataset (note: see the paragraph ""Validation metrics by Named Entity"" to get detailed metrics):; Check as well the large version of this model with a f1 of 0.908.; Note: the model pierreguillou/bert-base-cased-pt-lenerbr is a language model that was created through the finetuning of the model BERTimbau base on the dataset LeNER-Br language modeling by using a MASK objective. This first specialization of the language model before finetuning on the NER task improved a bit the model quality. To prove it, here are the results of the NER model finetuned from the model BERTimbau base (a non-specialized language model):; NLP | Modelos e Web App para Reconhecimento de Entidade Nomeada (NER) no dom¨ªnio jur¨ªdico brasileiro (29/12/2021)",Natural Language Processing
t5-base-qa-squad-v1.1-portuguese,Text2Text Generation,PyTorch; Transformers,Portuguese,,,14,squad; squad_v1_pt,158,894.1047422,1,https://huggingface.co/pierreguillou/t5-base-qa-squad-v1.1-portuguese,"; t5-base-qa-squad-v1.1-portuguese is a QA model (Question Answering) in Portuguese that was finetuned on 27/01/2022 in Google Colab from the model unicamp-dl/ptt5-base-portuguese-vocab of Neuralmind on the dataset SQUAD v1.1 in portuguese from the Deep Learning Brasil group by using a Test2Text-Generation objective.; Due to the small size of T5 base and finetuning dataset, the model overfitted before to reach the end of training. Here are the overall final metrics on the validation dataset:; Check our other QA models in Portuguese finetuned on SQUAD v1.1:; NLP nas empresas | Como eu treinei um modelo T5 em portugu¨ºs na tarefa QA no Google Colab (27/01/2022)",Natural Language Processing
mpnet-retriever-discourse,Sentence Similarity,PyTorch; Sentence Transformers; Transformers,,,,1,,17,438.6880975,,https://huggingface.co/pinecone/mpnet-retriever-discourse,"This is a sentence-transformers model: It maps sentences & paragraphs to a 768 dimensional dense vector space and can be used as a retriever model in open-domain question-answering tasks.; Using this model becomes easy when you have sentence-transformers installed:; Then you can use the model like this:; Without sentence-transformers, you can use the model like this: First, you pass your input through the transformer model, then you have to apply the right pooling-operation on-top of the contextualized word embeddings.; The model was fine-tuned on question-answer pairs scraper from several ML-focused Discourse forums [HuggingFace, PyTorch, Streamlit, TensorFlow].",Natural Language Processing
raceBERT,Text Classification,PyTorch; Transformers,,,,2,,454,174.0096095,,https://huggingface.co/pparasurama/raceBERT,No model card; New: Create and edit this model card directly on the website!,Natural Language Processing
bert-tiny,,PyTorch; Transformers,English,mit,https://arxiv.org/pdf/1908.08962.pdf; https://arxiv.org/pdf/2110.01518.pdf,62,,2133479,18.02966331,,https://huggingface.co/prajjwal1/bert-tiny,"The following model is a Pytorch pre-trained model obtained from converting Tensorflow checkpoint found in the official Google BERT repository. ; This is one of the smaller pre-trained BERT variants, together with bert-mini bert-small and bert-medium. They were introduced in the study Well-Read Students Learn Better: On the Importance of Pre-training Compact Models (arxiv), and ported to HF for the study Generalization in NLI: Ways (Not) To Go Beyond Simple Heuristics (arXiv). These models are supposed to be trained on a downstream task.; If you use the model, please consider citing both the papers:; Config of this model:; Other models to check out:",
S-PubMedBert-MS-MARCO-SCIFACT,Sentence Similarity,PyTorch; Sentence Transformers; Transformers,,,,5,,42,438.6777928,,https://huggingface.co/pritamdeka/S-PubMedBert-MS-MARCO-SCIFACT,"This is a sentence-transformers model: It maps sentences & paragraphs to a 768 dimensional dense vector space and can be used for tasks like clustering or semantic search.; Using this model becomes easy when you have sentence-transformers installed:; Then you can use the model like this:; Without sentence-transformers, you can use the model like this: First, you pass your input through the transformer model, then you have to apply the right pooling-operation on-top of the contextualized word embeddings.; For an automated evaluation of this model, see the Sentence Embeddings Benchmark: https://seb.sbert.net",Natural Language Processing
grammar_error_correcter_v1,Text2Text Generation,PyTorch; Transformers,,,,30,,35544,894.1715811,8,https://huggingface.co/prithivida/grammar_error_correcter_v1,This model is part of the Gramformer library please refer to https://github.com/PrithivirajDamodaran/Gramformer/,Natural Language Processing
parrot_paraphraser_on_T5,Text2Text Generation,PyTorch; Transformers,,,,117,,258151,892.7876014,16,https://huggingface.co/prithivida/parrot_paraphraser_on_T5,"Parrot is a paraphrase based utterance augmentation framework purpose built to accelerate training NLU models. A paraphrase framework is more than just a paraphrasing model. For more  details on the library and usage please refer to the github page; Huggingface lists 12 paraphrase models, RapidAPI lists 7 fremium and commercial paraphrasers like QuillBot, Rasa has discussed an experimental paraphraser for augmenting text data here, Sentence-transfomers offers a paraphrase mining utility and NLPAug offers word level augmentation with a PPDB (a multi-million paraphrase database). While these attempts at paraphrasing are great, there are still some gaps and paraphrasing is NOT yet a mainstream option for text augmentation in building NLU models....Parrot is a humble attempt to fill some of these gaps.; What is a good paraphrase? Almost all conditioned text generation models are validated  on 2 factors, (1) if the generated text conveys the same meaning as the original context (Adequacy) (2) if the text is fluent / grammatically correct english (Fluency). For instance Neural Machine Translation outputs are tested for Adequacy and Fluency. But a good paraphrase should be adequate and fluent while being as different as possible on the surface lexical form. With respect to this definition, the  3 key metrics that measures the quality of paraphrases are:; Parrot offers knobs to control Adequacy, Fluency and Diversity as per your needs.; What makes a paraphraser a good augmentor? For training a NLU model we just don't need a lot of utterances but utterances with intents and slots/entities annotated. Typical flow would be:",Natural Language Processing
led-base-book-summary,Summarization,PyTorch; Safetensors; Transformers,,bsd-3-clause,,35,kmfoda/booksum,15335,1299.386208,9,https://huggingface.co/pszemraj/led-base-book-summary,"The Longformer Encoder-Decoder (LED) for Narrative-Esque Long Text Summarization is a model I fine-tuned from allenai/led-base-16384 to condense extensive technical, academic, and narrative content in a fairly generalizable way.; Note: The API widget has a max length of ~96 tokens due to inference timeout constraints. ; The model was trained on the BookSum dataset released by SalesForce, which leads to the bsd-3-clause license. The training process involved 16 epochs with parameters tweaked to facilitate very fine-tuning-type training (super low learning rate). ; Model checkpoint: pszemraj/led-base-16384-finetuned-booksum. ; This model is the smallest/fastest booksum-tuned model I have worked on. If you're looking for higher quality summaries, check out:",Natural Language Processing
led-large-book-summary,Summarization,PyTorch; Safetensors; Transformers,English,bsd-3-clause,https://arxiv.org/pdf/2105.08209.pdf,32,kmfoda/booksum,2231,3771.693155,4,https://huggingface.co/pszemraj/led-large-book-summary,"This model is a fine-tuned version of allenai/led-large-16384 on the BookSum dataset (kmfoda/booksum). It aims to generalize well and be useful in summarizing lengthy text for both academic and everyday purposes. ; Note: Due to inference API timeout constraints, outputs may be truncated before the fully summary is returned (try python or the demo); To improve summary quality, use encoder_no_repeat_ngram_size=3 when calling the pipeline object. This setting encourages the model to utilize new vocabulary and construct an abstractive summary.; Load the model into a pipeline object:; Feed the text into the pipeline object:",Natural Language Processing
yacis-electra-small-japanese,,PyTorch; Transformers,Japanese,cc-by-sa-4.0,,7,YACIS corpus,11,238.5834031,,https://huggingface.co/ptaszynski/yacis-electra-small-japanese,"This is ELECTRA Small model for Japanese pretrained on 354 million sentences / 5.6 billion words of YACIS blog corpus.; The corpus was tokenized for pretraining with MeCab. Subword tokenization was done with WordPiece. ; This model uses ELECTRA Small model settings, 12 layers, 128 dimensions of hidden states, and 12 attention heads.; Vocabulary size was set to 32,000 tokens.; YACIS-ELECTRA is trained on the whole of YACIS blog corpus, which is a Japanese blog corpus containing 5.6 billion words in 354 million sentences.",
biobertpt-all,Fill-Mask,PyTorch; TensorFlow; JAX; Transformers,Portuguese,,,10,,855,2138.978418,,https://huggingface.co/pucpr/biobertpt-all,"The BioBERTpt - A Portuguese Neural Language Model for Clinical Named Entity Recognition paper contains clinical and biomedical BERT-based models for Portuguese Language, initialized with BERT-Multilingual-Cased & trained on clinical notes and biomedical literature. ; This model card describes the BioBERTpt(all) model, a full version with clinical narratives and biomedical literature in Portuguese language. ; Load the model via the transformers library:; Refer to the original paper, BioBERTpt - A Portuguese Neural Language Model for Clinical Named Entity Recognition for additional details and performance on Portuguese NER tasks.; This study was financed in part by the Coordena??o de Aperfei?oamento de Pessoal de N¨ªvel Superior - Brasil (CAPES) - Finance Code 001.",Natural Language Processing
bert-base-qarib,Fill-Mask,PyTorch; JAX; Transformers; TensorFlow,Arabic,,https://arxiv.org/pdf/2102.10684.pdf,3,arabic_billion_words; open_subtitles; twitter,312,2758.619504,,https://huggingface.co/qarib/bert-base-qarib,"QCRI Arabic and Dialectal BERT  (QARiB) model, was trained on a collection of ~ 420 Million tweets and ~ 180 Million sentences of text.
For the tweets, the data was collected using twitter API and using language filter. lang:ar. For the text data, it was a combination from
Arabic GigaWord, Abulkhair Arabic Corpus and OPUS.; QARiB: Is the Arabic name for ""Boat"".; See details in Training QARiB; You can use the raw model for either masked language modeling or next sentence prediction, but it's mostly intended to be fine-tuned on a downstream task. See the model hub to look for fine-tuned versions on a task that interests you. For more details, see Using QARiB; You can use this model directly with a pipeline for masked language modeling:",Natural Language Processing
classical-chinese-punctuation-guwen-biaodian,Token Classification,PyTorch; Transformers,Chinese,,,10,,155,407.3759022,1,https://huggingface.co/raynardj/classical-chinese-punctuation-guwen-biaodian,"»¶Ó­Ç°ÍùÎÒµÄgithubÎÄÑÔÊ«´ÊÏîÄ¿Ò³ÃæÌ½ÌÖ¡¢¼Ó?? £¬ Please check the github repository for more about the model, hit ? if you like; This model punctuates Classical(ancient) Chinese, you might feel strange about this task, but many of my ancestors think writing articles without punctuation is brilliant idea ?. What we have here are articles from books, letters or carved on stones where you can see no punctuation, just a long string of characters. As you can guess, NLP tech is usually a good tool to tackle this problem, and the entire pipeline can be borrowed from usual NER task.; Since there are also many articles are punctuated, hence with some regex operations, labeled data is more than abundant ?. That's why this problem is pretty much a low hanging fruit.; so I guess who's interested in the problem set can speak at least modern Chinese, hence... let me continue the documentation in Chinese.; ÊäÈëÒ»´®Î´¶Ï¾äÎÄÑÔÎÄ£¬ ¿ÉÒÔ¶Ï¾ä£¬ Ä¿Ç°Ö§³Ö¶þÊ®¶àÖÖ±êµã·ûºÅ",Natural Language Processing
keywords-cangtou-chinese-poetry,,PyTorch; Transformers,Chinese,,,7,,40,425.3772498,,https://huggingface.co/raynardj/keywords-cangtou-chinese-poetry,"This is a model to generated Chinese poetry with leading characters and certain tune of mood.; Õâ¸öÄ£ÐÍ³ä·ÖÀûÓÃÁËgpt2ÂÛÎÄµÄ¾«Ëè£¬ ÂÛÎÄ±êÌâÎª¡¶ÓïÑÔÄ£ÐÍ¼´Ñ§ÍòÊÂÍòÎï¡·£¬ Ò²¾ÍÊÇÐíÐí¶à¶àµÄÑ§Ï°ÈÎÎñ£¬ ¿ÉÒÔ°²ÅÅ³ÉÎÄ±¾ÐòÁÐµÄÐÎÊ½£¬À´¹ÜÀíÊäÈëÊä³ö£¬ ¼´Ä£ÐÍÈçÄÜ¸ù¾Ý ¡¸ËùÓÐ×ÔÈ»³£ÊýµÄµ¼ÊýÊÇ0£¬ 0µÄcosÊÇ1 £¬¡¹Ëã³öºóÃæµÄ¾ä×ÓÓ¦¸ÃÊÇ¡¸ ËÄ¸ö1Ïà¼ÓµÄ½×³ËÊÇ4£¬ 4µÄ½×³ËÊÇ24¡¹Ò²¾ÍÑ§»áÁË¶þÊ®ËÄµã¡£ Ä£ÐÍÔÚÑµÁ·ÉÏÖ»×öÁË²Â²âÓïÑÔÐòÁÐµÄÈÎÎñ£¬ µ«»á¼æÍ¨ÍòÎï¡£; Õâ¸öÂëÊ«Ä£ÐÍ¾ÍÊÇÕâÃ´À´µÄ£¬ ÑµÁ·ÈÎÎñ£¬ ÊÇÊäÈë0~10À´¸ö¹Ø¼ü´Ê+²ØÍ·±êÌâ+²ØÍ·×ÖÊý+°ÑÍ·»»³É·ÖÀà·û[CLS]Ö®ºóµÄÊ«¾ä¡£; ¸ÐÐ»liangtongtÖ¸³öInference ´úÂëÔËÐÐÊ±¿ÉÄÜ»á·¢ÉúµÄbug.; ´ó¼ÒÏÂÁËÄ£ÐÍ,¿ÉÒÔ×Ô¼ºÍæË£¡£
È´Ò²¿ÉÒÔ³¢³¢ÎÒÌæ´ó¼ÒÕªµÄÓ£ÌÒ?",
ner-gene-dna-rna-jnlpba-pubmed,Token Classification,PyTorch; Transformers,English,apache-2.0,,5,jnlpba,101,498.5898109,,https://huggingface.co/raynardj/ner-gene-dna-rna-jnlpba-pubmed,"The model was trained on jnlpba dataset, pretrained on this pubmed-pretrained roberta model; All the labels, the possible token classes.; Notice, we removed the 'B-','I-' etc from data label.?; And here is to make your output more consecutive ??; check our NER model on",Natural Language Processing
SciFive-large-Pubmed_PMC,Text Classification,PyTorch; TensorFlow; Transformers,English,,https://arxiv.org/pdf/2106.03598.pdf,9,pubmed; pmc/open_access,363,6043.766018,,https://huggingface.co/razent/SciFive-large-Pubmed_PMC,"Paper: SciFive: a text-to-text transformer model for biomedical literature; Authors: Long N. Phan, James T. Anibal, Hieu Tran, Shaurya Chanana, Erol Bahadroglu, Alec Peltekian, Gr¨¦goire Altan-Bonnet; For more details, do check out our Github repo. ",Natural Language Processing
openai-clip-js,,ONNX,,,,6,,0,760.5312057,1,https://huggingface.co/rocca/openai-clip-js,"Info here: https://github.com/josephrocca/openai-clip-js; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
query_wellformedness_score,Text Classification,PyTorch; JAX; Transformers,,apache-2.0,,6,google_wellformed_query,3755802,1001.233476,,https://huggingface.co/salesken/query_wellformedness_score,"This model evaluates the wellformedness (non-fragment, grammatically correct)  score of a sentence. Model is case-sensitive and penalises for incorrect case and grammar as well. ; ['She is presenting a paper tomorrow','she is presenting a paper tomorrow','She present paper today']; [[0.8917],[0.4270],[0.0134]]",Natural Language Processing
rudalle-Emojich,,PyTorch,,,,11,,0,2682.883555,,https://huggingface.co/ai-forever/rudalle-Emojich,"; Model was trained by Sber AI; ; ? Emojich is a 1.3 billion params model from the family GPT3-like, it generates emoji-style images with the brain of ? Malevich.; The main goal of fine-tuning is trying to keep the generalization of ruDALL-E Malevich (XL)
model on text to emoji tasks. ruDALL-E Malevich is a multi-modality big pretrained transformer, that uses images and texts.
The idea with freezing feedforward and self-attention layers in pretrained transformer is demonstrated high performance in changing different modalities.
Also, the model has a good chance for over-fitting text modality and lost generalization. 
To deal with this problem is increased coefficient 10^3 in weighted cross-entropy loss for image codebooks part. ",
rugpt3large_based_on_gpt2,Text Generation,PyTorch; JAX; Transformers,Russian,,,47,,9677,6331.301525,3,https://huggingface.co/ai-forever/rugpt3large_based_on_gpt2,Model was trained with sequence length 1024 using transformers lib by SberDevices team on 80B tokens for 3 epochs. After that model was finetuned 1 epoch with sequence length 2048. ; Total training time was around 14 days on 128 GPUs for 1024 context and few days on 16 GPUs for 2048 context.Final perplexity on test set is 13.6.,Natural Language Processing
rugpt3medium_based_on_gpt2,,PyTorch; Transformers,Russian,,,12,,1452,1774.401471,1,https://huggingface.co/ai-forever/rugpt3medium_based_on_gpt2,"Model was trained with sequence length 1024 using transformers lib by SberDevices team on 80B tokens for 3 epoch. After that model was finetuned on 2048 context.; Total training time was around 16 days on 64 GPUs.Final perplexity on test set is 17.4.; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
sbert_large_nlu_ru,Feature Extraction,PyTorch; JAX; Transformers,Russian,,,19,,7807,3503.863297,,https://huggingface.co/ai-forever/sbert_large_nlu_ru,"The model is described in this articleFor better quality, use mean token embeddings.; You can use the model directly from the model repository to compute sentence embeddings:",Multimodel
polish-roberta-large-v2,Fill-Mask,PyTorch; Safetensors; Transformers,Polish,lgpl-3.0,,4,,582,3572.112457,1,https://huggingface.co/sdadas/polish-roberta-large-v2,,Natural Language Processing
distilbert-dot-tas_b-b256-msmarco,Feature Extraction,PyTorch; Transformers,English,,https://arxiv.org/pdf/2104.06967.pdf,19,ms_marco,10541,265.2610588,2,https://huggingface.co/sebastian-hofstaetter/distilbert-dot-tas_b-b256-msmarco,"We provide a retrieval trained DistilBert-based model (we call the dual-encoder then dot-product scoring architecture BERT_Dot) trained with Balanced Topic Aware Sampling on MSMARCO-Passage.; This instance was trained with a batch size of 256 and can be used to re-rank a candidate set or directly for a vector index based dense retrieval. The architecture is a 6-layer DistilBERT, without architecture additions or modifications (we only change the weights during training) - to receive a query/passage representation we pool the CLS vector. We use the same BERT layers for both query and passage encoding (yields better results, and lowers memory requirements).; If you want to know more about our efficient (can be done on a single consumer GPU in 48 hours) batch composition procedure and dual supervision for dense retrieval training, check out our paper: https://arxiv.org/abs/2104.06967 ?; For more information and a minimal usage example please visit: https://github.com/sebastian-hofstaetter/tas-balanced-dense-retrieval; We trained our model on the MSMARCO standard (""small""-400K query) training triples re-sampled with our TAS-B method. As teacher models we used the BERT_CAT pairwise scores as well as the ColBERT model for in-batch-negative signals published here: https://github.com/sebastian-hofstaetter/neural-ranking-kd",Multimodel
LaBSE,Sentence Similarity,PyTorch; TensorFlow; JAX; Sentence Transformers; Transformers,,apache-2.0,,71,,53019,5790.203827,8,https://huggingface.co/sentence-transformers/LaBSE,"This is a port of the LaBSE model to PyTorch. It can be used to map 109 languages to a shared vector space.; Using this model becomes easy when you have sentence-transformers installed:; Then you can use the model like this:; For an automated evaluation of this model, see the Sentence Embeddings Benchmark: https://seb.sbert.net; Have a look at LaBSE for the respective publication that describes LaBSE.",Natural Language Processing
clip-ViT-B-32,Sentence Similarity,Sentence Transformers,,,https://arxiv.org/pdf/2103.00020.pdf,27,,0,0.002720947,1,https://huggingface.co/sentence-transformers/clip-ViT-B-32,"This is the Image & Text model CLIP, which maps text and images to a shared vector space. For applications of the models, have a look in our documentation SBERT.net - Image Search; After installing sentence-transformers (pip install sentence-transformers), the usage of this model is easy:; See our SBERT.net - Image Search documentation for more examples how the model can be used for image search, zero-shot image classification, image clustering and image deduplication.; In the following table we find the zero-shot ImageNet validation set accuracy:; For a multilingual version of the CLIP model for 50+ languages have a look at: clip-ViT-B-32-multilingual-v1",Natural Language Processing
distilbert-base-nli-stsb-mean-tokens,Sentence Similarity,PyTorch; TensorFlow; Sentence Transformers; Transformers,,apache-2.0,https://arxiv.org/pdf/1908.10084.pdf,10,,47551,531.6873886,8,https://huggingface.co/sentence-transformers/distilbert-base-nli-stsb-mean-tokens,"?? This model is deprecated. Please don't use it as it produces sentence embeddings of low quality. You can find recommended sentence embedding models here: SBERT.net - Pretrained Models; This is a sentence-transformers model: It maps sentences & paragraphs to a 768 dimensional dense vector space and can be used for tasks like clustering or semantic search.; Using this model becomes easy when you have sentence-transformers installed:; Then you can use the model like this:; Without sentence-transformers, you can use the model like this: First, you pass your input through the transformer model, then you have to apply the right pooling-operation on-top of the contextualized word embeddings.",Natural Language Processing
gtr-t5-base,Sentence Similarity,PyTorch; Sentence Transformers; Transformers,English,apache-2.0,https://arxiv.org/pdf/2112.07899.pdf,9,,3264,221.2606782,3,https://huggingface.co/sentence-transformers/gtr-t5-base,"This is a sentence-transformers model: It maps sentences & paragraphs to a 768 dimensional dense vector space. The model was specifically trained for the task of sematic search.; This model was converted from the Tensorflow model gtr-base-1 to PyTorch. When using this model, have a look at the publication: Large Dual Encoders Are Generalizable Retrievers. The tfhub model and this PyTorch model can produce slightly different embeddings, however, when run on the same benchmarks, they produce identical results.; The model uses only the encoder from a T5-base model. The weights are stored in FP16.  ; Using this model becomes easy when you have sentence-transformers installed:; Then you can use the model like this:",Natural Language Processing
gtr-t5-xxl,Sentence Similarity,PyTorch; Sentence Transformers; Transformers,English,apache-2.0,https://arxiv.org/pdf/2112.07899.pdf,17,,586,9965.692013,3,https://huggingface.co/sentence-transformers/gtr-t5-xxl,"This is a sentence-transformers model: It maps sentences & paragraphs to a 768 dimensional dense vector space. The model was specifically trained for the task of sematic search.; This model was converted from the Tensorflow model gtr-xxl-1 to PyTorch. When using this model, have a look at the publication: Large Dual Encoders Are Generalizable Retrievers. The tfhub model and this PyTorch model can produce slightly different embeddings, however, when run on the same benchmarks, they produce identical results.; The model uses only the encoder from a T5-11B model. The weights are stored in FP16.  ; Using this model becomes easy when you have sentence-transformers installed:; Then you can use the model like this:",Natural Language Processing
msmarco-MiniLM-L6-cos-v5,Sentence Similarity,PyTorch; TensorFlow; JAX; Sentence Transformers; Transformers,,,https://arxiv.org/pdf/1908.10084.pdf,6,,9802,273.4893978,,https://huggingface.co/sentence-transformers/msmarco-MiniLM-L6-cos-v5,"This is a sentence-transformers model: It maps sentences & paragraphs to a 384 dimensional dense vector space and was designed for semantic search. It has been trained on 500k (query, answer) pairs from the MS MARCO Passages dataset. For an introduction to semantic search, have a look at: SBERT.net - Semantic Search; Using this model becomes easy when you have sentence-transformers installed:; Then you can use the model like this:; Without sentence-transformers, you can use the model like this: First, you pass your input through the transformer model, then you have to apply the correct pooling-operation on-top of the contextualized word embeddings.; In the following some technical details how this model must be used:",Natural Language Processing
msmarco-distilbert-base-tas-b,Sentence Similarity,PyTorch; TensorFlow; Sentence Transformers; Transformers,English,apache-2.0,,18,ms_marco,25064,531.6877315,4,https://huggingface.co/sentence-transformers/msmarco-distilbert-base-tas-b,"This is a port of the DistilBert TAS-B Model to sentence-transformers model: It maps sentences & paragraphs to a 768 dimensional dense vector space and is optimized for the task of semantic search.; Using this model becomes easy when you have sentence-transformers installed:; Then you can use the model like this:; Without sentence-transformers, you can use the model like this: First, you pass your input through the transformer model, then you have to apply the right pooling-operation on-top of the contextualized word embeddings.; For an automated evaluation of this model, see the Sentence Embeddings Benchmark: https://seb.sbert.net",Natural Language Processing
multi-qa-MiniLM-L6-cos-v1,Sentence Similarity,PyTorch; TensorFlow; Sentence Transformers,,,,66,flax-sentence-embeddings/stackexchange_xml; ms_marco; gooaq; yahoo_answers_topics; search_qa; eli5; natural_questions; trivia_qa; embedding-data/QQP; embedding-data/PAQ_pairs; embedding-data/Amazon-QA; embedding-data/WikiAnswers,180485,182.6335026,12,https://huggingface.co/sentence-transformers/multi-qa-MiniLM-L6-cos-v1,"This is a sentence-transformers model: It maps sentences & paragraphs to a 384 dimensional dense vector space and was designed for semantic search. It has been trained on 215M (question, answer) pairs from diverse sources. For an introduction to semantic search, have a look at: SBERT.net - Semantic Search; Using this model becomes easy when you have sentence-transformers installed:; Then you can use the model like this:; Without sentence-transformers, you can use the model like this: First, you pass your input through the transformer model, then you have to apply the correct pooling-operation on-top of the contextualized word embeddings.; Similarly to the PyTorch example above, to use the model with TensorFlow you pass your input through the transformer model, then you have to apply the correct pooling-operation on-top of the contextualized word embeddings.",Natural Language Processing
multi-qa-distilbert-cos-v1,Sentence Similarity,PyTorch; Sentence Transformers,,,,12,flax-sentence-embeddings/stackexchange_xml; ms_marco; gooaq; yahoo_answers_topics; search_qa; eli5; natural_questions; trivia_qa; embedding-data/QQP; embedding-data/PAQ_pairs; embedding-data/Amazon-QA; embedding-data/WikiAnswers,19620,265.7313778,,https://huggingface.co/sentence-transformers/multi-qa-distilbert-cos-v1,"This is a sentence-transformers model: It maps sentences & paragraphs to a 768 dimensional dense vector space and was designed for semantic search. It has been trained on 215M (question, answer) pairs from diverse sources. For an introduction to semantic search, have a look at: SBERT.net - Semantic Search; Using this model becomes easy when you have sentence-transformers installed:; Then you can use the model like this:; Without sentence-transformers, you can use the model like this: First, you pass your input through the transformer model, then you have to apply the correct pooling-operation on-top of the contextualized word embeddings.; In the following some technical details how this model must be used:",Natural Language Processing
LaBSE,Feature Extraction,PyTorch; TensorFlow; JAX; Safetensors; Transformers,109 languages,apache-2.0,https://arxiv.org/pdf/2007.01852.pdf,36,CommonCrawl; Wikipedia,8049,7719.305802,6,https://huggingface.co/setu4993/LaBSE,"Language-agnostic BERT Sentence Encoder (LaBSE) is a BERT-based model trained for sentence embedding for 109 languages. The pre-training process combines masked language modeling with translation language modeling. The model is useful for getting multilingual sentence embeddings and for bi-text retrieval.; This is migrated from the v2 model on the TF Hub, which uses dict-based input. The embeddings produced by both the versions of the model are equivalent.; Using the model:; To get the sentence embeddings, use the pooler output:; Output for other languages:",Multimodel
smaller-LaBSE,Feature Extraction,PyTorch; TensorFlow; JAX; Safetensors; Transformers,15 languages,apache-2.0,https://arxiv.org/pdf/2010.05609.pdf; https://arxiv.org/pdf/2007.01852.pdf,10,CommonCrawl; Wikipedia,2183,3513.785681,,https://huggingface.co/setu4993/smaller-LaBSE,"Smaller Language-agnostic BERT Sentence Encoder (LaBSE) is a BERT-based model distilled from the original LaBSE model to 15 languages (from the original 109 languages) using the techniques described in the paper 'Load What You Need: Smaller Versions of Multilingual BERT' by Ukjae Jeong.; Using the model:; To get the sentence embeddings, use the pooler output:; Output for other languages:; For similarity between sentences, an L2-norm is recommended before calculating the similarity:",Multimodel
bert-multitask-query-classifiers,Text Classification,PyTorch; Transformers,,,,4,,185,45.39175343,,https://huggingface.co/shahrukhx01/bert-multitask-query-classifiers,"Quora Keyword Pairs: https://www.kaggle.com/stefanondisponibile/quora-question-keyword-pairs
Spaadia SQuaD pairs: https://www.kaggle.com/shahrukhkhan/questions-vs-statementsclassificationdataset; Medium article; Colab Notebook Multi-task Query classifiers",Natural Language Processing
macbert4csc-base-chinese,Fill-Mask,PyTorch; Safetensors; Transformers,Chinese,apache-2.0,https://arxiv.org/pdf/2004.13922.pdf,43,,37719,818.2514425,2,https://huggingface.co/shibing624/macbert4csc-base-chinese,ÖÐÎÄÆ´Ð´¾À´íÄ£ÐÍ; macbert4csc-base-chinese evaluate SIGHAN2015 test data£º; ÓÉÓÚÑµÁ·Ê¹ÓÃµÄÊý¾ÝÊ¹ÓÃÁËSIGHAN2015µÄÑµÁ·¼¯£¨¸´ÏÖpaper£©£¬ÔÚSIGHAN2015µÄ²âÊÔ¼¯ÉÏ´ïµ½SOTAË®Æ½¡£; Ä£ÐÍ½á¹¹£¬Ä§¸ÄÓÚsoftmaskedbert£º; ,Natural Language Processing
bart_summarisation,Summarization,PyTorch; Transformers,English,apache-2.0,,33,samsum,36679,1671.89483,,https://huggingface.co/slauw87/bart_summarisation,"This model was trained using Amazon SageMaker and the new Hugging Face Deep Learning container.
For more information look at:; }",Natural Language Processing
t5-base-japanese,Feature Extraction,PyTorch; JAX; Transformers,Japanese,cc-by-sa-4.0,,26,wikipedia; oscar; cc100,9551,1784.795129,1,https://huggingface.co/sonoisa/t5-base-japanese,"This is a T5 (Text-to-Text Transfer Transformer) model pretrained on Japanese corpus.; ´Î¤ÎÈÕ±¾ÕZ¥³©`¥Ñ¥¹£¨¼s100GB£©¤òÓÃ¤¤¤ÆÊÂÇ°Ñ§Á¤òÐÐ¤Ã¤¿T5 (Text-to-Text Transfer Transformer) ¥â¥Ç¥ë¤Ç¤¹¡£  ; ¤³¤Î¥â¥Ç¥ë¤ÏÊÂÇ°Ñ§Á¤Î¤ß¤òÐÐ¤Ê¤Ã¤¿¤â¤Î¤Ç¤¢¤ê¡¢ÌØ¶¨¤Î¥¿¥¹¥¯¤ËÀûÓÃ¤¹¤ë¤Ë¤Ï¥Õ¥¡¥¤¥ó¥Á¥å©`¥Ë¥ó¥°¤¹¤ë±ØÒª¤¬¤¢¤ê¤Þ¤¹¡£±¾¥â¥Ç¥ë¤Ë¤â¡¢´óÒÄ£¥³©`¥Ñ¥¹¤òÓÃ¤¤¤¿ÑÔÕZ¥â¥Ç¥ë¤Ë¤Ä¤­¤Þ¤È¤¦¡¢Ñ§Á¥Ç©`¥¿¤ÎÄÚÈÝ¤ÎÆ«¤ê¤ËÓÉÀ´¤¹¤ëÆ«¤Ã¤¿£¨ÀíµÄ¤Ç¤Ï¤Ê¤«¤Ã¤¿¤ê¡¢ÓÐº¦¤À¤Ã¤¿¤ê¡¢¥Ð¥¤¥¢¥¹¤¬¤¢¤Ã¤¿¤ê¤¹¤ë£©³öÁ¦½Y¹û¤Ë¤Ê¤ëî}¤¬Ç±ÔÚµÄ¤Ë¤¢¤ê¤Þ¤¹¡£
¤³¤Îî}¤¬°kÉú¤·¤¦¤ë¤³¤È¤òÏë¶¨¤·¤¿ÉÏ¤Ç¡¢±»º¦¤¬°kÉú¤·¤Ê¤¤ÓÃÍ¾¤Ë¤Î¤ßÀûÓÃ¤¹¤ë¤è¤¦Ý¤ò¤Ä¤±¤Æ¤¯¤À¤µ¤¤¡£; SentencePiece¥È©`¥¯¥Ê¥¤¥¶©`¤ÎÑ§Á¤Ë¤ÏÉÏÓWikipedia¤ÎÈ«¥Ç©`¥¿¤òÓÃ¤¤¤Þ¤·¤¿¡£; https://github.com/sonoisa/t5-japanese",Multimodel
en_core_web_sm,Token Classification,spaCy,English,mit,,22,,1139,12.90449665,6,https://huggingface.co/spacy/en_core_web_sm,"English pipeline optimized for CPU. Components: tok2vec, tagger, parser, senter, ner, attribute_ruler, lemmatizer.",Natural Language Processing
wav2vec2-2-bert-large-no-adapter-frozen-enc,Automatic Speech Recognition,PyTorch; TensorBoard; Transformers,,,,2,librispeech_asr,32,3083.827871,,https://huggingface.co/speech-seq2seq/wav2vec2-2-bert-large-no-adapter-frozen-enc,"This model was trained from scratch on the librispeech_asr dataset.
It achieves the following results on the evaluation set:; More information needed; More information needed; More information needed; The following hyperparameters were used during training:",Audio
asr-wav2vec2-transformer-aishell,Automatic Speech Recognition,speechbrain; PyTorch,English,apache-2.0,https://arxiv.org/pdf/2106.04624.pdf,6,aishell,40,1358.108806,,https://huggingface.co/speechbrain/asr-wav2vec2-transformer-aishell,"This repository provides all the necessary tools to perform automatic speech
recognition from an end-to-end system pretrained on AISHELL +wav2vec2 (Mandarin Chinese)
within SpeechBrain. For a better experience, we encourage you to learn more about
SpeechBrain.; The performance of the model is the following:; This ASR system is composed of 2 different but linked blocks:; To Train this system from scratch, see our SpeechBrain recipe.; The system is trained with recordings sampled at 16kHz (single channel).
The code will automatically normalize your audio (i.e., resampling + mono channel selection) when calling transcribe_file if needed.",Audio
lang-id-voxlingua107-ecapa,Audio Classification,speechbrain; PyTorch,108 languages,apache-2.0,https://arxiv.org/pdf/2106.04624.pdf,33,VoxLingua107,3524,85.25976543,2,https://huggingface.co/speechbrain/lang-id-voxlingua107-ecapa,"This is a spoken language recognition model trained on the VoxLingua107 dataset using SpeechBrain.
The model uses the ECAPA-TDNN architecture that has previously been used for speaker recognition. However, it uses
more fully connected hidden layers after the embedding layer, and cross-entropy loss was used for training. 
We observed that this improved the performance of extracted utterance embeddings for downstream tasks.; The system is trained with recordings sampled at 16kHz (single channel).
The code will automatically normalize your audio (i.e., resampling + mono channel selection) when calling classify_file if needed.; The model can classify a speech utterance according to the language spoken.
It covers 107 different languages (
Abkhazian, 
Afrikaans, 
Amharic, 
Arabic, 
Assamese, 
Azerbaijani, 
Bashkir, 
Belarusian, 
Bulgarian, 
Bengali, 
Tibetan, 
Breton, 
Bosnian, 
Catalan, 
Cebuano, 
Czech, 
Welsh, 
Danish, 
German, 
Greek, 
English, 
Esperanto, 
Spanish, 
Estonian, 
Basque, 
Persian, 
Finnish, 
Faroese, 
French, 
Galician, 
Guarani, 
Gujarati, 
Manx, 
Hausa, 
Hawaiian, 
Hindi, 
Croatian, 
Haitian, 
Hungarian, 
Armenian, 
Interlingua, 
Indonesian, 
Icelandic, 
Italian, 
Hebrew, 
Japanese, 
Javanese, 
Georgian, 
Kazakh, 
Central Khmer, 
Kannada, 
Korean, 
Latin, 
Luxembourgish, 
Lingala, 
Lao, 
Lithuanian, 
Latvian, 
Malagasy, 
Maori, 
Macedonian, 
Malayalam, 
Mongolian, 
Marathi, 
Malay, 
Maltese, 
Burmese, 
Nepali, 
Dutch, 
Norwegian Nynorsk, 
Norwegian, 
Occitan, 
Panjabi, 
Polish, 
Pushto, 
Portuguese, 
Romanian, 
Russian, 
Sanskrit, 
Scots, 
Sindhi, 
Sinhala, 
Slovak, 
Slovenian, 
Shona, 
Somali, 
Albanian, 
Serbian, 
Sundanese, 
Swedish, 
Swahili, 
Tamil, 
Telugu, 
Tajik, 
Thai, 
Turkmen, 
Tagalog, 
Turkish, 
Tatar, 
Ukrainian, 
Urdu, 
Uzbek, 
Vietnamese, 
Waray, 
Yiddish, 
Yoruba, 
Mandarin Chinese).; The model has two uses:; The model is trained on automatically collected YouTube data. For more 
information about the dataset, see here.",Audio
metricgan-plus-voicebank,Audio-to-Audio,speechbrain,English,apache-2.0,https://arxiv.org/pdf/2106.04624.pdf,27,Voicebank; DEMAND,5249,7.865350113,24,https://huggingface.co/speechbrain/metricgan-plus-voicebank,"This repository provides all the necessary tools to perform enhancement with
SpeechBrain. For a better experience we encourage you to learn more about
SpeechBrain. The model performance is:; First of all, please install SpeechBrain with the following command:; Please notice that we encourage you to read our tutorials and learn more about
SpeechBrain.; To use the mimic-loss-trained model for enhancement, use the following simple code:; The system is trained with recordings sampled at 16kHz (single channel).
The code will automatically normalize your audio (i.e., resampling + mono channel selection) when calling enhance_file if needed. Make sure your input tensor is compliant with the expected sampling rate if you use enhance_batch as in the example.",Audio
sepformer-wham-enhancement,Audio-to-Audio,speechbrain; PyTorch,English,apache-2.0,https://arxiv.org/pdf/2010.13154.pdf; https://arxiv.org/pdf/2106.04624.pdf,6,WHAM!,221,318.2064217,,https://huggingface.co/speechbrain/sepformer-wham-enhancement,"This repository provides all the necessary tools to perform speech enhancement (denoising) with a SepFormer model, implemented with SpeechBrain, and pretrained on WHAM! dataset with 8k sampling frequency, which is basically a version of WSJ0-Mix dataset with environmental noise and reverberation in 8k. For a better experience we encourage you to learn more about SpeechBrain. The given model performance is 14.35 dB SI-SNR on the test set of WHAM! dataset.; First of all, please install SpeechBrain with the following command:; Please notice that we encourage you to read our tutorials and learn more about SpeechBrain.; To perform inference on the GPU, add  run_opts={""device"":""cuda""}  when calling the from_hparams method.; The training script is currently being worked on an ongoing pull-request. ",Audio
CoreNLP,,,English,gpl-2.0,,17,,0,506.0014839,,https://huggingface.co/stanfordnlp/CoreNLP,"CoreNLP is your one stop shop for natural language processing in Java! CoreNLP enables users to derive linguistic annotations for text, including token and sentence boundaries, parts of speech, named entities, numeric and time values, dependency and constituency parses, coreference, sentiment, quote attributions, and relations.
Find more about it in our website and our GitHub repository.; This card and repo were automatically prepared with hugging_corenlp.py in the stanfordnlp/huggingface-models repo; Last updated 2023-03-16 01:06:26.193; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
stanza-id,Token Classification,Stanza,Indonesian,apache-2.0,,1,,282,0.001803703,,https://huggingface.co/stanfordnlp/stanza-id,"Stanza is a collection of accurate and efficient tools for the linguistic analysis of many human languages. Starting from raw text to syntactic analysis and entity recognition, Stanza brings state-of-the-art NLP models to languages of your choosing.
Find more about it in our website and our GitHub repository.; This card and repo were automatically prepared with hugging_stanza.py in the stanfordnlp/huggingface-models repo; Last updated 2023-05-26 18:04:22.253",Natural Language Processing
codeparrot,Text Generation,PyTorch; TensorBoard; Transformers,,,,4,,59,6319.667446,,https://huggingface.co/transformersbook/codeparrot,CodeParrot (large) is a 1.5B parameter GPT-2 model trained on the CodeParrot Python code dataset. The model is trained in Chapter 10: Training Transformers from Scratch in the NLP with Transformers book. You can find the full code in the accompanying Github repository.,Natural Language Processing
distilbert-base-uncased-mnli,Zero-Shot Classification,PyTorch; TensorFlow; Safetensors; Transformers,English,,https://arxiv.org/pdf/1910.09700.pdf; https://arxiv.org/pdf/2105.09680.pdf,29,multi_nli,94007,804.2643747,5,https://huggingface.co/typeform/distilbert-base-uncased-mnli,"Model Description:  This is the uncased DistilBERT model fine-tuned on Multi-Genre Natural Language Inference (MNLI) dataset for the zero-shot classification task. ; This model can be used for text classification tasks.; CONTENT WARNING: Readers should be aware this section contains content that is disturbing, offensive, and can propagate historical and current stereotypes.; Significant research has explored bias and fairness issues with language models (see, e.g., Sheng et al. (2021) and Bender et al. (2021)).; This model of DistilBERT-uncased is pretrained on the Multi-Genre Natural Language Inference (MultiNLI) corpus. It is a crowd-sourced collection of 433k sentence pairs annotated with textual entailment information. The corpus covers a range of genres of spoken and written text, and supports a distinctive cross-genre generalization evaluation.",Natural Language Processing
chinese_roberta_L-12_H-768,Fill-Mask,PyTorch; TensorFlow; JAX; Transformers,Chinese,,https://arxiv.org/pdf/1909.05658.pdf; https://arxiv.org/pdf/1908.08962.pdf,8,CLUECorpusSmall,704,1296.118756,,https://huggingface.co/uer/chinese_roberta_L-12_H-768,"This is the set of 24 Chinese RoBERTa models pre-trained by UER-py, which is introduced in this paper.; Turc et al. have shown that the standard BERT recipe is effective on a wide range of model sizes. Following their paper, we released the 24 Chinese RoBERTa models. In order to facilitate users to reproduce the results, we used the publicly available corpus and provided all training details.; You can download the 24 Chinese RoBERTa miniatures either from the UER-py Modelzoo page, or via HuggingFace from the links below:; Here are scores on the devlopment set of six Chinese tasks:; For each task, we selected the best fine-tuning hyperparameters from the lists below, and trained with the sequence length of 128:",Natural Language Processing
roberta-base-finetuned-dianping-chinese,Text Classification,PyTorch; TensorFlow; JAX; Transformers,Chinese,,https://arxiv.org/pdf/1909.05658.pdf; https://arxiv.org/pdf/1708.02657.pdf,15,,2139,1227.114154,,https://huggingface.co/uer/roberta-base-finetuned-dianping-chinese,"This is the set of 5 Chinese RoBERTa-Base classification models fine-tuned by UER-py. You can download the 5 Chinese RoBERTa-Base classification models either from the UER-py Modelzoo page (in UER-py format), or via HuggingFace from the links below:; You can use this model directly with a pipeline for text classification (take the case of roberta-base-finetuned-chinanews-chinese):; 5 Chinese text classification datasets are used. JD full, JD binary, and Dianping datasets consist of user reviews of different sentiment polarities. Ifeng and Chinanews consist of first paragraphs of news articles of different topic classes. They are collected by Glyph project and more details are discussed in corresponding paper.; Models are fine-tuned by UER-py on Tencent Cloud. We fine-tune three epochs with a sequence length of 512 on the basis of the pre-trained model chinese_roberta_L-12_H-768. At the end of each epoch, the model is saved when the best performance on development set is achieved. We use the same hyper-parameters on different models.; Taking the case of roberta-base-finetuned-chinanews-chinese",Natural Language Processing
roberta-base-finetuned-jd-binary-chinese,Text Classification,PyTorch; TensorFlow; JAX; Transformers,Chinese,,https://arxiv.org/pdf/1909.05658.pdf; https://arxiv.org/pdf/1708.02657.pdf,14,,735,1227.114154,1,https://huggingface.co/uer/roberta-base-finetuned-jd-binary-chinese,"This is the set of 5 Chinese RoBERTa-Base classification models fine-tuned by UER-py. You can download the 5 Chinese RoBERTa-Base classification models either from the UER-py Modelzoo page (in UER-py format), or via HuggingFace from the links below:; You can use this model directly with a pipeline for text classification (take the case of roberta-base-finetuned-chinanews-chinese):; 5 Chinese text classification datasets are used. JD full, JD binary, and Dianping datasets consist of user reviews of different sentiment polarities. Ifeng and Chinanews consist of first paragraphs of news articles of different topic classes. They are collected by Glyph project and more details are discussed in corresponding paper.; Models are fine-tuned by UER-py on Tencent Cloud. We fine-tune three epochs with a sequence length of 512 on the basis of the pre-trained model chinese_roberta_L-12_H-768. At the end of each epoch, the model is saved when the best performance on development set is achieved. We use the same hyper-parameters on different models.; Taking the case of roberta-base-finetuned-chinanews-chinese",Natural Language Processing
gottbert-base,Fill-Mask,PyTorch; JAX; Safetensors; Transformers,,,https://arxiv.org/pdf/2012.02110.pdf,12,,1133,1519.496451,2,https://huggingface.co/uklfr/gottbert-base,"BERT model trained solely on the German portion of the OSCAR data set.; Paper: GottBERT: a pure German Language Model; Authors: Raphael Scheible, Fabian Thomczyk, Patric Tippmann, Victor Jaravine, Martin Boeker",Natural Language Processing
toxic-bert,Text Classification,PyTorch; JAX; Transformers,,,https://arxiv.org/pdf/1703.04009.pdf; https://arxiv.org/pdf/1905.12516.pdf,65,,27677,876.2388214,9,https://huggingface.co/unitary/toxic-bert,"?? Disclaimer:
The huggingface models currently give different results to the detoxify library (see issue here). For the most up to date models we recommend using the models from https://github.com/unitaryai/detoxify; 
; ; Trained models & code to predict toxic comments on 3 Jigsaw challenges: Toxic comment classification, Unintended?Bias in Toxic comments, Multilingual toxic comment classification.; Built by Laura Hanu at Unitary, where we are working to stop harmful content online by interpreting visual content in context. ",Natural Language Processing
t5-base-e2e-qg,Text2Text Generation,PyTorch; Transformers,,mit,https://arxiv.org/pdf/1910.10683.pdf,18,squad,231191,892.7794897,1,https://huggingface.co/valhalla/t5-base-e2e-qg,"This is t5-base model trained for end-to-end question generation task. Simply input the text and the model will generate multile questions. ; You can play with the model using the inference API, just put the text and see the results!; For more deatils see this repo.; You'll need to clone the repo.; ",Natural Language Processing
en_readability,Text Classification,spaCy,English,,,6,,63,6.405283203,,https://huggingface.co/valurank/en_readability,A Spacy pipeline for generating readability scores,Natural Language Processing
flax-bigbird-natural-questions,,JAX; Transformers,English,apache-2.0,,2,natural_questions,6,603.3309973,2,https://huggingface.co/vasudevgupta/flax-bigbird-natural-questions,"This checkpoint is obtained after training FlaxBigBirdForQuestionAnswering (with extra pooler head) on natural_questions dataset on TPU v3-8. This dataset takes around ~100 GB on disk. But thanks to Cloud TPUs and Jax, each epoch took just 4.5 hours. Script for training can be found here: https://github.com/vasudevgupta7/bigbird; Use this model just like any other model from ?Transformers; In case you are interested in predicting category (null, long, short, yes, no) as well, use FlaxBigBirdForNaturalQuestions (instead of FlaxBigBirdForQuestionAnswering) from my training script.; Evaluation script: https://colab.research.google.com/github/vasudevgupta7/bigbird/blob/main/notebooks/evaluate-flax-natural-questions.ipynb; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
hinglish-bert,Fill-Mask,PyTorch; JAX; Safetensors; Transformers,,,,1,,74,2140.975781,,https://huggingface.co/nirantk/hinglish-bert,No model card; New: Create and edit this model card directly on the website!,Natural Language Processing
BART0,Text2Text Generation,PyTorch; Transformers,English,apache-2.0,,6,bigscience/P3,991,1671.711518,,https://huggingface.co/yuchenlin/BART0,"A BART-large version of T0. 
Please check https://inklab.usc.edu/ReCross/ for more details. ",Natural Language Processing
singbert-large-sg,,PyTorch; TensorFlow; JAX; Transformers,English,mit,,3,"reddit singapore, malaysia; hardwarezone",31,4260.06632,,https://huggingface.co/zanelim/singbert-large-sg,"SingBert Large - Bert for Singlish (SG) and Manglish (MY).; Similar to SingBert but the large version, which was initialized from BERT large uncased (whole word masking), with pre-training finetuned on
singlish and manglish data.; Here is how to use this model to get the features of a given text in PyTorch:; and in TensorFlow:; This model was finetuned on colloquial Singlish and Manglish corpus, hence it is best applied on downstream tasks involving the main
constituent languages- english, mandarin, malay. Also, as the training data is mainly from forums, beware of existing inherent bias.",
dit-base,,PyTorch; Transformers,,,https://arxiv.org/pdf/2203.02378.pdf,7,,27323,369.0055419,,https://huggingface.co/microsoft/dit-base,"Document Image Transformer (DiT) model pre-trained on IIT-CDIP (Lewis et al., 2006), a dataset that includes 42 million document images. It was introduced in the paper DiT: Self-supervised Pre-training for Document Image Transformer by Li et al. and first released in this repository. Note that DiT is identical to the architecture of BEiT. ; Disclaimer: The team releasing DiT did not write a model card for this model so this model card has been written by the Hugging Face team.; The Document Image Transformer (DiT) is a transformer encoder model (BERT-like) pre-trained on a large collection of images in a self-supervised fashion. The pre-training objective for the model is to predict visual tokens from the encoder of a discrete VAE (dVAE), based on masked patches.; Images are presented to the model as a sequence of fixed-size patches (resolution 16x16), which are linearly embedded. One also adds absolute position embeddings before feeding the sequence to the layers of the Transformer encoder.; By pre-training the model, it learns an inner representation of images that can then be used to extract features useful for downstream tasks: if you have a dataset of labeled document images for instance, you can train a standard classifier by placing a linear layer on top of the pre-trained encoder.",
dit-large,,PyTorch; Transformers,,,https://arxiv.org/pdf/2203.02378.pdf,7,,448,1280.005542,,https://huggingface.co/microsoft/dit-large,"Document Image Transformer (DiT) model pre-trained on IIT-CDIP (Lewis et al., 2006), a dataset that includes 42 million document images. It was introduced in the paper DiT: Self-supervised Pre-training for Document Image Transformer by Li et al. and first released in this repository. Note that DiT is identical to the architecture of BEiT. ; Disclaimer: The team releasing DiT did not write a model card for this model so this model card has been written by the Hugging Face team.; The Document Image Transformer (DiT) is a transformer encoder model (BERT-like) pre-trained on a large collection of images in a self-supervised fashion. The pre-training objective for the model is to predict visual tokens from the encoder of a discrete VAE (dVAE), based on masked patches.; Images are presented to the model as a sequence of fixed-size patches (resolution 16x16), which are linearly embedded. One also adds absolute position embeddings before feeding the sequence to the layers of the Transformer encoder.; By pre-training the model, it learns an inner representation of images that can then be used to extract features useful for downstream tasks: if you have a dataset of labeled document images for instance, you can train a standard classifier by placing a linear layer on top of the pre-trained encoder.",
dit-base-finetuned-rvlcdip,Image Classification,PyTorch; Transformers,,,https://arxiv.org/pdf/2203.02378.pdf,16,rvl_cdip,6020,348.2966845,4,https://huggingface.co/microsoft/dit-base-finetuned-rvlcdip,"Document Image Transformer (DiT) model pre-trained on IIT-CDIP (Lewis et al., 2006), a dataset that includes 42 million document images and fine-tuned on RVL-CDIP, a dataset consisting of 400,000 grayscale images in 16 classes, with 25,000 images per class. It was introduced in the paper DiT: Self-supervised Pre-training for Document Image Transformer by Li et al. and first released in this repository. Note that DiT is identical to the architecture of BEiT. ; Disclaimer: The team releasing DiT did not write a model card for this model so this model card has been written by the Hugging Face team.; The Document Image Transformer (DiT) is a transformer encoder model (BERT-like) pre-trained on a large collection of images in a self-supervised fashion. The pre-training objective for the model is to predict visual tokens from the encoder of a discrete VAE (dVAE), based on masked patches.; Images are presented to the model as a sequence of fixed-size patches (resolution 16x16), which are linearly embedded. One also adds absolute position embeddings before feeding the sequence to the layers of the Transformer encoder.; By pre-training the model, it learns an inner representation of images that can then be used to extract features useful for downstream tasks: if you have a dataset of labeled document images for instance, you can train a standard classifier by placing a linear layer on top of the pre-trained encoder.",Computer Vision
Segmentation-of-Teeth-in-Panoramic-X-ray-Image-Using-U-Net,Image Segmentation,Keras,,,,4,SerdarHelli/SegmentationOfTeethPanoramicXRayImages,31,1.119306641,23,https://huggingface.co/SerdarHelli/Segmentation-of-Teeth-in-Panoramic-X-ray-Image-Using-U-Net,"The aim of this study is automatic semantic segmentation and measurement total length of teeth in one-shot panoramic x-ray image by using deep learning method with U-Net Model and binary image analysis in order to provide diagnostic information for the management of dental disorders, diseases, and conditions. ;  Github Link; Original Dataset; DATASET ref - 	H. Abdi, S. Kasaei, and M. Mehdizadeh, ¡°Automatic segmentation of mandible in panoramic x-ray,¡± J. Med. Imaging, vol. 2, no. 4, p. 44003, 2015; Link DATASET for only original images.",Computer Vision
trocr-handwritten-math,,PyTorch; Transformers,,,,3,,28,247.0057064,,https://huggingface.co/Azu/trocr-handwritten-math,"This model generate the math expression LATEX sequence according to the handwritten math expression image.; in CROHME 2014 test dataset CER=0.507772718700326; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
sentence-camembert-base,Sentence Similarity,PyTorch; Transformers,French,apache-2.0,https://arxiv.org/pdf/1908.10084.pdf,6,stsb_multi_mt,3903,445.2051061,1,https://huggingface.co/dangvantuan/sentence-camembert-base,"Model is Fine-tuned using pre-trained facebook/camembert-base and
Siamese BERT-Networks with 'sentences-transformers' on dataset stsb; The model can be used directly (without a language model) as follows:; The model can be evaluated as follows on the French test data of stsb.; Test Result: 
The performance is measured using Pearson and Spearman correlation:",Natural Language Processing
BioBert-PubMed200kRCT,Text Classification,PyTorch; TensorBoard; Safetensors; Transformers,,,,4,,1452,867.297787,,https://huggingface.co/pritamdeka/BioBert-PubMed200kRCT,"This model is a fine-tuned version of dmis-lab/biobert-base-cased-v1.1 on the PubMed200kRCT dataset.
It achieves the following results on the evaluation set:; More information needed; The model can be used for text classification tasks of Randomized Controlled Trials that does not have any structure. The text can be classified as one of the following:; The model can be directly used like this:; Results will be shown as follows:",Natural Language Processing
resnet-50,Image Classification,PyTorch; TensorFlow; JAX; Transformers,,apache-2.0,https://arxiv.org/pdf/1512.03385.pdf,116,imagenet-1k,3491872,308.0719529,42,https://huggingface.co/microsoft/resnet-50,"ResNet model pre-trained on ImageNet-1k at resolution 224x224. It was introduced in the paper Deep Residual Learning for Image Recognition by He et al. ; Disclaimer: The team releasing ResNet did not write a model card for this model so this model card has been written by the Hugging Face team.; ResNet (Residual Network) is a convolutional neural network that democratized the concepts of residual learning and skip connections. This enables to train much deeper models.; This is ResNet v1.5, which differs from the original model: in the bottleneck blocks which require downsampling, v1 has stride = 2 in the first 1x1 convolution, whereas v1.5 has stride = 2 in the 3x3 convolution. This difference makes ResNet50 v1.5 slightly more accurate (~0.5% top1) than v1, but comes with a small performance drawback (~5% imgs/sec) according to Nvidia.; ",Computer Vision
poem-gen-gpt2-small-spanish,Text Generation,PyTorch; TensorBoard; Transformers,,apache-2.0,,1,,8,510.0064424,,https://huggingface.co/DrishtiSharma/poem-gen-gpt2-small-spanish,"This model is a fine-tuned version of datificate/gpt2-small-spanish on an unknown dataset.
It achieves the following results on the evaluation set:; More information needed; More information needed; More information needed; The following hyperparameters were used during training:",Natural Language Processing
gpt-neo-125M-spanish-classics,Text Generation,PyTorch; Transformers,,,,1,,17,551.002207,,https://huggingface.co/Aleksandar1932/gpt-neo-125M-spanish-classics,No model card; New: Create and edit this model card directly on the website!,Natural Language Processing
keyphrase-extraction-distilbert-inspec,Token Classification,PyTorch; Transformers,English,mit,,16,midas/inspec,3901,266.9389211,2,https://huggingface.co/ml6team/keyphrase-extraction-distilbert-inspec,"Keyphrase extraction is a technique in text analysis where you extract the important keyphrases from a document. Thanks to these keyphrases humans can understand the content of a text very quickly and easily without reading it completely. Keyphrase extraction was first done primarily by human annotators, who read the text in detail and then wrote down the most important keyphrases. The disadvantage is that if you work with a lot of documents, this process can take a lot of time ?. ; Here is where Artificial Intelligence ? comes in. Currently, classical machine learning methods, that use statistical and linguistic features, are widely used for the extraction process. Now with deep learning, it is possible to capture the semantic meaning of a text even better than these classical methods. Classical methods look at the frequency, occurrence and order of words in the text, whereas these neural approaches can capture long-term semantic dependencies and context of words in a text.; This model uses distilbert as its base model and fine-tunes it on the Inspec dataset.; Keyphrase extraction models are transformer models fine-tuned as a token classification problem where each word in the document is classified as being part of a keyphrase or not.; Kulkarni, Mayank, Debanjan Mahata, Ravneet Arora, and Rajarshi Bhowmik. ""Learning Rich Representation of Keyphrases from Text."" arXiv preprint arXiv:2112.08547 (2021).",Natural Language Processing
sbert-chinese-general-v2,Sentence Similarity,PyTorch; Sentence Transformers; Transformers,,,,9,,2251,409.5425123,,https://huggingface.co/DMetaSoul/sbert-chinese-general-v2,´ËÄ£ÐÍ»ùÓÚ bert-base-chinese °æ±¾ BERT Ä£ÐÍ£¬ÔÚ°ÙÍò¼¶ÓïÒåÏàËÆÊý¾Ý¼¯ SimCLUE ÉÏ½øÐÐÑµÁ·£¬ÊÊÓÃÓÚÍ¨ÓÃÓïÒåÆ¥Åä³¡¾°£¬´ÓÐ§¹ûÀ´¿´¸ÃÄ£ÐÍÔÚ¸÷ÖÖÈÎÎñÉÏ·º»¯ÄÜÁ¦¸üºÃ¡£; ×¢£º´ËÄ£ÐÍµÄÇáÁ¿»¯°æ±¾£¬Ò²ÒÑ¾­¿ªÔ´À²£¡; Í¨¹ý  sentence-transformers ¿ò¼ÜÀ´Ê¹ÓÃ¸ÃÄ£ÐÍ£¬Ê×ÏÈ½øÐÐ°²×°£º; È»ºóÊ¹ÓÃÏÂÃæµÄ´úÂëÀ´ÔØÈë¸ÃÄ£ÐÍ²¢½øÐÐÎÄ±¾±íÕ÷ÏòÁ¿µÄÌáÈ¡£º; Èç¹û²»ÏëÊ¹ÓÃ   sentence-transformers µÄ»°£¬Ò²¿ÉÒÔÍ¨¹ý HuggingFace Transformers À´ÔØÈë¸ÃÄ£ÐÍ²¢½øÐÐÎÄ±¾ÏòÁ¿³éÈ¡£º,Natural Language Processing
keyphrase-extraction-kbir-inspec,Token Classification,PyTorch; Transformers,English,mit,https://arxiv.org/pdf/2112.08547.pdf,42,midas/inspec,97509,1457.433641,4,https://huggingface.co/ml6team/keyphrase-extraction-kbir-inspec,"Keyphrase extraction is a technique in text analysis where you extract the important keyphrases from a document. Thanks to these keyphrases humans can understand the content of a text very quickly and easily without reading it completely. Keyphrase extraction was first done primarily by human annotators, who read the text in detail and then wrote down the most important keyphrases. The disadvantage is that if you work with a lot of documents, this process can take a lot of time ?. ; Here is where Artificial Intelligence ? comes in. Currently, classical machine learning methods, that use statistical and linguistic features, are widely used for the extraction process. Now with deep learning, it is possible to capture the semantic meaning of a text even better than these classical methods. Classical methods look at the frequency, occurrence and order of words in the text, whereas these neural approaches can capture long-term semantic dependencies and context of words in a text.; This model uses KBIR as its base model and fine-tunes it on the Inspec dataset. KBIR or Keyphrase Boundary Infilling with Replacement is a pre-trained model which utilizes a multi-task learning setup for optimizing a combined loss of Masked Language Modeling (MLM), Keyphrase Boundary Infilling (KBI) and Keyphrase Replacement Classification (KRC).
You can find more information about the architecture in this paper.; Keyphrase extraction models are transformer models fine-tuned as a token classification problem where each word in the document is classified as being part of a keyphrase or not.; Kulkarni, Mayank, Debanjan Mahata, Ravneet Arora, and Rajarshi Bhowmik. ""Learning Rich Representation of Keyphrases from Text."" arXiv preprint arXiv:2112.08547 (2021).",Natural Language Processing
vit-base-patch16-224-in21k-finetuned-cifar10,Image Classification,PyTorch; TensorBoard; Transformers,,apache-2.0,,5,cifar10,1261,343.0132629,,https://huggingface.co/aaraki/vit-base-patch16-224-in21k-finetuned-cifar10,"This model is a fine-tuned version of google/vit-base-patch16-224-in21k on the cifar10 dataset.
It achieves the following results on the evaluation set:; More information needed; More information needed; More information needed; The following hyperparameters were used during training:",Computer Vision
sbert-chinese-general-v2-distill,Sentence Similarity,PyTorch; Sentence Transformers; Transformers,,,,3,,67,182.5431711,,https://huggingface.co/DMetaSoul/sbert-chinese-general-v2-distill,´ËÄ£ÐÍÊÇÖ®Ç°¿ªÔ´Í¨ÓÃÓïÒåÆ¥ÅäÄ£ÐÍµÄÕôÁó°æ±¾£¨½ö4²ã BERT£©£¬ÊÊÓÃÓÚÍ¨ÓÃÓïÒåÆ¥Åä³¡¾°£¬´ÓÐ§¹ûÀ´¿´¸ÃÄ£ÐÍÔÚ¸÷ÖÖÈÎÎñÉÏ·º»¯ÄÜÁ¦¸üºÃÇÒ±àÂëËÙ¶È¸ü¿ì¡£; ÀëÏßÑµÁ·ºÃµÄ´óÄ£ÐÍÈç¹ûÖ±½ÓÓÃÓÚÏßÉÏÍÆÀí£¬¶Ô¼ÆËã×ÊÔ´ÓÐ¿Á¿ÌµÄÐèÇó£¬¶øÇÒÄÑÒÔÂú×ãÒµÎñ»·¾³¶ÔÑÓ³Ù¡¢ÍÌÍÂÁ¿µÈÐÔÄÜÖ¸±êµÄÒªÇó£¬ÕâÀïÎÒÃÇÊ¹ÓÃÕôÁóÊÖ¶ÎÀ´°Ñ´óÄ£ÐÍÇáÁ¿»¯¡£´Ó 12 ²ã BERT ÕôÁóÎª 4 ²ãºó£¬Ä£ÐÍ²ÎÊýÁ¿ËõÐ¡µ½ 44%£¬´ó¸Å latency ¼õ°ë¡¢throughput ·­±¶¡¢¾«¶ÈÏÂ½µ 6% ×óÓÒ£¨¾ßÌå½á¹ûÏê¼ûÏÂÎÄÆÀ¹ÀÐ¡½Ú£©¡£; Í¨¹ý  sentence-transformers ¿ò¼ÜÀ´Ê¹ÓÃ¸ÃÄ£ÐÍ£¬Ê×ÏÈ½øÐÐ°²×°£º; È»ºóÊ¹ÓÃÏÂÃæµÄ´úÂëÀ´ÔØÈë¸ÃÄ£ÐÍ²¢½øÐÐÎÄ±¾±íÕ÷ÏòÁ¿µÄÌáÈ¡£º; Èç¹û²»ÏëÊ¹ÓÃ   sentence-transformers µÄ»°£¬Ò²¿ÉÒÔÍ¨¹ý HuggingFace Transformers À´ÔØÈë¸ÃÄ£ÐÍ²¢½øÐÐÎÄ±¾ÏòÁ¿³éÈ¡£º,Natural Language Processing
roberta-base-stocktwits-finetuned,Text Classification,PyTorch; Transformers,English,apache-2.0,,18,,325,500.3297791,,https://huggingface.co/zhayunduo/roberta-base-stocktwits-finetuned,"This model is fine tuned with roberta-base model on 3200000 comments from stocktwits, with the user labeled tags 'Bullish' or 'Bearish'; try something that the individual investors may say on the investment forum on the inference API, for example, try 'red' and 'green'.; code on github",Natural Language Processing
stt_en_conformer_ctc_large,Automatic Speech Recognition,NeMo; PyTorch,English,cc-by-4.0,https://arxiv.org/pdf/2005.08100.pdf,19,librispeech_asr; fisher_corpus; Switchboard-1; WSJ-0; WSJ-1; National-Singapore-Corpus-Part-1; National-Singapore-Corpus-Part-6; vctk; VoxPopuli-(EN); Europarl-ASR-(EN); Multilingual-LibriSpeech-(2000-hours); mozilla-foundation/common_voice_7_0,374,451.011123,2,https://huggingface.co/nvidia/stt_en_conformer_ctc_large,"| 
| 
| 
|  |; This model transcribes speech in lowercase English alphabet including spaces and apostrophes, and is trained on several thousand hours of English speech data.
It is a non-autoregressive ""large"" variant of Conformer, with around 120 million parameters.
See the model architecture section and NeMo documentation for complete architecture details.
It is also compatible with NVIDIA Riva for production-grade server deployments. ; The model is available for use in the NeMo toolkit [3], and can be used as a pre-trained checkpoint for inference or for fine-tuning on another dataset.; To train, fine-tune or play with the model you will need to install NVIDIA NeMo. We recommend you install it after you've installed latest PyTorch version.; First, let's get a sample",Audio
PHS-BERT,Fill-Mask,PyTorch; Transformers,,,https://arxiv.org/pdf/2204.04521.pdf,5,,157,1372.790199,1,https://huggingface.co/publichealthsurveillance/PHS-BERT,"We present and release PHS-BERT, a transformer-based pretrained language model (PLM), to identify tasks related to public health surveillance (PHS) on social media. Compared with existing PLMs that are mainly evaluated on limited tasks, PHS-BERT achieved state-of-the-art performance on 25 tested datasets, showing that our PLM is robust and generalizable in common PHS tasks.; Load the model via Huggingface's Transformers library:; We followed the standard pretraining protocols of BERT and initialized PHS-BERT with weights from BERT during the training phase instead of training from scratch and used the uncased version of the BERT model.; PHS-BERT is trained on a corpus of health-related tweets that were crawled via the Twitter API. Focusing on the tasks related to PHS, keywords used to collect pretraining corpus are set to disease, symptom, vaccine, and mental health-related words in English. Retweet tags were deleted from the raw corpus, and URLs and usernames were replaced with HTTP-URL and @USER, respectively. All emoticons were replaced with their associated meanings. ; Each sequence of BERT LM inputs is converted to 50,265 vocabulary tokens. Twitter posts are restricted to 200 characters, and during the training and evaluation phase, we used a batch size of 8. Distributed training was performed on a TPU v3-8.",Natural Language Processing
clip-ViT-L-14,Sentence Similarity,Sentence Transformers,,,https://arxiv.org/pdf/2103.00020.pdf,28,,0,0.003256226,5,https://huggingface.co/sentence-transformers/clip-ViT-L-14,"This is the Image & Text model CLIP, which maps text and images to a shared vector space. For applications of the models, have a look in our documentation SBERT.net - Image Search; After installing sentence-transformers (pip install sentence-transformers), the usage of this model is easy:; See our SBERT.net - Image Search documentation for more examples how the model can be used for image search, zero-shot image classification, image clustering and image deduplication.; In the following table we find the zero-shot ImageNet validation set accuracy:; For a multilingual version of the CLIP model for 50+ languages have a look at: clip-ViT-B-32-multilingual-v1",Natural Language Processing
codegen-16B-mono,Text Generation,PyTorch; Transformers,,bsd-3-clause,https://arxiv.org/pdf/2203.13474.pdf,105,,3472,32976.14094,13,https://huggingface.co/Salesforce/codegen-16B-mono,"CodeGen is a family of autoregressive language models for program synthesis from the paper: A Conversational Paradigm for Program Synthesis by Erik Nijkamp, Bo Pang, Hiroaki Hayashi, Lifu Tu, Huan Wang, Yingbo Zhou, Silvio Savarese, Caiming Xiong. The models are originally released in this repository, under 3 pre-training data variants (NL, Multi, Mono) and 4 model size variants (350M, 2B, 6B, 16B).; The checkpoint included in this repository is denoted as CodeGen-Mono 16B in the paper, where ""Mono"" means the model is initialized with CodeGen-Multi 16B and further pre-trained on a Python programming language dataset, and ""16B"" refers to the number of trainable parameters.; This checkpoint (CodeGen-Mono 16B) was firstly initialized with CodeGen-Multi 16B, and then pre-trained on BigPython dataset. The data consists of 71.7B tokens of Python programming language. See Section 2.1 of the paper for more details.; CodeGen was trained using cross-entropy loss to maximize the likelihood of sequential inputs.
The family of models are trained using multiple TPU-v4-512 by Google, leveraging data and model parallelism.
See Section 2.3 of the paper for more details.; We evaluate our models on two code generation benchmark: HumanEval and MTPB. Please refer to the paper for more details.",Natural Language Processing
BiomedNLP-KRISSBERT-PubMed-UMLS-EL,Feature Extraction,PyTorch; Transformers,English,mit,https://arxiv.org/pdf/2112.07887.pdf,13,,497,438.2281087,,https://huggingface.co/microsoft/BiomedNLP-KRISSBERT-PubMed-UMLS-EL,"https://arxiv.org/pdf/2112.07887.pdf; Entity linking faces significant challenges such as prolific variations and prevalent ambiguities, especially in high-value domains with myriad entities. Standard classification approaches suffer from the annotation bottleneck and cannot effectively handle unseen entities. Zero-shot entity linking has emerged as a promising direction for generalizing to new entities, but it still requires example gold entity mentions during training and canonical descriptions for all entities, both of which are rarely available outside of Wikipedia (Logeswaran et al., 2019; Wu et al., 2020). We explore Knowledge-RIch Self-Supervision (KRISS) and train a contextual encoder (KRISSBERT) for entity linking, by leveraging readily available unlabeled text and domain knowledge.; Specifically, the KRISSBERT model is initialized with PubMedBERT parameters, and then continuously pretrained using biomedical entity names from the UMLS ontology to self-supervise entity linking examples from PubMed abstracts. Experiments on seven standard biomedical entity linking datasets show that KRISSBERT attains new state of the art, outperforming prior self-supervised methods by as much as 20 absolute points in accuracy.
See Zhang et al., 2021 for the details.; Note that some prior systems like BioSyn, SapBERT, and their follow-up work (e.g., Lai et al., 2021) claimed to do entity linking, but their systems completely ignore the context of an entity mention, and can only predict a surface form in the entity dictionary (See Figure 1 in BioSyn), not the canonical entity ID (e.g., CUI in UMLS). Therefore, they can't disambiguate ambiguous mentions. For instance, given the entity mention ""ER"" in the sentence ""ER crowding has become a wide-spread problem"", their systems ignore the sentence context, and simply predict the closest surface form, which is just ""ER"". Multiple entities share this surface form as a potential name or alias, such as Emergency Room (C0562508), Estrogen Receptor Gene (C1414461), and Endoplasmic Reticulum(C0014239). Without using the context information, their systems can't resolve such ambiguity and pinpoint the correct entity Emergency Room (C0562508). More problematically, their evaluation would deem such an ambiguous prediction as correct. Consequently, the reported results in their papers do not reflect true performance on entity linking.; Here, we use the MedMentions data to show you how to 1) generate prototype embeddings, and 2) run entity linking.",Multimodel
tortoise-tts-v2,,,,,https://arxiv.org/pdf/2102.12092.pdf; https://arxiv.org/pdf/2102.09672.pdf; https://arxiv.org/pdf/2106.07889.pdf,109,,0,0.145805893,4,https://huggingface.co/jbetker/tortoise-tts-v2,"Tortoise is a text-to-speech program built with the following priorities:; This repo contains all the code needed to run Tortoise TTS in inference mode.; I'm naming my speech-related repos after Mojave desert flora and fauna. Tortoise is a bit tongue in cheek: this model
is insanely slow. It leverages both an autoregressive decoder and a diffusion decoder; both known for their low
sampling rates. On a K80, expect to generate a medium sized sentence every 2 minutes.; See this page for a large list of example outputs.; If you want to use this on your own computer, you must have an NVIDIA GPU. First, install pytorch using these
instructions: https://pytorch.org/get-started/locally/",
Erlangshen-Roberta-110M-Sentiment,Text Classification,PyTorch; Transformers,Chinese,apache-2.0,https://arxiv.org/pdf/2209.02970.pdf,33,,8608,409.1126432,,https://huggingface.co/IDEA-CCNL/Erlangshen-Roberta-110M-Sentiment,"ÖÐÎÄµÄRoBERTa-wwm-ext-baseÔÚÊý¸öÇé¸Ð·ÖÎöÈÎÎñÎ¢µ÷ºóµÄ°æ±¾; This is the fine-tuned version of the Chinese RoBERTa-wwm-ext-base model on several sentiment analysis datasets.; »ùÓÚchinese-roberta-wwm-ext-base£¬ÎÒÃÇÔÚÊÕ¼¯µÄ8¸öÖÐÎÄÁìÓòµÄÇé¸Ð·ÖÎöÊý¾Ý¼¯£¬×Ü¼Æ227347¸öÑù±¾ÉÏÎ¢µ÷ÁËÒ»¸öSemtiment°æ±¾¡£; Based on chinese-roberta-wwm-ext-base, we fine-tuned a sentiment analysis version on 8 Chinese sentiment analysis datasets, with totaling 227,347 samples.; Èç¹ûÄúÔÚÄúµÄ¹¤×÷ÖÐÊ¹ÓÃÁËÎÒÃÇµÄÄ£ÐÍ£¬¿ÉÒÔÒýÓÃÎÒÃÇµÄÂÛÎÄ£º",Natural Language Processing
SentimentAnalysisDistillBERT,Text Classification,PyTorch; Transformers,English,,,1,Souvikcmsa/autotrain-data-sentiment_analysis,105,268.6874976,,https://huggingface.co/Souvikcmsa/SentimentAnalysisDistillBERT,You can use cURL to access this model:; Or Python API:,Natural Language Processing
distilbert-base-uncased-finetuned-conll03-english-int8-static,Token Classification,PyTorch; Transformers,English,apache-2.0,,1,conll2003,31,68.52521877,,https://huggingface.co/Intel/distilbert-base-uncased-finetuned-conll03-english-int8-static,"This is an INT8  PyTorch model quantized with huggingface/optimum-intel through the usage of Intel? Neural Compressor. ; The original fp32 model comes from the fine-tuned model elastic/distilbert-base-uncased-finetuned-conll03-english.; The calibration dataloader is the train dataloader. The default calibration sampling size 100 isn't divisible exactly by batch size 8, so the real sampling size is 104.",Natural Language Processing
sentiment_analysis,Text Classification,PyTorch; Transformers,English,apache-2.0,https://arxiv.org/pdf/1810.04805.pdf,4,Confidential,8423,268.9284039,1,https://huggingface.co/sbcBI/sentiment_analysis,"Pretrained model on English language using a masked language modeling (MLM) objective. It was introduced in
this paper and first released in
this repository. This model is uncased: it does not make a difference
between english and English.; BERT is a transformers model pretrained on a large corpus of English data in a self-supervised fashion. This means it
was pretrained on the raw texts only, with no humans labelling them in any way (which is why it can use lots of
publicly available data) with an automatic process to generate inputs and labels from those texts. More precisely, it
was pretrained with two objectives:; This way, the model learns an inner representation of the English language that can then be used to extract features
useful for downstream tasks: if you have a dataset of labeled sentences for instance, you can train a standard
classifier using the features produced by the BERT model as inputs.; This is a fine-tuned downstream version of the bert-base-uncased model for sentiment analysis, this model is not intended for
further downstream fine-tuning for any other tasks. This model is trained on a classified dataset for text-classification.",Natural Language Processing
clip-vit-large-patch14-336,Zero-Shot Image Classification,PyTorch; TensorFlow; Transformers,,,,40,,162793,3505.662835,8,https://huggingface.co/openai/clip-vit-large-patch14-336,"This model was trained from scratch on an unknown dataset.
It achieves the following results on the evaluation set:; More information needed; More information needed; More information needed; The following hyperparameters were used during training:",Computer Vision
unite-mup,Fill-Mask,PyTorch; Transformers,,apache-2.0,,1,,5,2328.412082,,https://huggingface.co/ywan/unite-mup,"This model is the multilingual version of ""UniTE: Unified Translation Evaluation"".",Natural Language Processing
mT5_m2o_chinese_simplified_crossSum,Summarization,PyTorch; Transformers,43 languages,,https://arxiv.org/pdf/2112.08804.pdf,12,,1776,2390.240966,,https://huggingface.co/csebuetnlp/mT5_m2o_chinese_simplified_crossSum,"This repository contains the many-to-one (m2o) mT5 checkpoint finetuned on all cross-lingual pairs of the CrossSum dataset, where the target summary was in chinese_simplified, i.e. this model tries to summarize text written in any language in Chinese(Simplified). For finetuning details and scripts, see the paper and the official repository. ; If you use this model, please cite the following paper:",Natural Language Processing
mt5_chinese_small,Summarization,PyTorch; Transformers,Chinese,,,5,,243,1249.451426,,https://huggingface.co/yihsuan/mt5_chinese_small,"license: apache-2.0
tags:; This model is a fine-tuned version of google/mt5-small on the None dataset.
It achieves the following results on the evaluation set:; More information needed; More information needed; More information needed",Natural Language Processing
legalbert-large-1.7M-2,Fill-Mask,PyTorch; Transformers,English,,https://arxiv.org/pdf/1907.11692.pdf; https://arxiv.org/pdf/1810.04805.pdf; https://arxiv.org/pdf/2110.00976.pdf; https://arxiv.org/pdf/2207.00220.pdf,21,pile-of-law/pile-of-law,688,1382.642601,,https://huggingface.co/pile-of-law/legalbert-large-1.7M-2,"Pretrained model on English language legal and administrative text using the RoBERTa pretraining objective. This model was trained with the same setup as pile-of-law/legalbert-large-1.7M-1, but with a different seed.; Pile of Law BERT large 2 is a transformers model with the BERT large model (uncased) architecture pretrained on the Pile of Law, a dataset consisting of ~256GB of English language legal and administrative text for language model pretraining.; You can use the raw model for masked language modeling or fine-tune it for a downstream task. Since this model was pretrained on a English language legal and administrative text corpus, legal downstream tasks will likely be more in-domain for this model.; You can use the model directly with a pipeline for masked language modeling:; Here is how to use this model to get the features of a given text in PyTorch:",Natural Language Processing
amazon-review-sentiment-analysis,Text Classification,PyTorch; TensorBoard; Transformers,,apache-2.0,,11,,5920,673.4210277,2,https://huggingface.co/LiYuan/amazon-review-sentiment-analysis,"This model is a fine-tuned version of nlptown/bert-base-multilingual-uncased-sentiment on an Amazon US Customer Reviews Dataset. The code for the fine-tuning process can be found
here. This model is uncased: it does
not make a difference between english and English.
It achieves the following results on the evaluation set:; This a bert-base-multilingual-uncased model finetuned for sentiment analysis on product reviews in six languages: English, Dutch, German, French, Spanish and Italian. It predicts the sentiment of the review as a number of stars (between 1 and 5).; This model is intended for direct use as a sentiment analysis model for product reviews in any of the six languages above, or for further finetuning on related sentiment analysis tasks.; We replaced its head with our customer reviews to fine-tune it on 17,280 rows of training set while validating it on 4,320 rows of dev set. Finally, we evaluated our model performance on a held-out test set: 2,400 rows.; Bert-base is primarily aimed at being fine-tuned on tasks that use the whole sentence (potentially masked)
to make decisions, such as sequence classification, token classification, or question answering. This fine-tuned version of BERT-base is used to predict review rating star given the review.",Natural Language Processing
layoutlmv3-finetuned-funsd,Token Classification,PyTorch; TensorBoard; Transformers,,,,11,nielsr/funsd-layoutlmv3,1088,504.3494583,3,https://huggingface.co/nielsr/layoutlmv3-finetuned-funsd,"This model is a fine-tuned version of microsoft/layoutlmv3-base on the nielsr/funsd-layoutlmv3 dataset.
It achieves the following results on the evaluation set:; The script for training can be found here: https://github.com/huggingface/transformers/tree/main/examples/research_projects/layoutlmv3; More information needed; More information needed; More information needed",Natural Language Processing
KR-SBERT-V40K-klueNLI-augSTS,Sentence Similarity,PyTorch; Sentence Transformers; Transformers,Korean,,,12,,1667,468.2791319,,https://huggingface.co/snunlp/KR-SBERT-V40K-klueNLI-augSTS,"This is a sentence-transformers model: It maps sentences & paragraphs to a 768 dimensional dense vector space and can be used for tasks like clustering or semantic search.; Using this model becomes easy when you have sentence-transformers installed:; Then you can use the model like this:; Without sentence-transformers, you can use the model like this: First, you pass your input through the transformer model, then you have to apply the right pooling-operation on-top of the contextualized word embeddings.; For an automated evaluation of this model, see the Sentence Embeddings Benchmark: https://seb.sbert.net",Natural Language Processing
sentiment_analysis_model,Text Classification,PyTorch; Transformers,English,apache-2.0,https://arxiv.org/pdf/1810.04805.pdf,3,Confidential,39053,268.9282867,3,https://huggingface.co/sbcBI/sentiment_analysis_model,"Pretrained model on English language using a masked language modeling (MLM) objective. It was introduced in
this paper and first released in
this repository. This model is uncased: it does not make a difference
between english and English.; BERT is a transformers model pretrained on a large corpus of English data in a self-supervised fashion. This means it
was pretrained on the raw texts only, with no humans labelling them in any way (which is why it can use lots of
publicly available data) with an automatic process to generate inputs and labels from those texts. More precisely, it
was pretrained with two objectives:; This way, the model learns an inner representation of the English language that can then be used to extract features
useful for downstream tasks: if you have a dataset of labeled sentences for instance, you can train a standard
classifier using the features produced by the BERT model as inputs.; This is a fine-tuned downstream version of the bert-base-uncased model for sentiment analysis, this model is not intended for
further downstream fine-tuning for any other tasks. This model is trained on a classified dataset for text-classification.",Natural Language Processing
kote_for_easygoing_people,Text Classification,PyTorch; Transformers,,mit,,1,,669,499.1620431,,https://huggingface.co/searle-j/kote_for_easygoing_people,,Natural Language Processing
Wiki-Complexity,Text Classification,PyTorch; JAX; Safetensors; Transformers,English,,,2,hidude562/autotrain-data-SimpleDetect,33,536.6949885,,https://huggingface.co/hidude562/Wiki-Complexity,"This model detects if you are writing in a format that is more similar to Simple English Wikipedia or English Wikipedia. This can be extended to applications that aren't Wikipedia as well and to some extent, it can be used for other languages.; Please also note there is a major bias to special characters (Mainly the hyphen mark, but it also applies to others) so I would recommend removing them from your input text.; You can use cURL to access this model:; Or Python API:",Natural Language Processing
distilbert-base-uncased-finetuned-fashion,Text Classification,PyTorch; TensorBoard; Safetensors; Transformers,,apache-2.0,,3,,27,536.9275272,,https://huggingface.co/rasta/distilbert-base-uncased-finetuned-fashion,"This model is a fine-tuned version of distilbert-base-uncased on a munally created dataset in order to detect fashion (label_0) from non-fashion (label_1) items.
It achieves the following results on the evaluation set:; The following hyperparameters were used during training:",Natural Language Processing
layoutlmv3-funsd-v2,Token Classification,PyTorch; Safetensors; Transformers,,,,2,,47,1002.002549,,https://huggingface.co/nielsr/layoutlmv3-funsd-v2,No model card; New: Create and edit this model card directly on the website!,Natural Language Processing
finbert-fls,Text Classification,PyTorch; Transformers,English,,,13,,10096,439.2261164,11,https://huggingface.co/yiyanghkust/finbert-fls,"Forward-looking statements (FLS) inform investors of managers¡¯ beliefs and opinions about firm's future events or results. Identifying forward-looking statements from corporate reports can assist investors in financial analysis. FinBERT-FLS is a FinBERT model fine-tuned on 3,500 manually annotated sentences from Management Discussion and Analysis section of annual reports of Russell 3000 firms.  ; Input: A financial text.; Output: Specific-FLS , Non-specific FLS, or Not-FLS.; You can use this model with Transformers pipeline for forward-looking statement classification.; Visit FinBERT.AI for more details on the recent development of FinBERT.",Natural Language Processing
finbert-esg,Text Classification,PyTorch; Transformers,English,,,25,,104390,439.2261843,5,https://huggingface.co/yiyanghkust/finbert-esg,"ESG analysis can help investors determine a business' long-term sustainability and identify associated risks. FinBERT-ESG is a FinBERT model fine-tuned on 2,000 manually annotated sentences from firms' ESG reports and annual reports.  ; Input: A financial text.; Output: Environmental, Social, Governance or None.; You can use this model with Transformers pipeline for ESG classification.; Visit FinBERT.AI for more details on the recent development of FinBERT.",Natural Language Processing
yolo_v5s_animal_det_512x512_quant_n2x_cpu_1,,,,,,1,,0,7.94298069,,https://huggingface.co/degirum/yolo_v5s_animal_det_512x512_quant_n2x_cpu_1,"No model card; New: Create and edit this model card directly on the website!; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
yolo_v5s_face_det_512x512_quant_n2x_cpu_1,,,,,,1,,0,7.822226105,,https://huggingface.co/degirum/yolo_v5s_face_det_512x512_quant_n2x_cpu_1,"No model card; New: Create and edit this model card directly on the website!; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
yolo_v5s_household_objects_512x512_quant_n2x_cpu_1,,,,,,1,,0,7.862588959,,https://huggingface.co/degirum/yolo_v5s_household_objects_512x512_quant_n2x_cpu_1,"No model card; New: Create and edit this model card directly on the website!; Unable to determine this model¡¯s pipeline type. Check the
								docs 
.
							",
autotrain-smm4h_large_roberta_clean-874027878,Text Classification,PyTorch; Transformers,unk,,,1,Amalq/autotrain-data-smm4h_large_roberta_clean,39,1456.67348,,https://huggingface.co/Amalq/autotrain-smm4h_large_roberta_clean-874027878,You can use cURL to access this model:; Or Python API:,Natural Language Processing
gpt-4chan,Text Generation,PyTorch; Transformers,English,apache-2.0,https://arxiv.org/pdf/2109.07958.pdf,111,,,0,,https://huggingface.co/ykilcher/gpt-4chan,"Given its research scope, intentionally using the model for generating harmful content (non-exhaustive examples: hate speech, spam generation, fake news, harassment and abuse, disparagement, and defamation) on all websites where bots are prohibited is considered a misuse of this model. Head over to the Community page for further discussion and potential next steps.; Project Website: https://gpt-4chan.com; Note that I have no association with any torrents or backups, or other ways of obtaining this model.
However, if you try them, please be safe. Here are the hex md5 hashes for the pytorch_model.bin files:
pytorch_model.bin float32 : 833c1dc19b7450e4e559a9917b7d076a
pytorch_model.bin float16 : db3105866c9563b26f7399fafc00bb4b; GPT-4chan is a language model fine-tuned from GPT-J 6B on 3.5 years worth of data from 4chan's politically incorrect (/pol/) board. ; GPT-4chan was fine-tuned on the dataset Raiders of the Lost Kek: 3.5 Years of Augmented 4chan Posts from the Politically Incorrect Board.",Natural Language Processing
t5-base-tag-generation,Text2Text Generation,PyTorch; TensorBoard; Transformers,,apache-2.0,,29,,98035,894.4329226,1,https://huggingface.co/fabiochiu/t5-base-tag-generation,"This model is t5-base fine-tuned on the 190k Medium Articles dataset for predicting article tags using the article textual content as input. While usually formulated as a multi-label classification problem, this model deals with tag generation as a text2text generation task (inspiration from text2tags).; The dataset is composed of Medium articles and their tags. However, each Medium article can have at most five tags, therefore the author needs to choose what he/she believes are the best tags (mainly for SEO-related purposes). This means that an article with the ""Python"" tag may have not the ""Programming Languages"" tag, even though the first implies the latter.; To clean the dataset accounting for this problem, a hand-made taxonomy of about 1000 tags was built. Using the taxonomy, the tags of each articles have been augmented (e.g. an article with the ""Python"" tag will have the ""Programming Languages"" tag as well, as the taxonomy says that ""Python"" is part of ""Programming Languages""). The taxonomy is not public, if you are interested in it please send an email at chiusanofabio94@gmail.com.; The model has been trained on a single epoch spanning about 50000 articles, evaluating on 1000 random articles not used during training.; The following hyperparameters were used during training:",Natural Language Processing
bloom-7b1,Text Generation,PyTorch; JAX; Transformers,48 languages,bigscience-bloom-rail-1.0,https://arxiv.org/pdf/1909.08053.pdf; https://arxiv.org/pdf/2110.02861.pdf; https://arxiv.org/pdf/2108.12409.pdf,121,,53365,28973.31594,11,https://huggingface.co/bigscience/bloom-7b1,Version 1.0 / 26.May.2022; This section provides information for anyone who wants to know about the model.; Developed by: BigScience (website); Model Type: Transformer-based Language Model; Version: 1.0.0,Natural Language Processing
tk-instruct-base-def-pos,Text2Text Generation,PyTorch; Transformers,English,apache-2.0,https://arxiv.org/pdf/1910.10683.pdf; https://arxiv.org/pdf/2204.07705.pdf,7,Super-NaturalInstructions,1655,498.9609421,1,https://huggingface.co/allenai/tk-instruct-base-def-pos,"Tk-Instruct is a series of encoder-decoder Transformer models that are trained to solve various NLP tasks by following in-context instructions (plain language task definitions, k-shot examples, explanations, etc). Built upon the pre-trained T5 models, they are fine-tuned on a large number of tasks & instructions that are collected in the Natural Instructions benchmark, which contains 1600+ tasks in 70+ broach categories in total. This enables the model to not only process the training tasks, but also generalize to many unseen tasks without further parameter update.; More resources for using the model:; Tk-Instruct can be used to do many NLP tasks by following instructions. ; When instructing the model, task definition or demonstration examples or explanations should be prepended to the original input and fed into the model. You can easily try Tk-Instruct models as follows:; We are still working on understanding the behaviors of these models, but here are several issues we have found:",Natural Language Processing
bert-base-uncased_German_MultiLable_classification,Text Classification,TensorFlow; Transformers,German,apache-2.0,,1,,34,437.9633434,,https://huggingface.co/Tobias/bert-base-uncased_German_MultiLable_classification,A model trained on German Hotel Reviews from Switzerland. The base model is the bert-base-german-cased. The last hidden layer of the base model was extracted and a classification layer was added. The entire model was then trained for 5 epochs on our dataset.; ,Natural Language Processing
language-detection,Text Classification,PyTorch; TensorFlow; Transformers,,mit,https://arxiv.org/pdf/1911.02116.pdf,9,,5028,2287.438851,,https://huggingface.co/eleldar/language-detection,"This model is a fine-tuned version of xlm-roberta-base on the Language Identification dataset.; This model is an XLM-RoBERTa transformer model with a classification head on top (i.e. a linear layer on top of the pooled output). 
For additional information please refer to the xlm-roberta-base model card or to the paper Unsupervised Cross-lingual Representation Learning at Scale by Conneau et al.; You can directly use this model as a language detector, i.e. for sequence classification tasks. Currently, it supports the following 20 languages: ; arabic (ar), bulgarian (bg), german (de), modern greek (el), english (en), spanish (es), french (fr), hindi (hi), italian (it), japanese (ja), dutch (nl), polish (pl), portuguese (pt), russian (ru), swahili (sw), thai (th), turkish (tr), urdu (ur), vietnamese (vi), and chinese (zh); The model was fine-tuned on the Language Identification dataset, which consists of text sequences in 20 languages. The training set contains 70k samples, while the validation and test sets 10k each. The average accuracy on the test set is 99.6% (this matches the average macro/weighted F1-score being the test set perfectly balanced). A more detailed evaluation is provided by the following table.",Natural Language Processing
fastspeech2-en-male1,Text-to-Speech,Fairseq,English,,https://arxiv.org/pdf/2006.04558.pdf; https://arxiv.org/pdf/2109.06912.pdf,19,common_voice,608,603.8316526,2,https://huggingface.co/Voicemod/fastspeech2-en-male1,FastSpeech 2 text-to-speech model from fairseq S^2 (paper/code):; See also fairseq S^2 example.,Audio
tts-tacotron2-ljspeech,Text-to-Speech,speechbrain,English,apache-2.0,https://arxiv.org/pdf/1712.05884.pdf; https://arxiv.org/pdf/2106.04624.pdf,80,LJSpeech,3557,113.0072079,11,https://huggingface.co/speechbrain/tts-tacotron2-ljspeech,"This repository provides all the necessary tools for Text-to-Speech (TTS)  with SpeechBrain using a Tacotron2 pretrained on LJSpeech.; The pre-trained model takes in input a short text and produces a spectrogram in output. One can get the final waveform by applying a vocoder (e.g., HiFIGAN) on top of the generated spectrogram.; Please notice that we encourage you to read our tutorials and learn more about
SpeechBrain.; If you want to generate multiple sentences in one-shot, you can do in this way:; To perform inference on the GPU, add  run_opts={""device"":""cuda""}  when calling the from_hparams method.",Audio
tts-hifigan-ljspeech,Text-to-Speech,speechbrain,English,apache-2.0,https://arxiv.org/pdf/2010.05646.pdf,13,LJSpeech,3807,55.8047168,2,https://huggingface.co/speechbrain/tts-hifigan-ljspeech,"This repository provides all the necessary tools for using a HiFIGAN vocoder trained with LJSpeech. ; The pre-trained model takes in input a spectrogram and produces a waveform in output. Typically, a vocoder is used after a TTS model that converts an input text into a spectrogram.; The sampling frequency is 22050 Hz.; Please notice that we encourage you to read our tutorials and learn more about
SpeechBrain.; To perform inference on the GPU, add  run_opts={""device"":""cuda""}  when calling the from_hparams method.",Audio
mobilevit-small,Image Classification,PyTorch; TensorFlow; Core ML; Transformers,,other,https://arxiv.org/pdf/2110.02178.pdf,22,imagenet-1k,6185,45.37437756,2,https://huggingface.co/apple/mobilevit-small,"MobileViT model pre-trained on ImageNet-1k at resolution 256x256. It was introduced in MobileViT: Light-weight, General-purpose, and Mobile-friendly Vision Transformer by Sachin Mehta and Mohammad Rastegari, and first released in this repository. The license used is Apple sample code license.; Disclaimer: The team releasing MobileViT did not write a model card for this model so this model card has been written by the Hugging Face team.; MobileViT is a light-weight, low latency convolutional neural network that combines MobileNetV2-style layers with a new block that replaces local processing in convolutions with global processing using transformers. As with ViT (Vision Transformer), the image data is converted into flattened patches before it is processed by the transformer layers. Afterwards, the patches are ""unflattened"" back into feature maps. This allows the MobileViT-block to be placed anywhere inside a CNN. MobileViT does not require any positional embeddings.; You can use the raw model for image classification. See the model hub to look for fine-tuned versions on a task that interests you.; Here is how to use this model to classify an image of the COCO 2017 dataset into one of the 1,000 ImageNet classes:",Computer Vision
chinese-hubert-base,Feature Extraction,PyTorch; Transformers,,mit,,11,,2072,1545.363855,1,https://huggingface.co/TencentGameMate/chinese-hubert-base,"Pretrained on 10k hours WenetSpeech L subset. More details in  TencentGameMate/chinese_speech_pretrain; This model does not have a tokenizer as it was pretrained on audio alone. 
In order to use this model speech recognition, a tokenizer should be created and the model should be fine-tuned on labeled text data.; python package:
transformers==4.16.2",Multimodel
mtl-data-to-text,Text2Text Generation,PyTorch; Transformers,English,apache-2.0,https://arxiv.org/pdf/2206.12131.pdf,7,,483,1672.559446,,https://huggingface.co/RUCAIBox/mtl-data-to-text,"The MTL-data-to-text model was proposed in MVP: Multi-task Supervised Pre-training for Natural Language Generation by Tianyi Tang, Junyi Li, Wayne Xin Zhao and Ji-Rong Wen.; The detailed information and instructions can be found https://github.com/RUCAIBox/MVP.; MTL-data-to-text is supervised pre-trained using a mixture of labeled data-to-text datasets. It is a variant (Single) of our main MVP model. It follows a standard Transformer encoder-decoder architecture.; MTL-data-to-text is specially designed for data-to-text generation tasks, such as KG-to-text generation (WebNLG, DART), table-to-text generation (WikiBio, ToTTo) and MR-to-text generation (E2E).; MVP: https://huggingface.co/RUCAIBox/mvp.",Natural Language Processing
t5-arabic-text-summarization,Text2Text Generation,PyTorch; Transformers,Arabic,,,6,,3770,1159.590168,2,https://huggingface.co/malmarjeh/t5-arabic-text-summarization,"A fine-tuned AraT5 model on a dataset of 84,764 paragraph-summary pairs.; Paper: Arabic abstractive text summarization using RNN-based and transformer-based architectures.; Dataset: link.; The model can be used as follows:; banimarje@gmail.com",Natural Language Processing
icebert-xlmr-ic3-iec,Token Classification,PyTorch; Transformers,,cc-by-4.0,,1,,12,1160.532176,,https://huggingface.co/vesteinn/icebert-xlmr-ic3-iec,,Natural Language Processing
vit_base-224-in21k-ft-cifar100,Image Classification,PyTorch; Transformers,Spanish,apache-2.0,https://arxiv.org/pdf/2006.03677.pdf,1,cifar100,2712,344.0114838,,https://huggingface.co/edumunozsala/vit_base-224-in21k-ft-cifar100,"This model was trained using Amazon SageMaker and the Hugging Face Deep Learning container,
The base model is Vision Transformer (base-sized model) which  is a transformer encoder model (BERT-like) pretrained on a large collection of images in a supervised fashion, namely ImageNet-21k, at a resolution of 224x224 pixels.Link to base model ; Link to dataset description; The CIFAR-10 and CIFAR-100 are labeled subsets of the 80 million tiny images dataset. They were collected by Alex Krizhevsky, Vinod Nair, and Geoffrey Hinton; The CIFAR-10 dataset consists of 60000 32x32 colour images in 10 classes, with 6000 images per class. There are 50000 training images and 10000 test images.
This dataset,CIFAR100, is just like the CIFAR-10, except it has 100 classes containing 600 images each. There are 500 training images and 100 testing images per class. The 100 classes in the CIFAR-100 are grouped into 20 superclasses. Each image comes with a ""fine"" label (the class to which it belongs) and a ""coarse"" label (the superclass to which it belongs).; Sizes of datasets:",Computer Vision
tab_transformer,Tabular Classification,TensorBoard; Keras,,,,10,,9,2.880546875,1,https://huggingface.co/keras-io/tab_transformer,"This repo contains the trained model of Structured data learning with TabTransformer.
The full credit goes to: Khalid Salama; Spaces Link: ; The following hyperparameters were used during training:; Model history needed; ",Tabular
swinv2-tiny-patch4-window8-256,Image Classification,PyTorch; Transformers,,apache-2.0,https://arxiv.org/pdf/2111.09883.pdf,3,imagenet-1k,5658,113.073725,1,https://huggingface.co/microsoft/swinv2-tiny-patch4-window8-256,"Swin Transformer v2 model pre-trained on ImageNet-1k at resolution 256x256. It was introduced in the paper Swin Transformer V2: Scaling Up Capacity and Resolution by Liu et al. and first released in this repository. ; Disclaimer: The team releasing Swin Transformer v2 did not write a model card for this model so this model card has been written by the Hugging Face team.; The Swin Transformer is a type of Vision Transformer. It builds hierarchical feature maps by merging image patches (shown in gray) in deeper layers and has linear computation complexity to input image size due to computation of self-attention only within each local window (shown in red). It can thus serve as a general-purpose backbone for both image classification and dense recognition tasks. In contrast, previous vision Transformers produce feature maps of a single low resolution and have quadratic computation complexity to input image size due to computation of self-attention globally.; Swin Transformer v2 adds 3 main improvements: 1) a residual-post-norm method combined with cosine attention to improve training stability; 2) a log-spaced continuous position bias method to effectively transfer models pre-trained using low-resolution images to downstream tasks with high-resolution inputs; 3) a self-supervised pre-training method, SimMIM, to reduce the needs of vast labeled images.; ",Computer Vision
